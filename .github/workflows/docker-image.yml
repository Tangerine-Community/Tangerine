name: Docker Image CI

on:
  release:
    types: [created]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        # list of Docker images to use as base name for tags
        images: |
          tangerine/tangerine
        # generate Docker tags based on the following events/attributes
        tags: |
          type=semver,pattern={{raw}}
    - name: npm install online-survey-app
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
        useRollingCache: true
        working-directory:  online-survey-app
    - name: List files in online-survey-app
      run: ls ./online-survey-app
    - name: npm install server
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
        useRollingCache: true
        working-directory: server
    - name: npm install editor
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
        useRollingCache: true
        working-directory: editor
    - name: npm install client
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
        useRollingCache: true
        working-directory: client
    - name: npm install client/pwa-tools/service-worker-generator
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
        useRollingCache: true
        working-directory: client/pwa-tools/service-worker-generator
    - name: npm install client/pwa-tools/updater-app
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
        useRollingCache: true
        working-directory: client/pwa-tools/updater-app
    - name: Install updater-app
      uses: bahmutov/npm-install@v1
      with:
        useLockFile: false
        useRollingCache: true
        working-directory: client/pwa-tools/updater-app
        install-command: ./node_modules/.bin/bower install --allow-root
    - name: Build online-survey-app
      working-directory:  online-survey-app
      run: ./node_modules/.bin/ng build --base-href "./"
    - name: Build client
      working-directory:  client
      run: ./node_modules/.bin/ng build --base-href "./" -c production
    - name: Build editor
      working-directory:  editor
      run: ./node_modules/.bin/ng build --base-href "./" -c production
    - name: Build updater-app
      working-directory:  client/pwa-tools/updater-app
      run: npm run build
    - name: List files in root
      run: ls

  push_to_docker_hub:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
#    - name: checkout repo
#      uses: actions/checkout@v3
    - name: Reset dockerignore
      run: |
        echo "*" > .dockerignore
        echo "!dist" >> .dockerignore
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: 'amd64'
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: |
          network=host
    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        context: .
        file: Dockerfile-unitary-GH
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha
