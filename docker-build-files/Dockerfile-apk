FROM alvrme/alpine-android:android-35-jdk21

RUN apk add --update nodejs npm
# Install Cordova and other useful globals
RUN npm update && \
    npm install -g cordova@12.0.0

RUN mkdir -p /tangerine/client/builds/apk

ADD cordova /tangerine/client/builds/apk/

WORKDIR /tangerine/client/builds/apk

RUN cordova platform add android@14 && sleep 5

RUN cordova plugin add cordova-plugin-geolocation@5.0.0 --save && sleep 5
RUN cordova plugin add cordova-plugin-camera@7.0.0 --save && sleep 5
RUN cordova plugin add cordova-plugin-file@8.1.3 --save && sleep 5
RUN cordova plugin add cordova-plugin-androidx --save && sleep 5
RUN cordova plugin add cordova-plugin-androidx-adapter --save && sleep 5
RUN cordova plugin add github:Tangerine-Community/cordova-hot-code-push --save && sleep 5
RUN cordova plugin add cordova-plugin-nearby-connections@0.6.1 --save && sleep 5
RUN cordova plugin add cordova-sms-plugin --save && sleep 5
RUN cordova plugin add cordova-plugin-android-permissions --save && sleep 5
RUN cordova plugin add github:brodybits/cordova-plugin-sqlcipher-crypto-batch-connection-manager-core-pro-free#unstable-build-2020-07-15-01 --save && sleep 5
RUN cordova plugin add cordova-sqlite-storage-file --save && sleep 5
RUN cordova plugin add cordova-plugin-x-socialsharing --save && sleep 5

#RUN echo "export JAVA_HOME=$(dirname $(dirname $(readlink -f $(type -P java))))" > /etc/profile.d/javahome.sh

# Install Gradle
#ENV GRADLE_URL https://services.gradle.org/distributions/gradle-7.3.3-all.zip
#RUN wget -q $GRADLE_URL -O gradle.zip \
# && unzip -qq gradle.zip \
# && mv gradle-7.3.3 gradle \
# && mkdir /root/.gradle
#
## Support Gradle
#ENV GRADLE_HOME /opt/gradle
#ENV PATH="${PATH}:${GRADLE_HOME}/bin"
#ENV JAVA_OPTS "-Xms512m -Xmx1536m"
#ENV CORDOVA_ANDROID_GRADLE_DISTRIBUTION_URL=file:///opt/gradle.zip

RUN apk add --update bash vim curl wget jq git tar unzip bash-completion gradle

## No need to warm up cordova
# RUN cordova build

## Install apk-generator.
ADD ./apk-generator/package.json /tangerine/apk-generator/package.json
RUN cd /tangerine/apk-generator && \
    npm install

## Build apk-generator.
ADD apk-generator /tangerine/apk-generator

RUN cd /tangerine/apk-generator && \
    npm link

ADD online-survey-app/package.json /tangerine/online-survey-app/package.json
RUN cd /tangerine/online-survey-app/ && \
#    export NODE_OPTIONS=--openssl-legacy-provider && \
    npm install

## Install client.
ADD client/package.json /tangerine/client/package.json
RUN cd /tangerine/client/ && \
    npm install

# Install PWA tools.
ADD client/pwa-tools/service-worker-generator/package.json /tangerine/client/pwa-tools/service-worker-generator/package.json
ADD client/pwa-tools/service-worker-generator/workbox-config.js /tangerine/client/pwa-tools/service-worker-generator/workbox-config.js
RUN cd /tangerine/client/pwa-tools/service-worker-generator && \
    npm install
ADD client/pwa-tools/updater-app/package.json /tangerine/client/pwa-tools/updater-app/package.json
ADD client/pwa-tools/updater-app/bower.json /tangerine/client/pwa-tools/updater-app/bower.json
ADD client/pwa-tools/updater-app/build /tangerine/client/pwa-tools/updater-app/build
RUN cd /tangerine/client/pwa-tools/updater-app && \
    npm install && \
    ./node_modules/.bin/bower install --allow-root

ADD tangy-form /tangerine/tangy-form/
RUN cd /tangerine/tangy-form && \
    npm install
#ADD tangy-form-editor /tangerine/tangy-form-editor/
#RUN cd /tangerine/tangy-form-editor && \
#    npm install

# Build online-survey-app.
ADD online-survey-app /tangerine/online-survey-app/
RUN cd /tangerine/online-survey-app && \
#    export NODE_OPTIONS=--openssl-legacy-provider && \
    ./node_modules/.bin/ng build --base-href "./"

# build client.
ADD client /tangerine/client
RUN cd /tangerine/client && \
    ./node_modules/.bin/ng build --base-href "./" -c production

# Build PWA tools.
RUN cd /tangerine/client/pwa-tools/updater-app && \
    npm run build && \
    cp logo.svg build/default/

# Package release sources for APK and PWA.
RUN cd /tangerine/client && \
    cp -r dist/tangerine-client builds/apk/www/shell && \
    cp -r pwa-tools/updater-app/build/default builds/pwa && \
    mkdir builds/pwa/release-uuid && \
    cp -r dist/tangerine-client builds/pwa/release-uuid/app

# Modify links to javascript modules because they won't work in an APK (Angular 8 work-around)
RUN sed -i 's/type="module"/type="text\/javascript"/g' /tangerine/client/builds/apk/www/shell/index.html

# Copy the logo
ADD logo.svg /tangerine/logo.svg

WORKDIR /tangerine/apk-generator

EXPOSE 80

ADD entrypoint-apk-generator.sh /tangerine
CMD ["/tangerine/entrypoint-apk-generator.sh"]

# Used for testing...
#CMD ["/bin/bash"]
