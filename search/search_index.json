{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#getting-started-with-tangerine","title":"Getting started with Tangerine","text":"Quick Start Guide <p>End user documentation</p> Learn More Get Involved  <p>Developer documentation</p> Learn More Product Suite  <p>Select from pre-build tested products</p> Learn More Learn <p>Access the Tangerine Academy</p> Learn More"},{"location":"#hosting","title":"Hosting","text":"Sign up for Hosted Service <p>Sign up for a hosted plan with Tangerine Subscription</p> Learn More Setup your own Platform <p>Guide for setting up your site locally, on-prem or through a cloud service provider</p> Learn More"},{"location":"#key-features","title":"Key Features","text":"Core Functionality &amp; Form Building <p> <ul><li>Flexible form building </li> <li>Diverse questioning types  </li> <li>Customizable design  </li> <li>Product Suite</li> </ul> </p> Data Collection Methods <p><ul><li>Offline data collection via app</li> <li>Online forms </li> </ul> </p> Data Quality &amp; Management <p> <ul><li>Data validation and quality control </li> <li>Conditional logic workflows </li> <li>Data security and privacys </li> </ul> </p> User &amp; System Management <p> <li>User and roles management</li> <li>Multilingual support  </li> </p> Advanced Features &amp; Automation <p> <ul><li>Automated workflows </li> <li>Custom scripting </li> <li>Predefined content sets </li> </ul> </p> Foundational Aspect <p> <ul><li>Free and reliable platform </li> <li>In use since 2012  </li> <li>Hundreds of data collections  </li> </ul> </p>"},{"location":"#how-it-works","title":"How it works","text":"<p>In Tangerine, the workflow is comprised of 4 steps:</p> <ol> <li>Design your data collection forms in your favorite editor (Word, Excel, etc)</li> <li>Digitize your forms and  create an app for deployment, </li> <li>Install the app onto the device, conduct your data collection and upload your form results from the tablet</li> <li>Access your data on the backend by exporting a CSV file</li> </ol> <p></p>"},{"location":"#how-to-contribute-documentation","title":"How to Contribute Documentation","text":"<p>Contribute Documentation</p>"},{"location":"CONTRIBUTING/","title":"How to Contribute Documentation","text":"<p>Documentation in Tangerine is managed using the same process as all code contributions. In short, all changes should be completed within a feature-branch or fork of Tangerine and submitted as a pull request to the \"next\" branch.</p>"},{"location":"CONTRIBUTING/#documentation-overview","title":"Documentation Overview","text":"<p>Tangerine documentation is written using Markdown as the standard source. Documentation is compiled using MkDocs and is available within GitHub Pages. Links are as follows:</p> <ul> <li>GitHub Pages: https://docs.tangerinecentral.org/</li> </ul>"},{"location":"CONTRIBUTING/#documentation-standards","title":"Documentation Standards","text":"<p>All documentation must be created and published using Markdown (.md) files and must reside in the <code>docs/</code> folder or a subdirectory of the <code>docs</code> folder.</p>"},{"location":"CONTRIBUTING/#adding-your-document-to-the-navigation","title":"Adding your Document to the Navigation","text":"<p>Please follow the instructions on the MkDocs Documentation for adding pages to the navigation. The <code>mkdocs.yml</code> file can be found at the root level of the Tangerine repository.</p> <pre><code>...\nnav:\n    - Home: index.md\n    - About: about.md\n...\n</code></pre>"},{"location":"CONTRIBUTING/#setting-up-your-environment-for-local-documentation-development","title":"Setting up your Environment for Local Documentation Development","text":"<p>Since Tangerine documentation is written in Markdown it's not necessary to have a full local development environment setup to add or modify documentation. That said, if you're making significant changes you may desire to have the ability to build the documentation locally. If you are on Mac OS, you will first need to install python 3. This tutorial worked great for RJ. Make sure to follow the \"What to do\" section, not the others. Then in the top level tangerine directory, run the following commands to install dependencies. If any of the commands fail, try running the failed command again (that worked for R.J.). </p> <pre><code>pip install mkdocs\npip install mkdocs-material\npip install mkdocs-git-revision-date-localized-plugin\npip install mkdocs-awesome-pages-plugin\npip install mkdocs-minify-plugin\n</code></pre> <p>Now you have everything installed, get started viewing content by running the following in the <code>tangerine</code> root directory (not the <code>tangerine/docs/</code> directory!)...</p> <pre><code>mkdocs serve\n</code></pre>"},{"location":"about/","title":"About Tangerine","text":"<p>Tangerine is an electronic data collection platform designed for use on Android mobile devices. Its primary use is to enable offline data capture in low-resource areas. It is used in education, health, agriculture, and other areas.</p> <p>Tangerine was first developed to capture student responses in in oral early grade reading and mathematics skills assessments, specifically Early Grade Reading Assessment (EGRA) and Early Grade Mathematics Assessment (EGMA). As well as capture interview responses from students, teachers and principals on home and school context information. Tangerine's capabilities have been expanded for data capture and management for rural health intervention projects.</p> <p>Using Tangerine improves data quality and the efficiency of data collection and analysis by simplifying the preparation and implementation of field work, reducing measurement and data entry errors, and eliminating manual data entry from paper forms.</p> <p>Tangerine was developed in 2011 by RTI International with its own internal research funds and made available to the public through a GNU General Public License. RTI redesigned Tangerine and developed a new codebase using latest technologies in 2018 with funding support from Google.org. As an open-source software platform Tangerine's source code is available for anyone who wishes to install and use Tangerine on their own web server. Tangerine's source code and related documentation is available on Github, a commonly used repository for open-source software. To learn more and have a look under the hood, check out Tangerine's Code Repositories on Github.</p>"},{"location":"about/#get-in-touch","title":"Get in touch","text":"<p>Get in Touch</p>"},{"location":"data-security/","title":"Data security","text":""},{"location":"data-security/#data-privacy-and-security","title":"Data privacy and security","text":"<p>Tangerine is designed with data security in mind. Our servers undergo audits in compliance with RTI security policies and adhere to industry security standards. Access is strictly controlled and limited to authorized development team members, solely for the purposes of support, maintenance, and configuration. All data collected on devices is encrypted to ensure it remains protected, and the communication between mobile application and server also uses a secured channel. User registration is required for both mobile application and the web platform, ensuring that only authorized users can access the collected data. Additionally, Tangerine provides built-in obfuscated data export functionality for enhanced data privacy.</p>"},{"location":"data-security/#transparency","title":"Transparency","text":"<p>Tangerine is transparent throughout the life cycle of data. All data collected on the mobile application is data which was included by design on your forms \u2013 no extra information is recorded or transferred elsewhere. All results data remains your property and is never shared with third parties or accessed by RTI. Data and form content can be reviewed on demand to aid the resolution of a support request.  Data privacy laws and requirements may differ by country. Recognizing this, we offer servers in various locations and regions. Your form design is important and must comply with those rules. For example, include randomized IDs, when you are not allowed to collect personal information; and include a consent input as prove that the participant has agreed to take part in your study. </p>"},{"location":"data-security/#safeguards","title":"Safeguards","text":"<p>Tangerine ensures safe spaces for data collection by assigning web platform project users to access roles. By default, the application supports two user access roles: Admin and Member. Admin users have full access to all features within their assigned groups, while Member users have limited access, typically restricted to viewing data. The flexible role-based system allows for the creation of custom roles with specific permissions (role with form editing capabilities only). Any data collected using Tangerine\u2019s mobile application is securely stored and can only be accessed by the person who collected the data, or authorized personnel, controlled by authentication and user role assignment, through a data export on the web platform. Complying with regulations like GDPR, you can request data removal at any time, and removal of backups.</p>"},{"location":"get-involved/","title":"Get involved","text":"Administrator Go to Guides Developers Guides  Go to Guides"},{"location":"navigation/","title":"Other Resources","text":"<ul> <li>How to contribute documentation</li> <li>Issue Queue</li> <li>Code</li> <li>Releases</li> <li>Technical Chat</li> <li>Tangerine Academy</li> <li>Tangerine Central</li> </ul>"},{"location":"whats-new/","title":"What's new","text":""},{"location":"whats-new/#v3321","title":"v3.32.1","text":"<p>General Updates</p> <ul> <li>#3776 Add platform config variable T_USER_SHORT_CODE_LENGTH to set the length of the user short code</li> </ul> <p>Enables configuration of the length of the user profile short code, which are used in Tangerine Sync Protocol 1 to import existing responses into a device. The default length in 6 characters. Tangerine users with custom userProfileIds should consider increasing the value to avoid duplicate ids. To change the value, set <code>T_USER_SHORT_CODE_LENGTH</code> in the <code>config.sh</code> file to set the length of the user short code, then run <code>docker exec -it tangerine push-all-groups-views</code>.</p> <ul> <li>Add shared csv template parameter to generate csv data sets script and API</li> </ul> <p>The <code>/api/create/csvDataSets/</code> API and script called generate-csv-data-sets are useful to generate CSV Data Sets (Spreadsheets) across all forms in all groups. This change adds a second parameter called <code>sharedCsvTemplateId</code> which is the CouchDB Id of a Spreadsheet Template stored in the groups database named <code>group-&lt;id&gt;-csv-templates</code>. When the parameter is provided to the script or API, the CSV Template will be applied to control the headers on the CSV datasets produced by the process. Only CSVs will be produced for groups that have the <code>sharedCsvTemplateId</code> template in the <code>group-&lt;id&gt;-csv-templates</code> database.</p> <ul> <li>Format Form Titles in Tangerine Web UI to show the form title or form id with translations</li> <li>Fixes #3735</li> <li>Closes #3751</li> </ul> <p>Form Titles will now appear in more places in the Tangerine Web UI for improved readability. If the form title doesn't contain <code>t-lang</code> tag, return the text. Otherwise, it will use the English translation if it exists or the first translation if there's no English version of the title. Use the same heuristic in the pipe when creating and naming csv files.</p> <ul> <li>Tangy Audio Recording and Audio Playback Inputs</li> </ul> <p>Two new inputs are available for recording and playing back audio.</p> <pre><code>&lt;tangy-audio-recording name=\"test-audio\" label=\"Record Audio\"&gt;&lt;/tangy-audio-recording&gt;\n&lt;tangy-audio-playback name=\"test-playback\" label=\"Audio Playback\" src=\"assets/sounds/fewtimes_Eng.mp3\"&gt;&lt;/tangy-audio-playback&gt;\n</code></pre> <ul> <li>Add Modern Standard Arabic (MSA) to the list of supported languages</li> </ul> <p>Users can set the language of the tablet to Modern Standard Arabic (MSA) by selecting the 'Arabic' in the client and add <code>t-lang ar</code> tags to text labels in forms</p> <ul> <li>3811 Documentation Overhaul</li> </ul> <p>Libraries and Dependencies - translation-web-component: Update <code>t-select</code> with a <code>currentLanguageDirection</code> property to enable RTL support. - tangy-form: Updates and fixes for Audio Recording and Playback inputs - tangy-form-editor: Updates and fixes for Audio Recording and Playback widgets</p> <p>Server upgrade instructions</p> <p>See the Server Upgrade Instructions.</p> <p>Special Instructions for this release: </p> <p>Once the Tangerine and CouchDB are running, run the upgrade script for v3.32.1:</p> <p><code>docker exec -it tangerine /tangerine/server/src/upgrade/v3.32.1.js</code></p>"},{"location":"whats-new/#v3320","title":"v3.32.0","text":"<p>Tangerine v3.32.0 contains a major update to the deployment and fuctionality of Online Surveys including the introduction of authentication and case association. </p> <p>Online Survey Authentication</p> <p>Online Surveys can now be released for public access or require authentication. When authentication is required, data collectors will be required to provide a device user Access Code to access the survey. The survey will be associated with the device user who provided the short code. </p> <p>To deploy an Online Survey and require authentication: 1. Create the form 2. Add the <code>\"requireAccessCode\": true</code> property to the <code>app-config.json</code> file 3. Navigate to Deploy &gt; Release Online Survey for the group 4. In the Unpublished Surveys list, click the  icon to deploy a survey and require an access code.</p> <p>Custom Markdown for Online Survey Login Page</p> <p>Custom styling (text, logos, formatting etc.) can be added to the login page for Online Surveys. In the content set repository, create a file called <code>client/custom-login-markup.html</code>. The file can contain any valid html. Any images can be added to the <code>media</code> folder and used in the html. Example Custom Login Markup.</p> <p>Online Survey Case Form Authentication</p> <p>Online Surveys with authentication can also be configured when using the Case Module. This is useful for studies who want to deploy secure forms without needing to install a full PWA or APK for one form associated with the case. For example, a mother-child cohort study deploys Tangerine to track the health of the mother and child after birth. Labs are collected in the field and sent for analysis. Instead of requiring the lab to install a tablet or PWA with the Tangerine app, the lab forms can be deployed online to simplify the completion process.</p> <p>To configure forms for secure deployment online in Case, add the <code>\"allowOnline\": true</code> property to the <code>eventFormDefinitions</code> section in the case definition file. See the form definition for <code>form-allowed-online-survey</code> in case-type-1.</p> <p>Online Survey Help Link</p> <p>A help link can be added to the web pages for Online Surveys and will appear with the  icon in the header. Define the link url by adding the <code>\"helpLink\": \"https://www.tangerinecentral.org\"</code> property to the <code>app-config.json</code> file. When clicked, the link will open in a new browser window.</p> <p>Tangerine Case APIs</p> <ul> <li><code>/userProfile/createUserProfile/:groupId</code><ul> <li>Creates a user-profile document in the group</li> <li>Additional body data in json format will add properties to the user-profile: <code>{ \"age\": \"7\", \"dob\": \"1/1/2018\"}</code></li> </ul> </li> <li><code>/case/createCase/:groupId/:caseDefinitionId</code><ul> <li>Creates a case in the group with the case type defined by the case definition id</li> <li>Additional body data in json format will add properties to the case: <code>{ \"age\": \"7\", \"dob\": \"1/1/2018\"}</code></li> </ul> </li> <li><code>/case/readCase/:groupId/:caseId</code><ul> <li>Read a case from the group with the case id</li> </ul> </li> <li><code>/case/createCaseEvent/:groupId/:caseId/:caseDefinitionId/:caseEventDefinitionId</code><ul> <li>Creates an event with the event type as defined in the case definition</li> </ul> </li> <li><code>/case/createParticipant/:groupId/:caseId/:caseDefinitionId/:caseRoleId</code><ul> <li>Creates a participant with the case role as defined in the case definition</li> </ul> </li> <li><code>/case/getCaseEventFormSurveyLinks/:groupId/:caseId/</code>     Returns a JSON document with the urls for all case forms with active online surveys in the format:     <pre><code>{\n  \"eventDefinitionId\": event.caseEventDefinitionId,\n  \"eventFormDefinitionId\": eventForm.eventFormDefinitionId,\n  \"formId\": formId,\n  \"url\": url\n}\n</code></pre></li> </ul> <p>Server upgrade instructions</p> <p>See the Server Upgrade Instructions.</p> <p>Special Instructions for this release: N/A</p>"},{"location":"whats-new/#v3312","title":"v3.31.2","text":"<p>General Updates</p> <ul> <li>Add APIs to access MySQL tables Data Managers who have been granted the <code>can_access_mysql_api</code> permission can now access Tangerine MySQL data through the web interface. This is useful for building reporting dashboards within Tangerine or through other tools like PowerBI, R, Stata or Tableau. </li> </ul> <p>See the Custom Dashboard Example for instructions.</p> <ul> <li>Scoring: Add scoring percent and denominator values When Tangerine form scoring is turned on, each section will now output the score, percent, and denominator values. The values will be output in csv and mysql data as:</li> <li><code>&lt;section_name&gt;_score_denominator</code></li> <li><code>&lt;section_name&gt;_score_percent</code></li> </ul> <p>Projects who want this functionality to run on existing uploads can use a Tangerine Wedge script:  Add Scoring Percent and Denominator</p> <ul> <li>Add server scripts: New server administration scripts</li> </ul> <p>Fixes - After adding a user to a group, navigate back to the user table - Run 'npm install' during APK and PWA builds to ensure installation of dependencies and build for custom code</p> <p>Libs and Dependencies - Bump tangy-form to v4.46.1 to add scoring percent and denominator values - Bump tangy-form-editor to v7.18.2</p> <p>Server upgrade instructions</p> <p>See the Server Upgrade Instructions.</p> <p>Special Instructions for this release: N/A</p>"},{"location":"whats-new/#v3311","title":"v3.31.1","text":"<p>General Updates</p> <ul> <li>Allow mysql outputs of TANGY-TIMED and TANGY-UNTIMED-GRID data</li> </ul> <p>Administration</p> <ul> <li>The <code>reporting-cache-clear</code> script will honor the environmnt variable <code>T_ONLY_PROCESS_THESE_GROUPS</code> to limit the groups processed</li> <li>Set <code>T_ONLY_PROCESS_THESE_GROUPS</code> to a comma-separated list of group names to limit the groups cleared and then processed by the script</li> </ul> <p>Fixes - Fixes for editing of Form Responses in the server web UI   * Edits of Attendence, Behavior, and Scoring are currently prohibited in the server web UI   * Verified and Archived Form Responses must be Unverified and Unarchived before editing is available - Teacher Dashboard Scoring: Fix issues with custom scoring - Fix output of Case Participants to mysql - Fix online survey release</p> <p>Libs and Dependencies - Bump version of <code>tangy-form</code> to v4.54.4   * Fix check for 'readOnly' input metadata   * Fix undefined access of input without tagName   * Fix missing function parens</p> <p>Server upgrade instructions</p> <p>See the Server Upgrade Instructions.</p> <p>Special Instructions for this release: N/A</p>"},{"location":"whats-new/#v3310","title":"v3.31.0","text":"<p>New Features</p> <ul> <li> <p>Audio and Visual Feedback: A new Prompt Box widget available in form authoring allows a form designer to add audio and visual feedback connected to Radio Block widgets. This feature provides a toolset for creating self-guided assessments. See the example in tangy-forms. #3473</p> </li> <li> <p>Client Login Screen Custom HTML: A new app-config.json setting, <code>customLoginMarkup</code>, allows for custom HTML to be added to the login screen. This feature is useful for adding custom branding or additional information to the login screen. As an example: <pre><code>\"customLoginMarkup\": \"&lt;div style='text-align: center;'&gt;&lt;img src='assets/media/logo.png' alt='logo' style='max-width: 100%;'&gt;&lt;/div&gt;\"\n</code></pre></p> </li> <li> <p>Improved Data Management: </p> </li> <li>Data Managers now have access to a full workflow to review, edit, and verify data in the Tangerine web server. The Data Manager can click on a record and enter a new screen that allows them to perform actions align with a data collection supervision process.</li> <li>Searching has been improved to allow seaqrching for a specific ID in the imported data. This feature is useful for finding specific records synced to the server when reviewing or editing completed form responses. #3681</li> </ul> <p>Fixes - Client Search Service: exclude archived cases from recent activity - Media library cannot upload photos #3583 - User Profile Import: The process of importing an existing device user now allows for retries and an asynchronous process to download existing records. This fixes an issue cause by timeouts when trying to import a user with a large number of records. #3696 - When <code>T_ONLY_PROCESS_THESE_GROUPS</code> has a list of one or more groups, running <code>reporting-cache-clear</code> will only process the groups in the list</p> <p>Tangerine Teach</p> <ul> <li>Add toggle in Attendence Check for 'late'. A teacher can click through the status of 'present', 'late', or 'absent' for each student.</li> <li>Use <code>studentRegistrationFields</code> to control showing name and surname of student in the student dashboard</li> </ul> <p>Libs and Dependencies - Bump version of <code>tangy-form</code> to v4.31.1 and <code>tangy-form-editor</code> to v7.18.0 for the new Prompt Box widget - Bump version of <code>tangy-form</code> to v4.45.1 for disabling of <code>tangy-gps</code> in server edits</p> <p>Server upgrade instructions</p> <p>See the Server Upgrade Instructions.</p> <p>Special Instructions for this release: </p> <p>Once the Tangerine and CouchDB are running, run the upgrade script for v3.31.0:</p> <p><code>docker exec -it tangerine /tangerine/server/src/upgrade/v3.31.0.js</code></p>"},{"location":"whats-new/#v3302","title":"v3.30.2","text":"<p>New Features</p> <ul> <li>Customizable 'About' Page on client #3677 -- Form developers can create or update a form with the id 'about'. There is an example form in the Content Sets -- The form will appear in the 'About' page on the client</li> </ul> <p>General Updates - Password Visibility -- the login and register screen on the client shows an 'eye' icon used to hide or show passwords - Re-organization of the client app menu - Reintroduce <code>registrationRequiresServerUser</code> app config setting to make managing central user more flexible    - use <code>registrationRequiresServerUser</code> to require an import code when registering users on the client    - use <code>centrallyManagedUserProfile</code> to require an import code AND only allow changes to the user profile on the server    - use <code>hideProfile</code> to hide the manage user profile page from on the client</p> <p>Teach Module Updates - Behavior screen show a link instead of a checkbox to access the Behavior form - Hint text added to attendance, behavior, and scoring tables - Improved save messaging for attendance and scoring - In Attendance Reports:   - add start and end dates to view a custom date range report   - Fix the names not displaying in the tables</p> <p>Fixes - Get Media Uploads working in Editor #3583 - CSV Generation broken with 'doLocalWorkaround is undefined' error</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. \ndf -h\n# If there is not more than 12 GB plus the size of the data folder, create more space before proceeding. \n# Good candidates to remove are: data back-up folders and older versions of the Tangerine image\n# rm -rf ../data-backup-&lt;date&gt;\n# docker rmi tangerine/tangerine:&lt;version&gt;\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout -b v3.30.1 v3.30.1\n./start.sh v3.30.2\n# Run the update to copy the new About page to all groups on your site.\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.30.2.js\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:&lt;previous_version&gt;\n</code></pre>"},{"location":"whats-new/#v3301","title":"v3.30.1","text":"<p>New Features - Multiple Location Lists can be configured using the Tangerine server web interface -- Create and manage location lists for use in Tangerine forms -- The default location list is used for device and device user assignment. - The app-config.json teachProperties has new properties, <code>\"unitDates\"</code> and <code>\"studentRegistrationFields\"</code>:   <pre><code>\"unitDates\": [{\"name\": \"Unidad 1\",\"start\": \"2023-02-15\", \"end\": \"2023-04-23\"}, {\"name\": \"Unidad 2\",\"start\": \"2023-04-24\", \"end\": \"2023-06-30\"}], \n\"studentRegistrationFields\": [\"student_name\", \"student_surname\", \"phone\", \"classId\"]\n</code></pre>   The <code>unitDates</code> property is used to configure the dates for each unit in the Class module.    The <code>studentRegistrationFields</code> property is used to configure the fields from the Student Registration form to be saved in the class attendance, behavior, and score register and CSV's. - The app-config.json teachProperties has a new property, <code>\"showAttendanceCalendar\"</code>, which enables the Attendance Calendar in the Class module when set to true. - Intl/locale support in Class: The class module currently supports the es-gt locale. Add additional locales in class/module.ts:   <pre><code>import { registerLocaleData } from '@angular/common';\nimport localeEsGt from '@angular/common/locales/es-GT';\nregisterLocaleData(localeEsGt);\n</code></pre> - The \"Request spreadsheets\" CSV output form now has three new forms to view if <code>useAttendanceFeature</code> is set to true in app-config.json: Attendance, Behavior, and Score</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. \ndf -h\n# If there is not more than 12 GB plus the size of the data folder, create more space before proceeding. \n# Good candidates to remove are: data back-up folders and older versions of the Tangerine image\n# rm -rf ../data-backup-&lt;date&gt;\n# docker rmi tangerine/tangerine:&lt;version&gt;\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout -b v3.30.1 v3.30.1\n./start.sh v3.30.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:&lt;previous_version&gt;\n</code></pre>"},{"location":"whats-new/#v3300","title":"v3.30.0","text":"<p>New Features</p> <ul> <li>The 'teach' content-set now supports an optional 'Attendance' feature, enabled by adding <code>\"useAttendanceFeature\": true</code> and <code>\"homeUrl\": \"attendance-dashboard\"</code>  to app-config.json. It also has a new Class/Attendance menu which enables collection of those values per student, and an 'Attendance' report. </li> <li>The Attendance records generate _id's based on the grade, curriculum, user, and date and time of the record, so that they can be sorted chronologically.   See dashboard.service generateSearchableId for details.</li> <li>Class now supports <code>eventFormRedirect</code> to redirect to different url after submit: <code>on-submit=\"window.eventFormRedirect =</code>/attendance-check<code>\"</code></li> <li> <p>New app-config.json configuration for teach properties:   ```js   \"teachProperties\": {     \"units\": [\"Unidad 1\", \"Unidad 2\"],     \"attendancePrimaryThreshold\": 80,     \"attendanceSecondaryThreshold\": 70,     \"scoringPrimaryThreshold\": 70,     \"scoringSecondaryThreshold\": 60,     \"behaviorPrimaryThreshold\": 90,     \"behaviorSecondaryThreshold\": 80,     \"useAttendanceFeature\": true   }   The PrimaryThreshold and SecondaryThreshold values are used to determine the color of the cell in the reports.</p> </li> <li> <p>Updated docker-tangerine-base-image to v3.8.0, which adds the cordova-plugin-x-socialsharing plugin and enables sharing to WhatsApp.</p> </li> </ul> <p>Fixes - Fixed PWA assets (sound,video) only work when online #1905</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade. \ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout -b v3.30.0 v3.30.0\n./start.sh v3.30.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.29.1\n</code></pre>"},{"location":"whats-new/#v3291","title":"v3.29.1","text":"<p>Fixes</p> <ul> <li>Fix undefined referencein markQualifyingEventsAsComplete</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. \ndf -h\n# If there is not more than 12 GB plus the size of the data folder, create more space before proceeding. \n# Good candidates to remove are: data back-up folders and older versions of the Tangerine image\n# rm -rf ../data-backup-&lt;date&gt;\n# docker rmi tangerine/tangerine:&lt;version&gt;\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout -b v3.29.1 v3.29.1\n./start.sh v3.29.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:&lt;previous_version&gt;\n</code></pre>"},{"location":"whats-new/#v3290","title":"v3.29.0","text":"<p>New Features - Case, Event and Form Archive and Unarchive</p> <p>We have released an update to Tangerine which allows for the archiving and un-archiving of both events, and forms within events. This is an extension of the already existing functionality by which an entire case can be archived. The purpose of this is to empower data management teams using Tangerine to \"clean up\" messy cases where extraneous data has been added to a case in error, or by a conflict situation. The purpose of this document is to summarize both the configuration to enable this, and to demonstrate the use of these functions. This functionality will only apply to the web-based version of Tangerine, and will not be available on tablets.</p> <p>Package Updates - Updated tangy-form to v4.40.0</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. \ndf -h\n# If there is not more than 12 GB plus the size of the data folder, create more space before proceeding. \n# Good candidates to remove are: data back-up folders and older versions of the Tangerine image\n# rm -rf ../data-backup-&lt;date&gt;\n# docker rmi tangerine/tangerine:&lt;version&gt;\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout -b v3.29.0 v3.29.0\n./start.sh v3.29.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:&lt;previous_version&gt;\n</code></pre>"},{"location":"whats-new/#v328","title":"v3.28","text":"<ul> <li>This became v4</li> </ul>"},{"location":"whats-new/#v3278","title":"v3.27.8","text":"<p>New Features - New server configuration setting for output value of optionally not answered questions   - The value set in the config variable <code>T_REPORTING_MARK_OPTIONAL_NO_ANSWER_WITH</code> in <code>config.sh</code> will be the value of questions that are optional and not answered by the respondent.   - The default value is \"SKIPPED\" for consistency with previous outputs - CSV outputs now include the metadata variables <code>startDateTime</code> and <code>endDateTime</code>  auto-calculated from the <code>startUnixTime</code> and <code>endUnixTime</code> variables - Additional parameter for the csv data set generation process to ignore <code>user-profile</code> and <code>reports</code> from the output csv files</p> <p>Fixes - Copy all media directories from the client form directories to ensure assets are available in online surveys - Allows form developers to publish images and sounds in online surveys - Fix the language dropdown in online surveys - Outputs will no longer try to process outputs for <code>TANGY-TEMPLTE</code> inputs</p> <p>Breaking Changes - Removes build dependencies for legacy python <code>mysql</code> output module   - For those using the legacy module, see the documentation move to the new <code>mysql-js</code> module</p> <p>Package Updates - Lock @ts-stack/markdown to 1.4.0 to prevent breaking of builds</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade. \ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout -b v3.27.8 v3.27.8\n./start.sh v3.27.8\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.27.7\n</code></pre>"},{"location":"whats-new/#v3277","title":"v3.27.7","text":"<p>Fixes - Enable mysql-js module outputs for online-survey app data</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout -b v3.27.7 v3.27.7\n./start.sh v3.27.7\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.27.6\n</code></pre>"},{"location":"whats-new/#v3276","title":"v3.27.6","text":"<p>Fixes - Address issues using the CaseService <code>createCaseEvent</code> API in <code>on-submit</code> logic by making the function synchronous</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.27.6\n./start.sh v3.27.6\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.27.5\n</code></pre>"},{"location":"whats-new/#v3275","title":"v3.27.5","text":"<p>Fixes - CSV Generation: Fix permissions on generate csv batch script</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.27.5\n./start.sh v3.27.5\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.27.4\n</code></pre>"},{"location":"whats-new/#v3274","title":"v3.27.4","text":"<p>Fixes - Synchronization: Update Reduce Batch Size button to apply during normal sync for pull and push</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.27.4\n./start.sh v3.27.4\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.27.3\n</code></pre>"},{"location":"whats-new/#v3273","title":"v3.27.3","text":"<p>Fixes - Fix running the <code>reporting-cache-clear</code> command on the <code>mysql-js</code> module - Extend the particpantID key to 80 chars to handle long keys for T_MYSQL_MULTI_PARTICIPANT_SCHEMA     - For those using <code>mysql-js</code>: This change requires running <code>reporting-cache-clear</code> to take effect. - Fix missing groupId in user-profile PR: #3494   - This bugfix added groupId to the user-profile.   - In mysql-js, it also throws an error when groupId is missing. Relevant commit. This is different from earlier behavior, which lets the document pass without an error. All docs should have a groupId. </p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.27.2\n./start.sh v3.27.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.27.2\n</code></pre>"},{"location":"whats-new/#v3272","title":"v3.27.2","text":"<p>Fixes - Tangerine on Android APK ignore requestFullscreen() #3539 - This fix above also adds a new app-config.json property - <code>exitClicks</code> - enables admin  to set number of clicks to exit kioskMode. - Fixed: Tangy-radio button and tangy keyboard do not render on Online survey #3551</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.27.2\n./start.sh v3.27.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.27.1\n</code></pre>"},{"location":"whats-new/#v3271","title":"v3.27.1","text":"<p>Fixes - Limit debugging logs in csv generation to prevent exec from hitting max_buffer issue - Add protection to use of onEventOpen and onEventClose API</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.27.1\n./start.sh v3.27.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.27.0\n</code></pre>"},{"location":"whats-new/#v3270","title":"v3.27.0","text":"<p>NEW Features - Update triggers for Case API hooks</p> <p>The Case Service API has a set of functions that are triggered on events. An implementer of Tangerine using the Case module can add these triggers to their case definition json in order to hook into these actions. The variable name to add is the trigger, e.g. <code>onCaseOpen</code> and the value is valid javascript that will run when the trigger is fired. The following changes were made to the hooks:</p> <p>-- <code>onCaseClose</code> hook will fire when the case is closed by the user by clicking the 'X' in the upper-left corner -- <code>onCaseOpen</code> hook will fire when the case is opened (no change) -- <code>onEventOpen</code> has been changed to fire when a Case Event is clicked on the Case Summary page -- <code>onEventClose</code> has been changed to fire when the Event page is closed -- <code>onEventCreate</code> has been added and will fire when the user creates a new event using the dropdown in the Case Summary page -- <code>onEventFormOpen</code> has been added and will fire when the user opens a form from the Event page -- <code>onEventFormClose</code> has been added and will fire when the user closes a form</p> <p>Fixes - Check for custom search js when creating user dbs (Tangerine Preview)</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.27.0\n./start.sh v3.27.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.26.2\n</code></pre>"},{"location":"whats-new/#v3262","title":"v3.26.2","text":"<p>DEPRECATION NOTICE AND UPCOMING MODULE DELETION</p> <p>The mysql module is deprecated; it will be removed soon from this source code in the v3.28.0 release.  We have been using the mysql-js in production for a few months and it is more performant  and reliable than the output of the mysql module. We recommend switching to the mysql-js module.  See the MySQL-JS Module doc for upgrade and configuration information.</p> <p>New Features - New group content-set dropdown: PR 3275 - https://github.com/Tangerine-Community/Tangerine/pull/3275 - enables a content-set dropdown and is already in main. Modify the template (content-sets-example.json) and rename to content-sets.json to enable the dropdown.</p> <p>Fixes - Created Feedback dialog to resolve layout issue on mobile devices PR: #3533 - Fix for Class listing breaks if you archive all classes in Teach; unable to add new classes. Issue: #3491 - Fix for Mysql tables not populating; ER_TOO_BIG_ROWSIZE error in Tangerine logs. Issue: #3488 - Changed location of mysql-js config file to point to the mysql-js directory. Also increased memory parameters in conf.d/config-file.cnf.  - If you are using the mysql container and are having errors with very large forms, the new settings in ./server/src/mysql-js/conf.d/config-file.js   should help. You will need to completely rebuild the mysql database. See the \"Resetting MySQL databases\" section in the MySQL-JS Module docs. - Important: If you already have a mysql instance running and don't want to rebuild the mysql database, delete the <code>innodb-page-size=64K</code>   line from ./server/src/mysql-js/conf.d/config-file.js; otherwise, your mysql instance will not start.  - Fix for CSV Download fails with larger forms. Issue: #3483</p> <p>Backports</p> <p>The following feature was backported from v3.24.6 patch release:</p> <ul> <li>T_UPLOAD_WITHOUT_UPDATING_REV : A new config.sh setting for use in high-load instances using sync-protocol-1.   *** Using this setting COULD CAUSE DATA LOSS. ***   This setting uses a different function to process uploads that does not do a GET before the PUT in order to upload a document.   Please note that if there is a conflict it try to POST the doc which will create a new id and copy the _id to originalId.   If that fails, it will log the error and not upload the document to the server, but still send an 'OK' status to client.   The failure would result in data loss.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.26.2\n./start.sh v3.26.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.26.1\n</code></pre>"},{"location":"whats-new/#v3261","title":"v3.26.1","text":"<p>NEW Features - New configuration parameter: <code>T_LIMIT_NUMBER_OF_CHANGES</code> - Number of change docs from the Couchdb changes feed queried    by reporting-worker (i.e. use as the limit parameter). Default: 200. - Added volume mapping for translations dir in start script.  - A new <code>mysql-js</code> module replaces the old <code>mysql</code> module. Documentation is here.    The new <code>mysql-js</code> module is faster and more accurate than the old <code>mysql</code> module. It no longer uses an intermediate    \"group-uuid-mysql\" couchdb; instead, it reads from the _changes feed and writes directly to a    MySql database. To use the new module, add <code>mysql-js</code> to the T_MODULES list of modules and configure the following settings:   - T_MYSQL_CONTAINER_NAME=\"mysql\" # Either the name of the mysql Docker container or the hostname of a mysql server or AWS RDS Mysql instance.   - T_MYSQL_USER=\"admin\" # Username for mysql credentials   - T_MYSQL_PASSWORD=\"password\" # Password for mysql credentials   - T_USE_MYSQL_CONTAINER=\"true\" # If using a Docker container, set to true. This will automatically start a mysql container      when using a Tangerine launch script.</p> <p>Fixes - Student subtest report incorrect for custom logic inputs #3464 - Init paid-worker file when server restarted.  - Fix bug in start.sh script for --link option - Rename T_REBUILD_MYSQL_DBS to T_ONLY_PROCESS_THESE_GROUPS. Configure T_REBUILD_MYSQL_DBS to list group databases to be    skipped when processing data through modules such as mysql and csv.</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.26.1\n./start.sh v3.26.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.26.0\n</code></pre>"},{"location":"whats-new/#v3260","title":"v3.26.0","text":"<p>NEW Features</p> <ul> <li>MySQL JS Module:  -- Track and output changes through the CouchDB Changes Feed -- Connect to a MySQL Server of your choice via a url and credentials</li> <li>Add app-config flag to force confirmation of each form response created on the client</li> <li>Update to tangy-form and tangy-form-editor which enables configuration of automatic scoring in Editor for groups using Class. Issue: #1021</li> <li>Documented a list of  Reserved words in Tangerine</li> <li>Bump docker-tangerine-base-image to v3.7.4 (enables RECORD_AUDIO permission for APK's), tangy-form to 4.38.3, tangy-form-editor to 7.15.4.</li> </ul> <p>Fixes</p> <ul> <li>Add protection when using Case APIs that load other cases than the currently active case</li> <li>feat(custom-scoring): If customScore exists, use it [#3450](https://github.com/Tangerine-Community/Tangerine/pull/3450</li> <li>fix(record-audio): Request audio permissions #3451</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.26.0\n./start.sh v3.26.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.26.0\n</code></pre>"},{"location":"whats-new/#v3251","title":"v3.25.1","text":"<p>Fixes</p> <ul> <li>Fix logic in has merge change permissions</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.25.1\n./start.sh v3.25.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.25.1\n</code></pre>"},{"location":"whats-new/#v3250","title":"v3.25.0","text":"<p>NEW Features</p> <ul> <li>Improvements to Issues on the Client and Server 3413 -- Add app-config flag to allow client users to Commit changes to Issues -- Add user-role permissions to select which events or forms Issue changes can be commited on the client -- Pull form responses changed in Issues on the server down to the client</li> <li>Add parameter to CSV Dataset Generation that allows exclusion of archived form definitions</li> </ul> <p>Fixes</p> <ul> <li>Apply isIssueContext correctly on the client</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.25.0\n./start.sh v3.25.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.25.0\n</code></pre>"},{"location":"whats-new/#v3246","title":"v3.24.6","text":"<p>NEW Features</p> <ul> <li>T_UPLOAD_WITHOUT_UPDATING_REV : A new config.sh setting for use in high-load instances using sync-protocol-1.    *** Using this setting COULD CAUSE DATA LOSS. ***   This setting uses a different function to process uploads that does not do a GET before the PUT in order to upload a document.    Please note that if there is a conflict it will copy the _id to originalId and POST the doc, which will create a new id.    If that fails, it will log the error and not upload the document to the server, but still send an 'OK' status to client.    The failure would result in data loss.</li> </ul>"},{"location":"whats-new/#v3244","title":"v3.24.4","text":"<p>NEW Features</p> <ul> <li>Ability to add scoring from the interface (24 hours) #1021</li> </ul> <p>Fixes</p> <ul> <li>User is forced to stay on form until submission [#3215] - changed current-form-id to incomplete-response-id</li> <li>Bumped tangy-form to 4.37.0 and tangy-form-editor to 7.14.11.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.24.4\n./start.sh v3.24.4\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.24.3-final\n</code></pre>"},{"location":"whats-new/#v3243-final","title":"v3.24.3-final","text":"<p>Please note that this release is tagged v3.24.3-final, not v3.24.3. This is a deviation from our usual format; we will resume the previous format in the next release.</p> <p>New Feature - To force user to stay on form until submission, set `\"forceCompleteForms\":true' in the group app-config.json. Issue: #3215</p> <p>Fixes - Separate Archived and Active forms in Request Spreadsheet screen #3222 - When incomplete results upload is enabled on a group, do not save empty record when using sync-protocol 1. #3360 - Enable editing the \"No\" confirmation alert for tangy-consent #3025 - Fix Sync error caused by async directory error when creating media directories #3374 - Exclude client-uploads folder from APK and PWA releases #3371 - Remove ordering of inputs when creating spreadsheets #3252 - Bumped tangy-form-editor to v7.14.8 to add Video Capture input warning text #3376 - Bumped tangy-form to 4.36.3. - Updated the online-survey-app routing to route to a specific form, and also adds an optional routing option. PR:#3387</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.24.3-final\n./start.sh v3.24.3-final\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.24.2\n</code></pre>"},{"location":"whats-new/#v3242","title":"v3.24.2","text":"<p>Fixes - Hide Case Events form the Schedule View that are 'inactive' - Add the 'endUnixTimestamp' to mysql outputs generated by the python module - Remove unnecessary and expensive query for conflicts during synchronization on the client PR: #3365</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.24.2\n./start.sh v3.24.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.24.1\n</code></pre>"},{"location":"whats-new/#v3241","title":"v3.24.1","text":"<p>New Features</p> <ul> <li>Feature: New version of mysql module, called mysql-js, which is coded in javascript instead of python. This module exports records much faster than previous version. It should also use much less memory and provide more flexibility in terms of column data types and (eventually) support of different types of databases. Issue: #3047</li> <li>Feature: Enable upload of files created by the tangy-photo-capture and tangy-video-capture inputs. PR: #3354   Note:  In order to cause minimal negative impact upon current projects, the default behavior will be to save image files created by the tangy-photo-capture input to the database, instead of saving to a file and uploading. That being said, it is preferable to save as a file and upload. To over-ride this default, set the new <code>mediaFileStorageLocation</code> property to 'file' in the group's app-config.json. The default is 'database'. If this property is not defined, it will save to the database. New groups will be created with   <code>mediaFileStorageLocation</code> set to 'file'. Videos created using the tangy-video-capture input will always be uploaded to the server due to their large file size. </li> </ul> <p>Fixes - The default password policy (T_PASSWORD_POLICY in config.sh) has been improved to support most special characters and the T_PASSWORD_RECIPE description has been updated to list the permitted special characters. Issue: https://github.com/Tangerine-Community/Tangerine/issues/3299</p> <p>Example:</p> <pre><code>(\\` ~ ! @ # $ % ^ &amp; * ( ) \\ - _ = + &lt; &gt; , . ; : \\ | [ ] { } )\n</code></pre> <ul> <li>Enable forms without location to be viewed in visits listing. PR: #3347</li> <li>Fix results with cycle sequences that do not generate a CSV file. Issue: #3249 PR: 3345</li> <li>Enable grids to be hidden based on skip logic #1391</li> <li>Add confirmation to consent form if 'No' selected before the form is closed #3025. Activate this feature using the new property: <code>confirm-no=\"true\"</code>.</li> <li>Fix app config doNotOptimize logic PR: #3358</li> <li>Those using the <code>doNotOptimize</code> flag must reverse the logic in the <code>appConfig.sh</code> file when updating to this version</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.24.1\n./start.sh v3.24.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.24.0\n</code></pre>"},{"location":"whats-new/#v3240","title":"v3.24.0","text":"<p>New Features</p> <ul> <li>App user can reduce the batch size as a workaround when experiencing 'out-of-memory' errors with Rewind Sync</li> <li>On occasion Rewind Sync will fail to complete due to 'out-of-memory' issues. The Advanced Sync section of the Sync page now shows a checkbox that when checked will reduce the batch sizes used to perform the Rewind Sync. As noted in the UI, the Rewind Sync will take longer to process however in most cases it will be able to complete the process. The batch size reduction will be reverted once the Rewind Sync is complete or the user unchecks the box.</li> <li>System Admin can scan a QR code to download an APK or PWA release</li> <li>When deploying Tangerine, it can be a long process to download and install the APK or PWA on multiple devices. To improve the deployment process, the Release tables now show a QR code that when scanned will download the release directly to a new device without the need to type in the URL.</li> <li>Improvements to Sync: In case of false positives on push, keep pushing until nothing is pushed</li> <li>Client Case Service API:</li> <li>Case Event and Event Form (De)activation 3334<ul> <li>activateCaseEvent:  Marks a Case Event as 'active' and shows it in the Case Event list</li> <li>deactivateCaseEvent: Marks a Case Event as 'inactive' and hides it in the Case Event list</li> <li>activateEventForm:  Marks an Event Form as 'active' and shows it in the Event Form list</li> <li>deactivateEventForm: Marks an Event Form as 'inactive' and hides it in the Event Form list</li> </ul> </li> <li>Editor Case Service API:</li> <li>Add useful APIs used in the client Case Service API to the editor Case Service API 3325</li> <li>Option to sync a case before viewing it 3237</li> <li>Support for showing photo and signatures in Issues</li> </ul> <p>Fixes</p> <ul> <li>Fix after update messaging and async issues</li> </ul> <p>Translations - Include Vietnamese translations</p> <p>Deprecations - Comparison Sync has been removed from this release to reduce confusion reported by Tangerine users. The Rewind Sync functionality out-performs Comparison Sync and is recommended for use when needed on all deployments.</p>"},{"location":"whats-new/#v3231","title":"v3.23.1","text":"<p>Fixes</p> <ul> <li>Fixed bug in sync on PWA's. Also, do note that video file upload using the new tangy-form input <code>&lt;tangy-video-capture&gt;</code> only works for APKs Issue: [#3338] https://github.com/Tangerine-Community/Tangerine/issues/3338</li> <li>Fixed tangy-form-editor to 7.14.2 to fix bug with input widget for tangy-keyboard-input (postfix field).</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.23.1\n./start.sh v3.23.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.23.0\n</code></pre>"},{"location":"whats-new/#v3230","title":"v3.23.0","text":"<p>New Features</p> <ul> <li>Enabled video upload feature which uses the new tangy-form input <code>&lt;tangy-video-capture&gt;</code>. There is a new video file upload section in the sync feature for both sync-protocol 1 and 2. implementation details in this PR: 3327. Issue: #3212 The new tangy-form input <code>&lt;tangy-video-capture&gt;</code> takes the following properties:</li> <li>frontCamera: Boolean. Whether to use the front camera or the back camera. Default is <code>true</code>.</li> <li>noVideoConstraints: Boolean. Whether to force use of front or back camera. If true, chooses the first available source.  Default is <code>true</code>.</li> <li>codec: String. The codec to use. Default is 'video/webm;codecs=vp9,opus' - AKA webm vp9. It is possible the device may not support all of these codecs. Other potential codecs include <code>video/webm;codecs=vp8,opus</code> and <code>video/webm;codecs=h264,opus</code>.</li> <li>videoWidth: Number. The width of the video. Default is <code>1280</code> and videoHeight: Number. The height of the video. Default is <code>720</code>.</li> <li>Bump tangy-form lib to 4.34.3, tangy-form-editor to 7.14.1. </li> </ul> <p>Fixes</p> <ul> <li>Add postfix property to tangy-keyboard-input. Also add highlight to value entered. Issue: 3321</li> </ul>"},{"location":"whats-new/#v3224","title":"v3.22.4","text":"<p>New Features</p> <ul> <li>Feature: Tangerine CLI for dropping mysql tables and resetting mysql .ini files. PR: #3281   Usage: <code>docker exec tangerine module-cache-clear mysql</code></li> </ul> <p>Fixes</p> <ul> <li>Error when mysql module creates a table with duplicate participantId PR: #3279 </li> <li>New languages - Bengali, Dari, Hindi, Pashto, Portuguese, Updated Russian, Swahili, Urdu #3263</li> <li>Filter archived case events out of Schedule View #3267</li> <li>Many fixes to Teach:</li> <li>Add Current Date to Teach Subtest Report #3273</li> <li>Remove some appended Teach CSV columns #3271</li> <li>Fix student subtest report failing by transforming data only for related curriculum #3272</li> <li>Student subtask report is failing with error #3270</li> <li>CSV file contains tangy-input metadata and displaces all inputs #3227</li> <li>Fix summary upload #3265</li> <li>Records should be one doc per Student per Curriculum per Class. Not per Student per Curriculum per Class per Item. #3264</li> <li>Provide Bengali number translation in Student Grouping Report #3255</li> <li>Bengali numbers are not being replaced in Class Grouping report #3228</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.22.4\n./start.sh v3.22.4\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.22.3\n</code></pre>"},{"location":"whats-new/#v3223","title":"v3.22.3","text":"<p>Fixes</p> <ul> <li>Fix all Tangy Templates are missing when reviewing completed form responses.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.22.3\n./start.sh v3.22.3\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.22.2\n</code></pre>"},{"location":"whats-new/#v3222","title":"v3.22.2","text":"<p>Fixes</p> <ul> <li>Download All button on Spreadsheet Request info page does not download #3232</li> <li>Spreadsheet Requests page does not load for new groups #3233</li> <li>Fix use of window.eventFormRedirect #3211</li> <li>Spreadsheet Request will fail to generate Download All zip if one form has specific characters in the title #3217</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.22.2\n./start.sh v3.22.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.22.1\n</code></pre>"},{"location":"whats-new/#v3221","title":"v3.22.1","text":"<p>Fixes</p> <ul> <li>Fix: Tangy Template elements all say \"false\" if using environment variables like caseService and T #3203</li> <li>Make issue diffs less crash prone #3200</li> <li>Fix: Case fails to open after selecting Case in search behind a \"load more\" button #3194</li> <li>Fix: Unable to scroll to last item in search list if there is not more button #3195</li> <li>Fix: After typing a search, \"load more\" button appears with no search results for a few seconds #3196</li> <li>On a Spreadsheet Request page, style the download all button's icon as white.</li> <li>Unify and fix the exclude pii label on spreadsheet requests.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server. \ndocker logs --since=60m tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.22.1\n./start.sh v3.22.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.22.0\n</code></pre>"},{"location":"whats-new/#v3220","title":"v3.22.0","text":"<p>Fixes</p> <ul> <li>Device User should not be able to register Device Account without username #3162</li> <li>CSV Datasets are not filtering by month and year when a 'Month' and 'Year' is selected #3181</li> <li>Make Loc and t available on Editor's window object for consistency with Client environment #3161</li> <li>Fix messaging during data optimization and reduce number of view optimized that are never used #3165</li> <li>Prevent menu items from jumping around on Deploy page #3169</li> <li>Fix bug causing document updates to get skipped over in sync after a Comparison Sync #3179</li> </ul> <p>Deprecate single csv download in favor of Spreadsheet Requests</p> <p>See screenshots here.</p> <ul> <li>Change terminology referring to \"CSV\" to more commonly recognized \"Spreadsheet\" term.</li> <li>\"CSV Datasets\" term changed to \"Spreadsheet Requests\".</li> <li>Fix \"CSV Datasets are not filtering by month and year when a 'Month' and 'Year' is selected #3181\"</li> <li>Request Spreadsheets page: Submit button now hovers and is sticky to bottom of page; \"*\" in Month/Year selection clarified as \"All months\"/\"All years\"; \"Description\" no longer required and given own line for better formatting; other formatting cleanup.</li> <li>Data page: Removed deprecated CSV Download button; updated language; added \"Request Spreadsheets\" button for quick access to making a request for spreadsheets.</li> <li>Spreadsheet Request Info page: Now dynamically updates as Spreadsheets are rendered with row counts and status; removed unnecessary filename to download all, instead it's a \"download all\" button; new types of status including \"File removed\", \"Stopped\", \"Available\", and \"In progress\"; Month and Year values of \"*\" now clarified as \"All months\" and \"All years\"; loading screen improvements; title of page now the date the spreadsheets were requested on.</li> <li>Spreadsheet Requests page: Updated language; fixed total Spreadsheet Requests calculation in pagination; if status of Spreadsheet Request is \"Available\" the status shows in green; if the status of the Spreadsheet Request is \"In progress\" a spinner is shown where the Download button will be; labels of \"More Info\" and \"Download\" added to corresponding buttons; loading overlay now shown on initial load and when changing pages.</li> <li>Spreadsheet Templates page: Updated terminology from CSV Templates to Spreadsheet Templates.</li> </ul> <p>New Features</p> <ul> <li>Show recent activity as default search results #3171</li> <li>Make a cached version of the Device information available to form logic on T.device.device #3183</li> <li>Group Administrator configures Device Account password policy #3172</li> <li>On search UI: limit initial results to 10 for fast load, add a \"Load More\" button for pagination, and style improvements #3164</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.22.0\n./start.sh v3.22.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.21.0\n</code></pre>"},{"location":"whats-new/#v3210","title":"v3.21.0","text":"<p>Developers:Good to Know</p> <ul> <li>The master branch has been moved to the main branch. No development will happen on the master branch, which has been deleted. Also, please note the updates to the Release Workflow</li> </ul> <p>Fixes</p> <ul> <li>Prevent unnecessary CaseService saves by comparing hashes #3155</li> <li>Prevent loss of case changes when leaving incomplete form by always saving the case #3156</li> <li>Prevent on-submit of a form running in one Case from being able to run in another case by navigating quickly to another Case. We inject <code>T</code> and <code>case</code> (caseService) variables into Tangy Form (formPlayer) from EventFormComponent. This will add <code>instanceFrom:  'EventFormComponent'</code> to the caseService (and also assigns <code>['instanceFrom'] = 'EventComponent'</code> in EventComponent). Note that if you have any use of <code>window.T</code> or <code>window.caseService</code>, you will need to make them <code>T</code> and <code>caseService</code> to take advantage of this fix. Commit: 716bc5e9</li> <li>Bump tangy-form to v4.29.1 and tangy-form-editor to v7.10.2 Commit: a3f785310</li> </ul> <p>New Features</p> <ul> <li>Add support for running an SSL frontend. Issue: #3147</li> <li>Make CORS settings configurable by T_CORS_ALLOWED_ORIGINS Commit: 1f448f7e</li> <li>Add ability to generate CSV datasets for all groups and all forms. This feature provides the new generate-csv-datasets command and csvDataSets route. #3149</li> <li>Add support for Tangy Form's useShrinker flag, implemented as AppConfig.saveLessFormData. This is an experimental mode in Tangy Form that only captures the properties of inputs that have changed from their original state in the form. This should lead to smaller formResponses and quicker sync data transfers. Commit: 35a05c2b, Tangy-form pull: Add support for shrinking form responses #209</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.21.0\n./start.sh v3.21.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.20.4\n</code></pre>"},{"location":"whats-new/#v3204","title":"v3.20.4","text":"<p>Fixes</p> <ul> <li>Fixes resuming an unfinished Event Form. Commit bf97492</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.20.4\n./start.sh v3.20.4\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.20.3\n</code></pre>"},{"location":"whats-new/#v3203","title":"v3.20.3","text":"<p>Fixes</p> <ul> <li>Editing Timed Grids on Forms: Capture at item and Duration are compared as strings leading to unexpected validation scenarios #3130</li> <li>Fix CORs usage in Tangerine APIs when outside applications are using credentials.  #3132</li> <li>When Tangerine creates CouchDB users for Sync, DB Administration, and Reporting, restrict that users access to the databases for the group they are assigned. This is a tightening of security to support use cases where users of groups on the same server should be restricted from accessing other groups data on the same server when Sync Protocol 2 and Database Administrator features are being used. #3118</li> <li>Data Manager views in CSV which cycle sequence was used in each form response #3128.</li> <li>Fix access denied message when using Tangerine APIs #3133</li> <li>Make status translateable on Tangerine Teach Task Report. #3089</li> <li>When editing Timed Grids on Forms, \"Capture at Time\" and \"Duration\" are compared as strings leading to unexpected validation scenarios. #3130</li> <li>Fix database export when using Sync Protocol 1 by using the correct database names #3120</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.20.3\n./start.sh v3.20.3\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.20.2\n</code></pre>"},{"location":"whats-new/#v3202","title":"v3.20.2","text":"<p>Fixes</p> <ul> <li>Improve listing of items in the Data menu. Issue: #3125</li> <li>Fix issue where Group User on server with permission to access database would not have access. Commit: a10162d9</li> <li>Add Amharic translation.</li> <li>Fix issue when backup has never run, the Clean backups command in Maintenance on client fails, and the process alert    does not go away. This PR also copies over a fix for clearing all progress messages from Editor. PR: #3098</li> <li>Fix bad url for Print Content feature in Editor/Author. PR: #3099</li> <li>Clicking on unavailable form in Case should not open it. Issue: #3063</li> <li>The csv and mysql outputs must carry over the 'archived' property from the group db. PR: #3104</li> <li>Bump tangy-form to v4.28.2 and tangy-form-editor to v7.9.5. Includes fix for tangy-input-groups change logic Issue: #2728</li> <li>Users should enter dataset description when creating a dataset in Editor PR: #3078</li> <li>Avoid crashes when properties on the markup are accessed before being available to the component #3080</li> <li>Replace special chars with underscore in CSV output. PR: #3003</li> <li>Refresh global reference to T.case when using a case so most importantly the correct context is set PR: #3108</li> <li>Link to download data set downloads a JSON file with headers and group config doc. Issue: #3114</li> <li>CSV template creation fails. Issue: #3115</li> <li>Restart couchdb container on failure. PR: #3112</li> <li>APK and PWA Updates fail with User not logged in (every time) #3111</li> <li>Fix error when looping through input values for data dictionary. PR: #3124</li> <li>Add config to allow output of multiple participants in MySQL. Consult the PR for implementation details. If you wish to enable this feature, add <code>T_MYSQL_MULTI_PARTICIPANT_SCHEMA:true</code> to the config.sh script. PR: #3110</li> </ul> <p>Upgrade notice</p> <p>If your project was already using the Data Conflicts tools that were installed manually, you must remove those in order to  prevent a conflict with the Database Conflicts tool that is now automatically installed in Tangerine -&gt; Deploy -&gt; Database  Conflicts. Reset the group-uuid/editor directory with the content-sets/case-module/editor components or the content-sets/case-module-starter/editor/index.html file.</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.20.2\n./start.sh v3.20.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.20.1\n# This will index all database views in all groups. It may take many hours if \n# the project has a lot of data.\nwedge pre-warm-views --target $T_COUCHDB_ENDPOINT\n</code></pre>"},{"location":"whats-new/#v3201","title":"v3.20.1","text":"<p>Fixes</p> <ul> <li>Fix Form Editor removes manually added on-resubmit logic in tangy-form #3017</li> <li>Support old PWAs that did not check for all permissions when installed in order to get permanent storage #3084</li> </ul> <p>New Features</p> <ul> <li>Add Maintenance page to client to enable app administration tasks (clear out old backups and fix permissions) and disk space statistics. #3059</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.20.1\n./start.sh v3.20.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.20.0\n# This will index all database views in all groups. It may take many hours if \n# the project has a lot of data.\nwedge pre-warm-views --target $T_COUCHDB_ENDPOINT\n</code></pre>"},{"location":"whats-new/#v3200","title":"v3.20.0","text":"<p>Fixes</p> <ul> <li>Improve rendering of Device listing. PR: #2924 Note that you must run the update or else the Device view will fail.</li> <li>Converted print form view as a single table #2927</li> <li>Improvements to restoring a database from a backup PR: #2938</li> <li>On server group's security page, fix link to adding roles and show loading screen when saving role.</li> <li>Data outputs for CSV's now include the 'archived' property. #2988</li> <li>This one goes out to the coders: Prevent CaseService singleton injection into Case related components #2948. This is an important change in how cases are handled - they are no longer singletons.    If you are developing scripts for a form and there are problems accessing T.case, see the comments in #2948 for a solution.</li> </ul> <p>New Features</p> <ul> <li>New CSVs related to Cases now available for Case Participants, Case Events, and Case Event Forms. https://github.com/Tangerine-Community/Tangerine/pull/2908</li> <li>Online Survey user is warned if they are using an unsupported web browser (Internet Explorer). https://github.com/Tangerine-Community/Tangerine/pull/3001 </li> <li>Data Manager generates CSV with specific columns using CSV Templates.</li> <li>Data Manager restores Case Event stuck in Conflict Revision. Add the <code>can_restore_conflict_event</code> permission to the users' role(s) to enable. #2949</li> <li>Enable Data Conflict Manager for groups. 2997 This is based on the couchdb-conflict-manager web component.</li> <li>In Offline App, when submitting a form, opening a case, creating a case, etc., a new loading screen is shown. #3000</li> <li>In Online Survey, new support for switching language without interrupting the survey. #2643</li> <li>For PWA's, there is a new device permissions step in device setup to guarantee persistent storage #3002</li> <li>The login screen may now have custom markup. #2979</li> <li>Statistical files are now available in Stata .do format for corresponding forms #2971</li> <li>The new <code>usePouchDbLastSequenceTracking</code> property in app-config.json and settings page enables the use of PouchDB's native last sequence tracking support when syncing. #2999</li> <li>The new <code>encryptionPlugin:'CryptoPouch'</code> property in app-config.json enables testing of the CryptoPouch extension currently in development. #2998 Please note that this feature is not yet ready for deployment. There are now three different possible storage configurations for Tangerine:</li> <li>\"encryptionPlugin\":\"CryptoPouch\" - Configures the app to use CryptoPouch, which encrypts documents in the app's indexedb for storage.</li> <li>\"turnOffAppLevelEncryption\": true - Configures the app without encryption, using the app's indexedb for storage instead of sqlite/sqlCypher.</li> <li>\"encryptionPlugin\":\"SqlCipher\" - or without any additional configuration (SqlCipher is the default configuration.) - Configures the app to use SqlCipher, which encrypts documents in an external sqlLite database for storage.</li> <li>We have changed how we determine which storage engine is being used. In the past we exposed a window['turnOffAppLevelEncryption']   global variable based on the same flag in app-config.json; however, now we are determining in app-init.ts which engine is running and exposing either <code>window['cryptoPouchRunning']</code> or <code>window['sqlCipherRunning']</code> to indicate which engine is running. It is important to note that even the app is configured with <code>encryptionPlugin:'CryptoPouch'</code> in app-config.json, the app may have been installed without that setting and is actually running sqlCypher. This is why it is important to observe if either <code>window['cryptoPouchRunning']</code> or <code>window['sqlCipherRunning']</code> is set. </li> </ul> <p>Backports/Good to Know</p> <p>When we add new features or fix issues in patch releases of Tangerine, those code changes usually get added automatically to any new  releases of Tangerine. To make sure users of new releases are aware of those changes, we will occasionally mention them in  this section in case they have missed them in the Changelog for the corresponding earlier release. Please note that when you  install or upgrade a new Tangerine release, please review the Changelog for any changes in minor or patch releases. </p> <ul> <li>Server admin can configure regex-based password policy for Editor. Instructions in the PR: #2858 Issue: #2844</li> <li>Show loading screen in more places that typically hang such as the Case loading screen, issue loading, issue commenting, and many other places when working with Issues on the sever. (demo: https://youtu.be/RkoUN41jqr4)</li> <li>Enhancements to support for archiving cases:</li> <li>Added ability to search archived cases. Issue: #2977 Important : Run <code>docker exec -it tangerine /tangerine/server/src/upgrade/v3.19.3.js</code> to enable searching archived cases.</li> <li>Added archive/unarchive Case functionality and permission for \"can delete\" #2954</li> <li>Added backup and restore feature for Tangerine databases using device encryption. Increase the appConfig.json parameter <code>dbBackupSplitNumberFiles</code> (default: 200) to speed up the backup/restore process if your database is large. You may also change that parameter in the Export Backup user interface. Updated docs: Restoring from a Backup PR: #2910</li> <li>Updates to tangy-form lib to 4.25.18 (Changelog), which provides:</li> <li>Support for changing a page content's language and number system without reloading the page.</li> <li>A fix for photo-capture so that it de-activates the camera when going to the next page or leaving a form. Also a new feature for configuring compression</li> <li>Implemented a new 'before-submit' event to tangy-form in order to listen to events before the 'submit' event is dispatched.</li> <li>A fix for User defined Cycle Sequences.</li> <li>Important If your site uses csvReplacementCharacters to support search and replace configuration for CSV output, which was released v3.18.2, you must change the configuration string. See issue #2804 for information about the new schema.</li> <li>Feature: Editor User downloads CSVs for multiple forms as a set Issue: #2768  PR:#2777</li> <li>Feature: Remove configurable characters from CSV output #2787.</li> </ul> <p>Server upgrade instructions</p> <p>Important upgrade: Please note that you must run update below (v3.20.0.js) to install the new listDevices view. If you don't the Devices listing will fail.</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.20.0\n./start.sh v3.20.0\n# Run the update to install the new listDevices view.\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.20.0.js\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.19.1\n# This will index all database views in all groups. It may take many hours if \n# the project has a lot of data.\nwedge pre-warm-views --target $T_COUCHDB_ENDPOINT\n</code></pre>"},{"location":"whats-new/#v3193","title":"v3.19.3","text":"<p>Fixes</p> <ul> <li>Fix issue where loading screen would not close after submitting a proposal on an Issue.</li> <li>Fixes from v3.18.8 incorporated.</li> <li>Fixes to how role based permission rules are applied on the schedule view. </li> <li>Fix CaseService.rebaseIssue from failing due to accessing eventForms incorrectly.</li> </ul> <p>New Features</p> <ul> <li>Show loading screen in more places that typically hang such as the Case loading screen, issue loading, issue commenting, and many other places when working with Issues on the sever. (demo: https://youtu.be/RkoUN41jqr4)</li> <li>Material design applied to loading indicator on the server. </li> <li>New cancel button on loading indicator on the server. Will warn that this may cause data corruption and data loss. (demo: https://youtu.be/da9cxG5w8c0)</li> <li>Added ability to search archived cases. Issue: #2977 Important : Run <code>docker exec -it tangerine /tangerine/server/src/upgrade/v3.19.3.js</code> to enable searching archived cases.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.19.3\n./start.sh v3.19.3\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.19.2\n# Run the v3.19.3.js update to enable indexing of archived documents.\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.19.3.js\n# This will index all database views in all groups. It may take many hours if \n# the project has a lot of data.\nwedge pre-warm-views --target $T_COUCHDB_ENDPOINT\n</code></pre>"},{"location":"whats-new/#v3192","title":"v3.19.2","text":"<p>Fixes</p> <ul> <li>Added process indicator when archiving, un-archiving, or deleting a case. Issue: #2974</li> <li>Add v3.19.2 update to recover if v3.19.0 search indexing failed</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.19.2\n./start.sh v3.19.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.19.1\n# Perform additional upgrades.\ndocker exec -it tangerine bash\n# This will index all database views in all groups. It may take many hours if \n# the project has a lot of data.\nwedge pre-warm-views --target $T_COUCHDB_ENDPOINT\n</code></pre>"},{"location":"whats-new/#v3191","title":"v3.19.1","text":"<p>Fixes</p> <ul> <li>Improved backup and restore file processing. Docs: Restoring from a Backup PR: #2910</li> <li>Added archive/unarchive Case functionality and permission for \"can delete\" #2954</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.19.1\n./start.sh v3.19.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.19.0\n# Perform additional upgrades.\ndocker exec -it tangerine bash\n# This will index all database views in all groups. It may take many hours if \n# the project has a lot of data.\nwedge pre-warm-views --target $T_COUCHDB_ENDPOINT\n</code></pre>"},{"location":"whats-new/#v3190","title":"v3.19.0","text":"<p>New Features</p> <ol> <li>Data Manager requests and downloads CSVs for multiple forms as a set. When logged into the server and in a group, you will now find a \"Download CSV Data Set\" menu item under \"Data\". From there you can view all of the CSV Data Sets you have generated in the past, the status of wether or not they have finished generating, a link to download them, and other meta data. Click the \"New Data Set\" button and you will be able to select any number of forms to generate CSVs for, data for all time or a specific month, and wether or not to exclude PII. This is especially useful for generating CSVs that take longer to generate than the automatic logout built into the server. You may request a CSV Data Set, log out, and then log back in later to check in on the status and download it. A Server Administrator can also configure cron with a <code>generate-csv-data-set</code> command to generate a data set on a daily, weekly, or monthly basis, handy for situations where you want CSVs to automatically generate on the weekend and then download them on Monday. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2768) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2777)</li> <li>Data Manager archives a Case to remove it from reporting output and Devices. This adds an \"archive\" button on Cases that flags all related Form Responses as archived and removes them from CSV output and Search on Devices. This uses the new T.case.archive() API which adds an 'archived' flag for those docs and saves a minimal version of the doc with enough data to be indexed on the server. Search on client and server CSV output are modified to filter archived docs. When viewing cases in Editor, displays \"Archived\" when viewing an archived case. When client syncs, it deletes any docs with the 'archived' flag and sets deletedArchivedDocs In the replicationStatus log. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2843) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2776)</li> <li>Devices Manager reconfigures claimed Device sync settings and selects multiple Sync Locations for a Device. Details: To change a Device's sync settings currently requires a reinstall of the app on the Device and setting up all the accounts again. This PR will allow system admins to change the sync settings for a Device which then triggers on next sync a Rewind Push, database delete, then a first pull with the new sync settings. Subsequent syncs then use the new sync settings. This PR also refactors the Create and Edit forms for Devices on the server so that multiple sync locations can be added. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2867) (PR: #2782)</li> <li>Device Manager estimates how large an initial sync will be given selected sync settings. When setting up sync settings for a Device, it is useful to know how many documents will need to be downloaded given which forms are configured for syncing down and the locations assigned. There is now a \"calculate down-sync size\" button at the bottom of Device edit/creation forms that when pressed will tally up the documents needing to be down synced given the device sync settings. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2845) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2818)</li> <li>Devices Manager monitors for Devices close to filling up disk space. Devices now report how much free space they have to the server after a sync. This can be monitored on the <code>Deploy &gt; Devices</code> list. When a Device reports having less than 1GB free storage, a warning is shown on the Devices list. (Ticket: 2779) (PR: 2795)</li> <li>Server User views the version of Tangerine installed. Any user on the server can now view the version of Tangerine installed by going to Help menu in the left nav bar. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2846) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2794)</li> <li>Database Consumer accesses Tangerine MySQL databases via web browser. Users of Tangerine's MySQL database sometimes are not allowed to install tools such as MySQL Workbench on their work computers. This PR makes starting PHPmyAdmin (a mysql viewer) as a web service a configuration option in Tangerine so no one has to install software on their computer to access Tangerine MySQL. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2847) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2793)</li> <li>Data Collector creates Account on Device and associates with any User Profile in Group (ignoring Device assignment/sync settings).  By default, when a Data Collector creates an Account on Device, they can only associate with User Profiles that are assigned to the same location as the Device's Assigned Location. Add <code>\"disableDeviceUserFilteringByAssignment\":true</code> to the app-config.json for the group and this restriction will be removed. Tablets will also sync all User Profiles, ignoring the Device's configured Sync Location(s). (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2848) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2792)</li> <li>Form Developer writes code that can access Case's related Location metadata without writing asynchronous code. When working synchronously in forms, we don't currently have access to the related Location Node data without loading the Location List async and using T.case.case.location to search the hierarchy for the node we want. This PR loads all related Location Nodes into memory at T.case.location when the context of a Case is set. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2849) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2791)</li> <li>Server Administrator configures substitutions for CSV output. This feature allows a Server Administrator to update the group's configuration in the app database to contains Regex string replacements for CSV output. This can be handy in situations where Data Analysts are having trouble parsing CSV data that contains line breaks and commas. An example configuration to remove line breaks and commas from data would be <code>\"csvReplacementCharacters\": [{\"search\": \",\", \"replace\": \"|\"}, {\"search\": \"\\n\", \"replace\": \"___\"}]</code>. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2787) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2788)</li> <li>Server Administrator configures Tangerine to not auto-commit in groups' data directories to preserver manually managed git content repositories. When using git to manage group content in a git flow like manner, the automatic commit can result in unnintentional commits. System Administrators can now turn off this auto-commit by configuring Tangerine's <code>config.sh</code> with <code>T_AUTO_COMMIT=\"false\"</code>. If set to true also include the frequency <code>T_AUTO_COMMIT_FREQUENCY=\"60000\"</code>  (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2614) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2748)</li> <li>Data Collector proposes change to a Form on a Case. The issues feature that has been available on the server is now optionally also available on Devices by <code>\"allowCreationOfIssues\": true</code> to <code>client/app-config.json</code> for the group you want this enabled. Most of the features of Issues you are familiar with from the server are there, except for merging proposals which is not allowed. Issues from Devices are uploaded to the server where proposals can be merged by a Data Manager. We also streamlined the Issue creation and proposal process by skipping the page to fill out an issue title/description, and then forward them directly to creating a proposal. To aid in issue titles/descriptions that make sense, Content Developers can now add <code>templateIssueTitle</code> and <code>templateIssueDescription</code> to Case Definition files.  (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2850) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2330) (Demo Video)</li> <li>Data Manager updates Issue Title and Issue Description Data Managers will now find a metadata tab on an Issue where they can update the Title, Description, and new \"Send to\" settings. (Issue: https://github.com/Tangerine-Community/Tangerine/issues/2851) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2330)</li> <li>Data Manager sends an Issue to all Devices in Sync Area or specific Device When create/configuring an Issue, Data Managers now have the option to send an Issue to a specific location in a Sync Area, or send it to a specific Device by Device ID. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2854) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2330)</li> <li>Forms Developer defines custom logic for Device's search of Cases and Forms In some cases there are situations where the standard variables for searching do not cover all things we want searched, or there is a compound field we want to be searched. Adding a client/custom-search.js file allows the Forms Developer to hook into the map function used to generate the search index. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2852) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2740)</li> <li>Data Manager views list of Issues related to Case When viewing a Case on the server, the first screen when opened will now show a list of related Issues. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2723) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2573)</li> <li>Form Developer uses API to override Device User based access to Event Forms on a per Case Event basis Currently we can configure in a Case Definition the operation permissions on all instances of an Event Form. This change allows a Form Developer to write logic that would control those permissions on a per Event Form basis by setting the same <code>permissions</code> property on the Event Form itself. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2624) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2660)</li> <li>Form Developer configures Devices to skip optimization of database views not in use on Device. Some projects relying heavily on a custom app will find they do not use all of the standard Tangerine database views, thus they can be skipped during the data optimization phase after a sync. In <code>app-config.json</code>, you can add a new <code>doNotOptimize</code> property with a value as an array of views to skip. To discover what views your app is indexing, see the console logs from a device during the optimization phase. You may discover some views you can add to <code>doNotOptimize</code> to speed up that optmization process. (Commit: https://github.com/Tangerine-Community/Tangerine/commit/4b8864470c1cad98e43152dd6bb3c91ee3e576a6)</li> <li>System Administrator batch imports all forms from a Tangerine v2 group into a Tangerine v3 group Tangerine v3 now has a script that will import all v2 group forms into a v3 group without having to do each form individually. (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2857) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2584)</li> </ol> <p>Fixes</p> <ol> <li>Issue created programatically in on-submit says we must rebase but no button to rebase #2785 Cases that have used the <code>T.case.createIssue()</code> API in forms to create Issues on the current form have recently found the resulting issues are broken. This is due to a change in when the Form Response is associated with the case (later than when T.case.createIssue() is called in a form's on-submit). To remedy this, we've added a new <code>T.case.queueIssueForCreation(\"Some label\", \"Some comment\")</code> API. If you are using T.case.createIssue(), immediately upgrade and replace its usage with T.case.queueIssueForCreation(). (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2785) (Example: https://github.com/Tangerine-Community/Tangerine/blob/next/content-sets/case-module/client/test-issues-created-programatically-on-client/form.html#L5)</li> <li>Using a simpler reverse sort for device status (PR: https://github.com/Tangerine-Community/Tangerine/pull/2775)</li> <li>Increase likelihood that migration of data to mysql will recover where it left off if server restarts. (PR: https://github.com/Tangerine-Community/Tangerine/pull/2773)</li> <li>From Case Definitions, the <code>onCaseOpen</code> and <code>onCaseClose</code> now also run in the server context. (PR: https://github.com/Tangerine-Community/Tangerine/pull/2696)</li> <li>\"openEvent is not defined\" when accessing a case in Editor (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2800)</li> <li>Synclog date/time header is incorrect and sort is broken (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2762)</li> <li>Synchronization UX Improvements - remove error state after retries when retry is successful (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2808) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2826)</li> <li>Fix missing 'form_' from id for v2 import (Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2856) (PR: https://github.com/Tangerine-Community/Tangerine/pull/2726)</li> <li>Minor tweak to tangerine-preview README (PR: https://github.com/Tangerine-Community/Tangerine/pull/2735)</li> </ol> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.19.0\n./start.sh v3.19.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.18.3\n# Perform additional upgrades.\ndocker exec -it tangerine bash\npush-all-groups-views\nupdate-down-sync-doc-count-by-location-id-index '*'\n# This will index all database views in all groups. It may take many hours if \n# the project has a lot of data.\nwedge pre-warm-views --target $T_COUCHDB_ENDPOINT\n</code></pre>"},{"location":"whats-new/#v31810","title":"v3.18.10","text":"<p>Fixes</p> <ul> <li>Backport: Make status translateable on Tangerine Teach Task Report. #3089</li> <li>Backport: When editing Timed Grids on Forms, \"Capture at Time\" and \"Duration\" are compared as strings leading to unexpected validation scenarios. #3130</li> </ul>"},{"location":"whats-new/#v3189","title":"v3.18.9","text":"<p>Fixes</p> <ul> <li>Backport: Restrict access to events by permissions when query by date on schedule view.</li> <li>Fix issue where logging in as a different user shows the previously logged in users data (Multiuser/Tablet sharing https://github.com/Tangerine-Community/Tangerine/issues/2060)</li> <li>Add additional translateables to Tangerine Teach components (Translatable feedback status text: https://github.com/Tangerine-Community/Tangerine/issues/2693) (Missing translatable strings: https://github.com/Tangerine-Community/Tangerine/issues/2987)</li> <li>Allow class title to be anywhere on form #2994</li> </ul>"},{"location":"whats-new/#v3188","title":"v3.18.8","text":"<ul> <li>Add support for skipping indexes in form's cycle sequences.</li> <li>Fix radio button scoring in Teach by only adding the final value of max to the totalMax variable. https://github.com/Tangerine-Community/Tangerine/issues/2947</li> <li>On Tangerine Teach reports, fix calculating of \"percentile\", AKA percent correct grouping. https://github.com/Tangerine-Community/Tangerine/issues/2941</li> </ul>"},{"location":"whats-new/#v3187","title":"v3.18.7","text":"<p>Fixes</p> <ul> <li>Back-ported some fixes to the backup and restore feature from the v3.19.1 branch.</li> <li>Fixed issue with Teach where third subtask would not open correctly.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.18.7\n./start.sh v3.18.7\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.18.6\n</code></pre>"},{"location":"whats-new/#v3186","title":"v3.18.6","text":"<p>Updates</p> <ul> <li>Updated tangy-form lib from 4.25.11 to 4.25.14 (Changelog), which provides:</li> <li>A fix for photo-capture so that it de-activates the camera when going to the next page or leaving a form. </li> <li>Implemented a new 'before-submit' event to tangy-form in order to listen to events before the 'submit' event is dispatched.</li> <li>A fix for User defined Cycle Sequences.</li> </ul> <p>Fixes</p> <ul> <li>Remove incorrect exception classes for changes processing #2883 PR: #2883 Issue: #2882</li> <li>Added backup and restore feature for Tangerine databases using device encryption. Increase the appConfig.json parameter <code>dbBackupSplitNumberFiles</code> (default: 200) to speed up the backup/restore process if your database is large. You may also change that parameter in the Export Backup user interface. Updated docs: Restoring from a Backup PR: #2910</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.18.6\n./start.sh v3.18.6\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.18.5\n</code></pre>"},{"location":"whats-new/#v3185","title":"v3.18.5","text":"<p>Fixes</p> <ul> <li>Server admin can configure regex-based password policy for Editor. Instructions in the PR: #2858 Issue: #2844</li> </ul>"},{"location":"whats-new/#v3184","title":"v3.18.4","text":"<p>Fixes</p> <ul> <li>Backported a fix from the v3.19.0 branch for \"Save the lastSequence number after each change is processed in the tangerine-mysql connector\" Issue #2772</li> <li>Address crashes when importing data using the mysql module #2820</li> </ul> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.18.4\n./start.sh v3.18.4\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.18.3\n</code></pre>"},{"location":"whats-new/#v3183","title":"v3.18.3","text":"<p>Fixes</p> <ul> <li>Important If your site uses csvReplacementCharacters to support search and replace configuration for CSV output, which was released v3.18.2, you must change the configuration string. See issue #2804 for information about the new schema.</li> <li>Backported a fix from the v3.19.0 branch for \"Issue created programmatically in on-submit says we must rebase but no button to rebase #2785\"</li> <li>Description: Cases that have used the <code>T.case.createIssue()</code> API in forms to create Issues on the current form have recently found the resulting issues are broken. This is due to a change in when the Form Response is associated with the case (later than when T.case.createIssue() is called in a form's on-submit). To remedy this, we've added a new <code>T.case.queueIssueForCreation(\"Some label\", \"Some comment\")</code> API. If you are using T.case.createIssue(), immediately upgrade and replace its usage with T.case.queueIssueForCreation().</li> <li>Ticket: https://github.com/Tangerine-Community/Tangerine/issues/2785</li> <li>Example: https://github.com/Tangerine-Community/Tangerine/blob/next/content-sets/case-module/client/test-issues-created-programatically-on-client/form.html#L5</li> </ul>"},{"location":"whats-new/#v3182","title":"v3.18.2","text":"<ul> <li>Feature: Editor User downloads CSVs for multiple forms as a set Issue: #2768  PR:#2777</li> <li>Feature: Remove configurable characters from CSV output #2787.</li> <li>Documentation updates for backup/restore and fixes to image paths</li> <li>Fix default user profile so it doesn't assume use of roles or location</li> <li>Disabled \"Print form backup\" in Editor</li> <li>Improvements to display of \"Print metadata\" in Editor</li> <li>Update and fix for Cycle Sequences to enable numbering of sequences starting from 1. PR's: #231, #269</li> <li>Bump tangy-form to 4.25.11 and tangy-form-editor to 7.8.8.</li> </ul>"},{"location":"whats-new/#v3181","title":"v3.18.1","text":"<ul> <li>Fix backup when using os encryption and sync protocol 2 and cordova. (PR: #2767)</li> <li>Fix creating of new Device Users when using Sync Protocol 2. (PR: #2769)</li> <li>Fix default user profile form for Sync Protocol 1 users. We should not assume they are using roles or location.</li> </ul>"},{"location":"whats-new/#v3180","title":"v3.18.0","text":""},{"location":"whats-new/#new-features","title":"New Features","text":"<ul> <li>Enable configurable image capture in client #2695 </li> <li>Makes image capture work with a max size attribute - PR: #218</li> <li>Add photo capture widget #203</li> <li>Serve base64 image data as image files #2706 PR: #2725</li> <li>Add Cycle sequences 1603</li> <li>Sort by lastModified in the client case search #2692</li> <li>Enable assigning multiple roles in forCaseRole in the eventFormDefinition #2694</li> <li>Enable defining custom functions or valid JavaScript expressions that will be called when an event is opened and when an event is closed. On open and close events for case and case-events: #2696</li> <li>Teach-specific strings in Russian for default content-set #2676</li> <li>Uploads status such as app version when updating the app #2756</li> </ul>"},{"location":"whats-new/#bugfixes","title":"Bugfixes","text":"<ul> <li>Initialize <code>git</code> in content repository before running <code>git</code> commands #2667</li> <li>Only show the links to historical releases when T_ARCHIVE_PWAS_TO_DISK and T_ARCHIVE_APKS_TO_DISK in the config.sh are set to true #2608</li> <li>Fix form breaking when form name has single quote #2489</li> <li>Add print options to archived forms #1987</li> <li>Fix Grid having negative values #2294</li> <li>Fix to allow for running on m1 Macs #2631 #2631 Thanks @fmoko and @evansdianga!</li> <li>For projects using the Case Reporting screen but don't have anything in reports.js but do have markup in reports.html, avoid crash due to empty file #2657</li> <li>V2 import script fixes #2675</li> <li>Allow HTML markup in option labels 2453</li> <li>Reset grid values when grid is restarted #</li> <li>Mark last attempted automatically when grid is auto-stopped #2467</li> </ul>"},{"location":"whats-new/#new-documentation","title":"New Documentation","text":"<ul> <li>Deleting Records</li> <li>Bullet points for Tangerine Development</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.18.0\n./start.sh v3.18.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.11\n</code></pre>"},{"location":"whats-new/#v31712","title":"v3.17.12","text":"<ul> <li>Feature: Remove configurable characters from CSV output #2787.</li> </ul> <p>This release also has bugfixes specific to the Class module, which now uses updated API's for form rendering. </p> <ul> <li>Feature for Class/Teach: Archive or enable a class. Issue: #2580</li> <li>Bugfix for Class/Teach: Teach loses data and blocks app if Class form is not submited #2783</li> <li>Bugfix for Class/Teach: App should return user to previous Curriculum when resuming app. Issue: #2648</li> <li>Refactor Class to handle changes in tangy-form; Bug in CSV rendering for Tangerine Teach. Issue: #2635</li> </ul>"},{"location":"whats-new/#v31711","title":"v3.17.11","text":"<ul> <li>Added support for custom update scripts for each group. Add either a before-custom-updates.js or after-custom-updates.js to the root of your content depending on when you wish the script to run. Script needs to return a Promise. See Issue 2741 for script example. PR: #2742</li> <li>Add support for filtering PII variables on Case Participant data and Event Form data in Synapse caches. List the variable names in your group's content folder <code>reporting-config.json</code>. For example: <code>{ \"pii\": [\"foo_variable\"] }</code>. This config was previously stored in the groups database.</li> <li>Fixed bug that prevented rewind sync from working.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.11\n./start.sh v3.17.11\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.10\n</code></pre>"},{"location":"whats-new/#v31710","title":"v3.17.10","text":"<ul> <li>Skip optimizing sync-queue, sync-conflicts, and tangy-form views after Sync Protocol 2 sync completes.</li> <li>Using <code>T.case.load()</code> in a form? This release fixes a bug where EventForm.formResponseId would be not set when submitting forms in cases where a form has loaded a different case and then the save case back again thus detaching the memory reference being previously set.</li> <li>Remove trailing whitespace from variables for mysql outputs to avoid illegal column names.</li> <li>Add response-variable-value API with support for returning jpeg and png base64 values as files.</li> <li>Refactor TANGY-SIGNATURE and TANGY-PHOTO-CAPTURE output in CSVs to be URLs of the image files.</li> <li>Creates work-around for deployments that are unable to use custom-scripts. Issue #2711 PR #2712 </li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.10\n./start.sh v3.17.10\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.9\n</code></pre>"},{"location":"whats-new/#v3179","title":"v3.17.9","text":""},{"location":"whats-new/#new-features-and-buffixes","title":"New Features and Buffixes","text":"<ul> <li>Prevent failed calls to <code>T.case.save()</code> in forms by avoiding any saves to a case when a form is active. PR, Issue</li> <li>Enable assigning multiple roles in forCaseRole in the eventDefinition #2694 - Cherry-picked commit 3e4938a0a80c57 only.</li> <li>Enable defining custom functions or valid JavaScript expressions that will be called when an event is opened and when an event is closed. On open and close events for case and case-events: #2702</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.9\n./start.sh v3.17.9\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.8\n</code></pre>"},{"location":"whats-new/#v3178","title":"v3.17.8","text":"<ul> <li>Fix use of initial batch size #2685</li> <li>Created <code>generate-form-json</code> script that generates the form json for a group from its form.html file. Usage:   <code>docker exec tangerine generate-form-json group-uuid</code>   The script loops through a group's forms.json and creates a form.json file in each form directory, next to its forms.html.   Before using this script, run <code>npm install</code>. Issue: #2686</li> <li>The synapse module now uses the json from <code>generate-form-json</code> to exclude PII. Also, the synapse module takes substitution and pii fields to accommodate schema changes and pii fields not identified in forms. PR: #2697 </li> </ul> <p>Place these properties in the groups Couchdb:</p> <pre><code>  \"substitutions\": {\n    \"mnh_screening_and_enrollment_v2\": \"mnh01_screening_and_enrollment\"\n  },\n  \"pii\": [\n    \"firstname\",\n    \"middlename\",\n    \"surname\",\n    \"mother_dob\"\n  ]\n</code></pre> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.8\n./start.sh v3.17.8\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.7\n</code></pre>"},{"location":"whats-new/#v3177","title":"v3.17.7","text":"<ul> <li>fix CSV generation issue: #2681</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.7\n./start.sh v3.17.7\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.6\n</code></pre>"},{"location":"whats-new/#v3176","title":"v3.17.6","text":"<ul> <li>fix issue w/ empty replicationStatus?.userAgent</li> <li>Switched from just-snake-case to @queso/snake-case - better Typescript compatability.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.6\n./start.sh v3.17.6\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.5\n</code></pre>"},{"location":"whats-new/#v3175","title":"v3.17.5","text":"<ul> <li>Bumps tangy-form to 4.23.3, editor to 4.23.3. Issue: 2620</li> <li>Update date carousel to 5.2.1 with fix for clicking the today button. PR: #2677</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.5\n./start.sh v3.17.5\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.4\n</code></pre>"},{"location":"whats-new/#v3174","title":"v3.17.4","text":"<ul> <li>Enables support for reducing the number of documents processed in the changed feed when syncing using the 'changes_batch_size' property in app-config.json. This new setting will help sites that experience crashes when syncing or indexing documents. Using this setting will slow sync times. Default is 50. During recent tests, the following settings have been successful in syncing a location with over 12,700 docs that was experiencing crashes:</li> <li>\"batchSize\": 50</li> <li>\"writeBatchSize\": 50</li> <li>\"changes_batch_size\": 20</li> </ul> <p>Please do note that these particular settings do make sync very slow - especially for initial device sync.  - Removed selector from push sync - was causing a crash on large databases. Using a filter instead in the push syncOptions    to exclude '_design' docs from being pushed from the client. - Adds \"Encryption Level\" column to the Devices Listing, which shows if the device is running 'OS' encryption or 'in-app' encryption.   - 'OS' encryption: Encryption provided by the device operating system; typically this is File-based (Android 10) or Full-disk encryption (Android 5 - 9).   - 'in-app' encryption: Database is encrypted by Tangerine.</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.4\n./start.sh v3.17.4\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.3\n</code></pre>"},{"location":"whats-new/#v3173","title":"v3.17.3","text":"<ul> <li>Automatically retry after failed sync. (https://github.com/Tangerine-Community/Tangerine/pull/2663)</li> <li>Do not associate form response with Event Form if only opened and no data entered.</li> <li>Fix issue causing Android Tablets using OS level encryption to spontaneously start using in-app encryption.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.3\n./start.sh v3.17.3\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.2\n</code></pre>"},{"location":"whats-new/#v3172","title":"v3.17.2","text":"<ul> <li>Add support for depending on Android Disk encryption as opposed to App Level encryption. Set <code>turnOffAppLevelEncryption</code> to <code>true</code> in <code>client/app-config.json</code>. Note that enabling this will not turn off App Level encryption for devices already installed, only new installations.</li> <li>Fix race condition data conflict on EventFormComponent that is triggered when opening and submitting a form quickly. Prevent data entry until Case is loaded to avoid conflicting Case save of a fast submit. </li> <li>Fix bug causing Device ID to not show up on About page on Devices.</li> <li>When syncing, push before pull to avoid having to analyze changes pulled down for push.</li> <li>Fix download links for archived APKs on Live channel.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.2\n./start.sh v3.17.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.1\n</code></pre>"},{"location":"whats-new/#v3171","title":"v3.17.1","text":"<ul> <li>Add support for Form Versions when it hasn't been used before by defaulting the first entry in formVersions when a form version isn't defined on a Form Response.</li> <li>Fix issue causing Device Admin user log in to fail.</li> <li>Restore missing <code>sectionDisable</code> function in skip logic for forms.</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Ensure git is initialized in all group folders.\ndocker start couchdb\ndocker start tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.1\n./start.sh v3.17.1\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.17.0\n</code></pre>"},{"location":"whats-new/#v3170","title":"v3.17.0","text":"<p>New Features and Fixes</p> <ul> <li>Device User Role access to Case Events and Event Forms #2598</li> <li>Getting started with using Device User Roles</li> <li>Demo: Device User role based access to Event Forms</li> <li>Demo: Device user role based permissions for Case Events</li> <li>Deactivate Case Participant API #2594</li> <li>Demo: https://youtu.be/Ulh-yCqfbFA</li> <li>Data Collector with a single click opens all pages of a completed form response #2596</li> <li><code>skip()</code> and <code>unskip()</code> functions are now available in <code>tangy-form</code> level <code>on-change</code> logic for skipping and unskipping sections, not inputs.</li> <li>Fix print form as table for some forms. (https://github.com/Tangerine-Community/Tangerine/pull/2568)</li> <li>Update the group icon on server #2355</li> <li>Add window.uuid() API #2595</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Ensure git is initialized in all group folders.\ndocker start couchdb\ndocker start tangerine\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.17.0\n./start.sh v3.17.0\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.16.4\n</code></pre>"},{"location":"whats-new/#v3165","title":"v3.16.5","text":"<p>Fixes</p> <ul> <li>T_ARCHIVE_APKS_TO_DISK and/or T_ARCHIVE_PWAS_TO_DISK setting have no effect. Issue: #2608</li> <li>Bug in CSV rendering for Tangerine Teach. Issue: #2635 new setting outputDisabledFieldsToCSV in groups doc</li> </ul> <p>Developer Interest</p> <p>There is now a content set for developing projects with the Class module enabled in content-sets/teach. Sets the following properties in app-config.json:</p> <ul> <li>\"homeUrl\": \"dashboard\"</li> <li>\"uploadUnlockedFormReponses\": true</li> </ul> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Ensure git is initialized in all group folders. \ndocker start couchdb\ndocker start tangerine\ndocker exec tangerine sh -c \"cd /tangerine/groups &amp;&amp; ls -q | xargs -i sh -c 'cd {} &amp;&amp; git init &amp;&amp; cd ..'\"\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.16.5\n# If you are enabling the new mysql module, follow the instructions in `docs/system-administrator/mysql-module.md` to update the config.sh file (steps 1 through 3)\n# If you do not wish APK and PWA archives to be saved, set T_ARCHIVE_APKS_TO_DISK and/or T_ARCHIVE_PWAS_TO_DISK to false.\n# Then return here before starting tangerine\n# Now you are ready to start the server.\n./start.sh v3.16.5\ndocker exec tangerine push-all-groups-views\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.16.4\n# If setting up mysql return to step 5 in `docs/system-administrator/mysql-module.md`\n</code></pre>"},{"location":"whats-new/#v3164","title":"v3.16.4","text":"<p>New Features</p> <ul> <li>Warning about data sync: Any site that upgraded to v3.16.2 is at risk of having records stay on the tablet unless they upgrade to v3.16.3 or v3.16.4. After upgrading to v3.16.4, go to the Online Sync feature and click the new 'Advanced Options' panel. There are two new options for sync - Comparison Sync and Rewind Sync. Comparison sync enables the Sync feature to compare all document id's on the local device with the server and uploads any missing documents. Rewind Sync resets the sync \"placeholder\" to the beginning, ensuring that all docs are synced. It doesn't actually re-upload all docs; it instead checks that all docs have been uploaded.  It is more thorough than Comparison Sync. Both of the features are for special cases and should not be used routinely. Issue: #2623</li> </ul> <p>There are two settings that can be configured for Comparison sync:    - compareLimit (default: 150) - Document id's must be collected from both the tablet and server in order to calculate what documents need to be sync'd to the server. This setting limits the number of docs queried in each batch.     - batchSize (default: 200) - Number of docs per batch when pushing documents to the server. This same configuration setting is used for normal sync, so please take care when making changes to it.</p> <p>This new \"Comparison\" option is very new and may have rough edges. In our experience, if the app crashes while using it, re-open the app and try again; chances are that it will work. If it consistently fails, lower the value for app-config.json's compareLimit property. </p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Ensure git is initialized in all group folders.\ndocker start couchdb\ndocker start tangerine\ndocker exec tangerine sh -c \"cd /tangerine/groups &amp;&amp; ls -q | xargs -i sh -c 'cd {} &amp;&amp; git init &amp;&amp; cd ..'\"\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.16.4\n# If you are enabling the new mysql module, follow the instructions in `docs/system-administrator/mysql-module.md` to update the config.sh file (steps 1 through 3)\n# If you do not wish APK and PWA archives to be saved, set T_ARCHIVE_APKS_TO_DISK and/or T_ARCHIVE_PWAS_TO_DISK to false.\n# Then return here before starting tangerine\n# Now you are ready to start the server.\n./start.sh v3.16.3\ndocker exec tangerine push-all-groups-views\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.16.3\n# If setting up mysql return to step 5 in `docs/system-administrator/mysql-module.md`\n</code></pre>"},{"location":"whats-new/#v3163","title":"v3.16.3","text":"<p>New Features</p> <ul> <li> <p>Warning about data sync: Any site that upgraded to v3.16.2 is at risk of having records stay on the tablet unless they upgrade to v3.16.3. After upgrading to v3.16.3, run the new \"Push all docs to the server\" feature available from the Admin Configuration menu item. This feature resets push sync to the beginning, ensuring that all docs are pushed. It doesn't actually re-upload all docs; it instead checks that all docs have been uploaded.</p> </li> <li> <p>Added \"Push all docs to the server\" feature to the Admin Configuration menu item.</p> </li> <li>Added Operating System and Browser Version to Device listing.</li> </ul> <p>Fixes - Data collected after first registering and after updates fails to upload. Issue: #2623</p> <p>Server upgrade instructions</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Ensure git is initialized in all group folders. \ndocker start couchdb\ndocker start tangerine\ndocker exec tangerine sh -c \"cd /tangerine/groups &amp;&amp; ls -q | xargs -i sh -c 'cd {} &amp;&amp; git init &amp;&amp; cd ..'\"\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.16.3\n# If you are enabling the new mysql module, follow the instructions in `docs/system-administrator/mysql-module.md` to update the config.sh file (steps 1 through 3)\n# If you do not wish APK and PWA archives to be saved, set T_ARCHIVE_APKS_TO_DISK and/or T_ARCHIVE_PWAS_TO_DISK to false.\n# Then return here before starting tangerine\n# Now you are ready to start the server.\n./start.sh v3.16.3\ndocker exec tangerine push-all-groups-views\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.16.2\n# If setting up mysql return to step 5 in `docs/system-administrator/mysql-module.md`\n</code></pre>"},{"location":"whats-new/#v3162","title":"v3.16.2","text":"<p>New Features</p> <ul> <li>Enables filtering of Case Event Schedule by Device's Assigned Location PR: #2591</li> </ul> <p>Fixes - Enables editing of device description. Commit: #2613</p> <p>Server upgrade instructions</p> <p>If you want to enable filtered Case Event Schedule by Device's Assigned Location, add <code>filterCaseEventScheduleByDeviceAssignedLocation</code> to your groups' <code>app-config.json</code> set to a value of <code>true</code>.</p> <p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Ensure git is initialized in all group folders. \ndocker start couchdb\ndocker start tangerine\ndocker exec tangerine sh -c \"cd /tangerine/groups &amp;&amp; ls -q | xargs -i sh -c 'cd {} &amp;&amp; git init &amp;&amp; cd ..'\"\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.16.2\n# If you are enabling the new mysql module, follow the instructions in `docs/system-administrator/mysql-module.md` to update the config.sh file (steps 1 through 3)\n# If you do not wish APK and PWA archives to be saved, set T_ARCHIVE_APKS_TO_DISK and/or T_ARCHIVE_PWAS_TO_DISK to false.\n# Then return here before starting tangerine\n# Now you are ready to start the server.\n./start.sh v3.16.2\ndocker exec tangerine push-all-groups-views\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.16.1\n# If setting up mysql return to step 5 in `docs/system-administrator/mysql-module.md`\n</code></pre>"},{"location":"whats-new/#v3161","title":"v3.16.1","text":"<p>New Features</p> <ul> <li>Improves sync stats and add \"Export Device List\" feature PR: #2610</li> </ul> <p>Fixes - Fixes Editor form creation issue #2605 and form copy issue #2604 - Adds check for calculateLocalDocsForLocation before running update to index an index it depends upon. - Update tangy-form to 4.21.3, tangy-form-editor to 7.6.5 to fix dynamically set level tangy location not resuming correctly #202</p> <p>Server upgrade instructions Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Ensure git is initialized in all group folders. \ndocker start couchdb\ndocker start tangerine\ndocker exec tangerine sh -c \"cd /tangerine/groups &amp;&amp; ls -q | xargs -i sh -c 'cd {} &amp;&amp; git init &amp;&amp; cd ..'\"\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.16.1\n# If you are enabling the new mysql module, follow the instructions in `docs/system-administrator/mysql-module.md` to update the config.sh file (steps 1 through 3)\n# If you do not wish APK and PWA archives to be saved, set T_ARCHIVE_APKS_TO_DISK and/or T_ARCHIVE_PWAS_TO_DISK to false.\n# Then return here before starting tangerine\n# Now you are ready to start the server.\n./start.sh v3.16.1\ndocker exec tangerine push-all-groups-views\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.16.0\n# If setting up mysql return to step 5 in `docs/system-administrator/mysql-module.md`\n</code></pre>"},{"location":"whats-new/#v3160","title":"v3.16.0","text":"<p>New Features</p> <ul> <li>Warning about data sync: If you have implementations that have multiple tablets syncing from the same location, some docs may not be on all tablets due to issues with earlier versions of sync. This release resolves that particular issue and provides ways to ensure that all tablets share the same data. We have implemented several ways to rectify and understand potential data inconsistencies across tablets in the field:</li> <li> <p>After updating the server to 3.16.0 and after updating and syncing the clients, the Device dashboard will now display the number of docs on each tablet (\"All Docs on Tablet\") and the number of docs according to the device's Location configuration (\"Form Responses on Tablet for Location\"). </p> <ul> <li>Depending on the Configure/Sync settings, the \"All Docs on Tablet\" count may be close, but not exactly the same, since not all forms may be synced to the tablets.</li> <li>The \"Form Responses on Tablet for Location\" count should be the same for all tablets that share the same location configuration. Please note that \"Form Responses on Tablet for Location\" count needs to be activated by adding <code>\"calculateLocalDocsForLocation\": true</code> to app-config.json; also note that it has not been widely tested and may be unstable. (If you activate this feature, you may also add <code>\"findSelectorLimit\"</code> to modify how many batches are used to calculate this value. Default is 200. Lower is safer but slower.) </li> </ul> <p>These data points may help in identifying data  inconsistencies. Remember - only after updating and syncing the tablets, will these new doc counts be populated with data in the Devices listing. Making a note of the document counts per tablet will help establish a baseline.   - Next step would be to run the new \"Force Full Sync\" feature, which is implemented in two ways:  - If you add the new <code>\"forceFullSync\" : true</code> setting in the group's app-config.json, the client will perform a full sync upon the next update. Since this takes time and Internet bandwidth, you may wish to notify users before enabling this feature. - When logging in as \"admin\" user on the client tablet, a new menu item called \"Admin Configuration\" will be visible below the \"Settings\" item. This new item enables manual operation of the \"Force Full Sync\" feature. It is labeled \"Pull all docs from the server\" in the user interface.   - You may adjust the settings for how many documents \"Force Full Sync\" downloads at a time by adjusting the <code>initialBatchSize</code> property in app-config.json. The default is 1000 documents per batch. This setting is also used when performing the initial load of documents on a tablet. - Tangerine Release Archives: Every Tangerine APK or PWA release is saved and tagged. If your site is configured for archives (which is the default), you may download previous Android releases. PR: #2567 - A \"Description\" field has been added to the Devices listing to faciliate identification of devices or groups of devices.  - Beta Release Mysql module: Data sync'd to Tangerine can be output to a MySQL database. Warning: This should not yet be deployed on a production server; the code for this feature is still in development. We recommend creating a separate server for the Tangerine/MySQL installation and replicate data from the production server to the Tangerine server that would provide the MySQL service.   Docs: <code>docs/system-administrator/mysql-module.md</code> PR: #2531 - Devices listing offers more information about the sync process, including version, errors, and sync duration.</p> </li> </ul> <p>Fixes - Changes to the sync code should improve sync stability and speed. #2592 You may configure certain sync properties:   - initialBatchSize = (default: 1000) Number of documents downloaded in the first sync when setting up a device.   - batchSize (default: 200) - Number of documents downloaded upon each subsequent sync.   - writeBatchSize = (default: 50) - Number of documents written to the tablet during each sync batch. - Updated tangy-form-editor to v7.6.4, which improves functionality of <code>duplicate entire section</code>. PR: #173 - Updates the Schedule View to use date-carousel 5.2.0 which provides unix timestamps instead of date strings. #2589 - Upgrade tangy-form to fix issue causing <code>on-open</code> of first items to not run when proposing changes in an Issue. - Deactivate App.checkStorageUsage if using Sync Protocol 2. This was not compatible and should not run. - Allow projects to disable GPS warming to save on battery with <code>disableGpsWarming</code> in <code>app-config.json</code>. - Add missing import of <code>editor/custom-scripts.js</code> when using editor so Data Dashboards can have imported JS files.</p> <p>Server upgrade instructions Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Ensure git is initialized in all group folders. \ndocker start couchdb\ndocker start tangerine\ndocker exec tangerine sh -c \"cd /tangerine/groups &amp;&amp; ls -q | xargs -i sh -c 'cd {} &amp;&amp; git init &amp;&amp; cd ..'\"\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.16.0\n# If you are enabling the new mysql module, follow the instructions in `docs/system-administrator/mysql-module.md` to update the config.sh file (steps 1 through 3)\n# If you do not wish APK and PWA archives to be saved, set T_ARCHIVE_APKS_TO_DISK and/or T_ARCHIVE_PWAS_TO_DISK to false.\n# Then return here before starting tangerine\n# Now you are ready to start the server.\n./start.sh v3.16.0\ndocker exec tangerine push-all-groups-views\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.15.6\n# If setting up mysql return to step 5 in `docs/system-administrator/mysql-module.md`\n</code></pre>"},{"location":"whats-new/#v3158","title":"v3.15.8","text":"<ul> <li>New Sync code reduces the number of network requests by disabling server checkpoints. It also supports three new app-config.json options to configure sync parameters that adjust data download size, how much data is written to the local database each batch, and initial data download:</li> <li>batchSize: Number of docs to pull from the server per batch. Increasing this setting will decrease the number of network requests to the server when doing a sync pull. Default: 200</li> <li>writeBatchSize: How many docs to write to the database at a time. If the database crashes, decreasing this option could be helpful. Default: 50</li> <li>useCachedDbDumps: Enables caching of the group database to a file for a single download to the client upon initial device setup. This is an experimental feature therefore it is not enabled by default. (Some server code is also currently disabled.) Those files are stored at data/groups/groupName/client/dbDumpFiles. At this point, you must delete the dbDumpFiles if you wish to update the data in the initial device load. 2560</li> <li>Disable the v3.15.0 update from groups that use sync-protocol 1. </li> <li>Added <code>2021</code> to the report year.</li> <li>Added simple network statistics to the device replicationStatus, which is posted after every sync.</li> </ul> <p>Server upgrade instructions Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.15.8\n# Now you are ready to start the server.\n./start.sh v3.15.8\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.15.7\n</code></pre>"},{"location":"whats-new/#v3157","title":"v3.15.7","text":"<p>New Features and Fixes - Fixes a bug in the CSV generation code that caused sections of rows in the CSV to output improperly. PR:#2558 - Adds a server config that allows the user to control the string used for variables that are <code>undefined</code>: <code>T_REPORTING_MARK_UNDEFINED_WITH=\"UNDEFINED\"</code> - The default value of the new config file is set to \"ORIGINAL_VALUE\" so existing Tangerine instances will not be effected.</p> <p>Server upgrade instructions Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <p>Please add the below line into your config.sh to preserve current behavior (as a workaround for #2564) <pre><code>T_REPORTING_MARK_UNDEFINED_WITH=\"\"\n</code></pre></p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.15.7\n# Now you are ready to start the server.\n./start.sh v3.15.7\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.15.6\n</code></pre>"},{"location":"whats-new/#v3156","title":"v3.15.6","text":"<p>New Features and Fixes - New 'wakelock' feature for sync: When using the sync feature, the screen should not go to sleep or dim, enabling the sync process to proceed. This is especially useful during long sync processes. When you navigate to another page once Sync is complete, the wakeLock feature is disabled.  - The Devices listing has a new option, \"View Sync Log\", which enables viewing status of the most recent replication, when available. - Added error messages when internet access drops during a sync. #2540 - Batch size for sync is configurable via <code>pullSyncOptions</code> and <code>pushSyncOptions</code> variable in a group's app-config.json. Default is 200. If the value is set too high, the application will crash.</p> <p>Server upgrade instructions Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.15.6\n# Now you are ready to start the server.\n./start.sh v3.15.6\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.15.5\n</code></pre>"},{"location":"whats-new/#v3155","title":"v3.15.5","text":"<p>Fixes - In CSV output, if a section on a form is opened and then the later skipped, inputs on that skipped section will appear in CSV output as skipped. However, if the section is never opened, the inputs would show up in the CSV as blank values. This fix ensures that these remaining inputs are marked as skipped in CSV output. - Fix sync from breaking when syncing with a group with no data yet. - Improve messaging during sync by removing floating change counts and showing the total number of docs in the database after sync.</p> <p>Server upgrade instructions Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.15.5\n# Now you are ready to start the server.\n./start.sh v3.15.5\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.15.4\n</code></pre>"},{"location":"whats-new/#v3154","title":"v3.15.4","text":"<p>Fixes - Sync: Sites with large datasets were crashing; therefore, we implemented a new sync function that syncs batches of documents to the server. PR: #2532</p> <p>Server upgrade instructions</p> <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.15.4\n# Now you are ready to start the server.\n./start.sh v3.15.4\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.15.3\n</code></pre>"},{"location":"whats-new/#v3153","title":"v3.15.3","text":"<p>Fixes - After a large sync in sync protocol 2, improve overall app performance by indexing database queries. Because this may cause a long sync for projects not using this, you can set <code>indexViewsOnlyOnFirstSync</code> in <code>app-config.json</code> to <code>true</code> if you want to allow existing tables to avoid this long sync to catch up on views. - Add missing <code>custom-scripts.js</code> and <code>custom-styles.css</code> files to Editor app. We also add <code>editor</code> and <code>client</code> ID's to the body tag of the two app respectively. - Reduce database merge conflicts by preventing form responses from saving after completed. Prior to this version, on two tablets (or on a tablet and the server) if you opened the same form response and opened an item to inspect, it would cause a save on both tablets resulting in an unnesessary merge conflict. - New <code>T.case.getCaseHistory(caseId)</code> function for getting the history of save for a Case. Returns an array of JSON patches in RFC6902 format.  Open a Case and run <code>await T.case.getCaseHistory()</code> in the console and it will pick up on the context. - New <code>T.case.getEventFormHistory(caseId, caseEventId, eventFormId)</code> function for getting the history of save for a form response in a Case. Returns an array of JSON patches in RFC6902 format.  Open a Case, a Case Event, then an Event Form and run <code>await T.case.getEventFormHistory()</code> in the console and it will pick up on the context. - New opt-in <code>app-config.json</code> setting <code>attachHistoryToDocs</code> for enabling upload all history of Case and Event Form edits on a Tablet up to the Server. Without this setting on, the server only sees the history starting from time of upload. Note this has an impact on upload size of at least doubling it when turned on.</p> <p>Important configuration notice - Set <code>indexViewsOnlyOnFirstSync</code> in <code>app-config.json</code> to <code>true</code> if you want to allow existing tables to avoid this long sync to catch up on views.</p> <p>Server upgrade instructions</p> <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.15.3\n# Now you are ready to start the server.\n./start.sh v3.15.3\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.15.2\n</code></pre>"},{"location":"whats-new/#v3152","title":"v3.15.2","text":"<p>Fixes</p> <ul> <li>Rshiny module: Replaces hard-coded underscore separator with the configurable <code>sep</code> variable. </li> <li>Error when processing CSV's: 2517</li> </ul> <p>Important configuration notice</p> <p>The v3.15.0 release included an update to the Editor Search feature #2416 that requires adding a <code>searchSettings</code> property to forms.json. In addition to running the upgrade script for v3.15.0; you must also make sure that all forms in a group's forms.json have <code>searchSettings</code> configured, especially the <code>shouldIndex</code> property. Examples are in the Case Module README \"Configuring Text Search\" section.</p> <p>Server upgrade instructions</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space. Ensure there is at least 10GB + size of the data folder amount of free space in order to perform the upgrade.\ndf -h\n# Turn off tangerine and database.\ndocker stop tangerine couchdb\n# Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n# Fetch the updates.\ngit fetch origin\ngit checkout v3.15.2\n# Now you are ready to start the server.\n./start.sh v3.15.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.15.1\n</code></pre>"},{"location":"whats-new/#v3151","title":"v3.15.1","text":"<p>Fixes</p> <ul> <li>Prevent opening of Event Forms on Editor when there is no corresponding Form Response available. </li> <li>Fix Issue type detection when deciding what is going to be in the 'current' tab. </li> <li>Update CSV output for signatures to be 'signature captured' and ''.</li> <li>Fix Issues view causing Issue search result to appear once per event such as comment or proposal. </li> <li>Integrate fixes in v3.14.6 including <code>T.case.isIssueContext()</code> API, and better API partity between being in an Event Form in a Case and being in an Event Form in an Issue.</li> </ul> <p>Server upgrade instructions</p> <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.15.1\n# Now you are ready to start the server.\n./start.sh v3.15.1\ndocker exec -it tangerine push-all-groups-views  \ndocker exec -it tangerine reporting-cache-clear  \n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.15.0\n</code></pre>"},{"location":"whats-new/#v3150","title":"v3.15.0","text":"<ul> <li>New Features and fixes</li> <li>Editor User searches Cases by keyword #2416 - This feature enables searching by any of the variables assigned in searchSettings/variablesToIndex in forms.json. </li> <li>Transfer Participant between Cases #2419. Find Participant UI: #2439.</li> <li>Update to Content Set 2.1 adds a package.json and build step to pin lib versions and add a build step for custom-scripts.</li> <li>Added error message to Updates error alert. ccc1864 </li> <li>New \"Release Online Survey\" menu on Server allows you to release a single form for data collection online. Note the original \"Deploy -&gt; Release\" menu item has been moved to \"Deploy -&gt; Release Offline App\".</li> <li>Fixed issue where \"Tangy Gate\" form element could be added in Editor but would not appear on Tablets.</li> <li>Support for new \"\" element that brings a Partial Date style form element with support for the Ethiopian Calendar. <li> <p>If using Sync Protocol 2, the first sync when registering a Device is now faster in cases where there is a lot of data already collected. Also the blank User Profile created for the Admin user on a device is no longer uploaded resulting in less noise in the Device Users list.</p> </li> <li> <p>Important deprecation notice</p> </li> <li>The groupName property, once used in app-config.json, is no longer supported in recent releases of Tangerine. The groupId property is used in its place. Groups that use groupName will not be able to sync; they must migrate to groupId. This issue affects groups using sync-protocol-1. #2447</li> <li>When form responses are unlocked in a Data Issue, the <code>on-submit</code> hook no longer runs. If you need logic to run, use the new <code>on-resubmit</code> hook.</li> <li>If using Sync Protocol 2, the \"Auto Merge\" feature that tries to fix database conflicts is now off by default and database conflicts will not be logged as Issues. If you would like to keep it on, set <code>\"autoMergeConflicts\": true</code> in your group's <code>client/app-config.json</code> file. However be aware that turning this on will result in inconsistent results (https://github.com/Tangerine-Community/Tangerine/issues/2484). Monitoring for database conflicts can now be done by monitoring the <code>syncConflicts</code> view via CouchDB Fauxton.</li> <p>Server upgrade instructions: <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.15.0\n# Now you are ready to start the server.\n./start.sh v3.15.0\n# Update the views - there are new views for Searches and Participant Transfers.\ndocker exec -it tangerine reporting-cache-clear \ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.15.0.js\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.14.6\n</code></pre></p>"},{"location":"whats-new/#v3146","title":"v3.14.6","text":"<p>Changes in v3.14.4 were abandoned, changes in v3.14.5 have been rolled into v3.15.0. The following are changes for v3.14.6.</p> <ul> <li>Improve first sync performance: On first sync, skip push but set the last push variable to whatever we left on after the first pull.</li> <li>Improve in-form API parity between context of a Case and context of an Issue proposal. Sets case context in more scenarious inside of Issue Form proposals.</li> <li>Prevent form crashes and unintentional logic by adding the new <code>T.case.isIssueContext()</code> API for detecting if in the Issue context in a form.</li> </ul> <p>Server upgrade instructions:</p> <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.14.6\n# Now you are ready to start the server.\n./start.sh v3.14.6\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.14.3\n</code></pre>"},{"location":"whats-new/#v3143","title":"v3.14.3","text":"<ul> <li>Bugfix</li> <li>Auto-merged conflicts overwrite \"canonical\" change made on Editor server #2441 - Prevents tablets from overwriting documents from Editor in special cases. After modifying the case record, add canonicalTimestamp to the document: <code>\"canonicalTimestamp\":1603854576785</code></li> <li>New Features and fixes for all Tangerine</li> <li>Reduce number of unnecessary saves in Editor #2444</li> <li>Improvements to Issues Listing #2398 Please update the group views (noted in the Server upgrade instructions below) in order to use the Issues Listing.</li> <li>Upgrades in the Developers' Interest</li> <li>Removed webpack from the Docker image. Custom apps should build their apps using their own webpack; the APK service will no longer perform that task. </li> </ul> <p>Server upgrade instructions:</p> <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.14.3\n# Now you are ready to start the server.\n./start.sh v3.14.3\n# Update the views - there is a new view used for Issues.\ndocker exec -it tangerine push-all-groups-views\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.14.2\n</code></pre>"},{"location":"whats-new/#v3142","title":"v3.14.2","text":"<ul> <li>Bugfix</li> <li>Fixes file path issue when bundling custom scripts in APK's.</li> </ul> <p>Server upgrade instructions:</p> <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.14.2\n# Now you are ready to start the server.\n./start.sh v3.14.2\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.14.1\n</code></pre>"},{"location":"whats-new/#v3141","title":"v3.14.1","text":"<p>This is identical to v3.14.0 but was released to fix a problem with tangerine-preview v3.14.0 on npm.</p>"},{"location":"whats-new/#v3140","title":"v3.14.0","text":"<ul> <li>New Features and fixes for all Tangerine</li> <li>Usability Improvement for Device Registration: Added \"Number of devices to generate\" field to Device Registration. Submitting a single form to add multiple devices to a group should simplify large deployments. #2402</li> <li>Important bugfix for sync issue in poor network situations: If you currently have an active 3.13 deployment, run the 3.14 update on client to make sure all data is sync'd to the server. #2399</li> <li>Automatic conflict resolution on client: Basic support for automatic merges of conflicts in EventForms. #2272 Documentation for testing conflicts</li> <li>Form version support: Enables use of previous form versions for form display. #2365 Support for versioning is not yet implemented in the Editor; however, there is documentation on how to implement form versions manually.</li> <li>User Interface updates: The 4.19.0 tangy-form lib version features the following fixes:<ul> <li>Required Field Asterisk (*) does not align with the question text #2363</li> <li>Error Text and Warning Text have the same style - this is confusing for users #2364</li> </ul> </li> <li>Setting packageName in app-config.json causes app to crash: The docker-tangerine-base-image update to 3.7.0 improves Android and Cordova lib dependencies, and the release-apk code now rebuilds the Android code whenever an APK is built. #2366</li> <li>New module for rshiny development: Adds option to csv module to change delimiter from '.' to '_'#2314</li> <li>Documentation Update:   Re-organization of some documentation and addition of missing image files. #2401</li> <li>Upgrades in the Developers' Interest</li> <li>Upgraded docker-tangerine-base-image to v3.7.1: Upgrade to Android API_LEVEL 30, Cordova 10, node:14.12.0-stretch. #1890 Caching cordova-android platform to avoid network issues when customizing packageName. #7</li> <li>Important note for users of tangerine-preview There was a problem with v3.14.0 on npm; therefore, please use tangerine-preview v3.14.1.</li> </ul>"},{"location":"whats-new/#v3131","title":"v3.13.1","text":"<ul> <li>Fix: Issues on Editor always ask us to rebase #2376</li> <li>Fix: Issues screen will not load after upgrading from v3.10.0 to v3.13.0 #2378</li> <li>Fix: Issues go missing after upgrading to v3.13.0 from v3.12.x #2377</li> <li>Please be aware: this release was made in the release/v3.13.1-alt branch and to date has only been built as the v3.13.1-rc-2 image.</li> </ul> <p>Server upgrade instructions:</p> <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.13.1\n# Now you are ready to start the server.\n./start.sh v3.13.1\n# Run upgrade\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.13.1.js\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.13.0\n</code></pre>"},{"location":"whats-new/#v3130","title":"v3.13.0","text":"<ul> <li>New Features and fixes for all Tangerine</li> <li>Download Location List as CSV: You can now download a location list as a CSV. If you prefer editing a Location List via something like Excel, this makes editing an existing location list easier, which can then be imported when done editing in Excel. Note: Advise careful use of this export feature until #2336 is fixed. #2107</li> <li>Duplicate a Section:When editing a form, you can now easily duplicate an entire section with the \"duplicate section\" button. #2109. Warning - this feature does not handle complex objects such as tangy checkbox groups well; be sure to check the code it generates. This issue will be addressed in the next 3.13 point release.</li> <li>Group Data Dashboard in Editor: \"Dashboard\" is now a menu item available in a Group under the Data menu. This link can be enabled by group role (disabled by default). When on the Dashboard page, it displays a customizable dashboard for that specific group. Customizing Dashboards currently requires HTML and Javascript knowledge but in the future we may build a configurator for Dashboards.</li> <li>More Menu Permissions in Editor:Add additional Editor permissions to completely cover menu level access in a group</li> <li>Automatic conflict resolution: After a sync pull on client, detects type of conflict and resolves it. View status of merges in the Issues feature. #1763</li> <li>Fix extending session in Editor - When prompted to extend session shows up session is not really extended. #2266</li> <li>New Features and Fixes for Case Module</li> <li>Client \"Issues\" feature: \"Issues\" previously could only be viewed using Editor. With this release, Issues can now be accessed from Client in a Case module enabled Group via the top level \"Issues\" tab. This tab can be disabled adding or modifying <code>\"showIssues\": false,</code> to app-config.json. Note that only issues created targeting the \"CLIENT\" context (See CaseService API documentation) will show up in the Client \"Issues\" tab.</li> <li>Easier searching on Client: Previously on Client when searching for \"Facility 8\" you would need to type exactly \"Facility 8\". Now search is case insensitive and you may type \"facility 8\" to match against \"Facility 8\".</li> <li>T.case.setEventWindow API fix: Previously when setting an Event window, the end time for the window was mistakenly ignored and set to the start time. This is now fixed. #2304</li> <li>New Features for Sync Protocol 2 Module</li> <li>Export device sheets: When registering Devices, we now offer an option to print \"Device Sheets\". Device Sheets include the registration codes for a Device and also some human readable metadata. Each row can also be used as a label for each device that can be fastened to a device using affordable clear packing tape. #2269</li> <li>Restore Backup on Android Tablet: Backups can now be restored. Restore is an option when first opening a freshly installed APK. #2127</li> <li>Better support for working on the same Case on two devices: When working offline on the same Case on two Devices, after a sync, it may seem like the changes on one Tablet have gone missing for some time until the \"database conflicts\" are resolved using the CouchDB Futon interface on the server. Starting in v3.13.0 we'll start to employ algorithms for automatically merging to speed up the process of resolving these database conflicts.</li> <li>Notes for System Administrators</li> <li>After upgrade, you will no longer find group content directories in <code>./data/client/content/groups/</code>, they will be in <code>./data/groups/</code>. Inside each group's directory you will also find they have been split into a <code>client</code> and <code>editor</code> directory. All previous content will now be in the <code>client</code> directory while you may place content for the Group's Data Dashboard in the <code>editor</code> folder.</li> </ul> <p>Server upgrade instructions:</p> <p>This update changes the path to group content to <code>/tangerine/groups/${groupId}/client</code>. If your group is managing content  via a Github/cron integration, you will need to change the path to content in its cron job. Change <code>GROUP-UUID</code> to your  group id in the following command:</p> <pre><code>cd /home/ubuntu/tangerine/data/groups/GROUP-UUID/client &amp;&amp; GIT_SSH_COMMAND='ssh -i /root/.ssh/arc-forms-dev' git pull origin master &amp;&amp; git add . &amp;&amp; git commit -m 'auto-commit' &amp;&amp; GIT_SSH_COMMAND='ssh -i /root/.ssh/arc-forms-dev' git push origin master\n</code></pre> <p>The update:</p> <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.13.0\n# Now you are ready to start the server.\n./start.sh v3.13.0\n# Run upgrade\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.13.0.js\n# Add or modify `\"showIssues\": false,` to the group's app-config.json if you do not want to display the Issues tab in client.\n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.12.0\n</code></pre>"},{"location":"whats-new/#v3125","title":"v3.12.5","text":"<ul> <li>Fixed issue with black screen when moving from p2p tab to home</li> </ul>"},{"location":"whats-new/#v3124","title":"v3.12.4","text":"<ul> <li>Fixed issue with QR code boundary boxes in tangy-form #158.  Bumped tangy-form v4.17.10 and tangy-form-editor to 7.2.5</li> </ul>"},{"location":"whats-new/#v3123","title":"v3.12.3","text":"<ul> <li>Fixed issue with mutually exclusive checkboxes in tangy-form #154.  Bumped tangy-form v4.17.9 and tangy-form-editor to 7.2.3</li> </ul>"},{"location":"whats-new/#v3122","title":"v3.12.2","text":"<ul> <li>When saving edits to a form, \"Show if\" logic has been written as <code>tangy-if</code> logic in the HTML. Form now on it will be written as <code>show-if</code> logic for consistency.</li> <li><code>tangy-if</code> logic in has in the past in just showing/hiding an question on a form. It will now also reset the value if there is input and it is then hidden.</li> <li>In v3.12.0, <code>caseService.getCurrentCaseEventId()</code> was incorrectly removed. It has been added back, and an additional <code>caseService.getCurrentEventFormId()</code> function has been added for consistency.</li> <li>Fix Android 10 compatibility issue with P2P Sync mechanism causing tablets to crash.</li> </ul>"},{"location":"whats-new/#v3121","title":"v3.12.1","text":"<ul> <li>Change behavior of <code>show-if</code> logic so that when a question hides, the value is reset.</li> <li>Adjust behavior of how Event Forms are added: If <code>EventForm.autoPopulate</code> is left undefined and required is true, then the form should be added.</li> </ul>"},{"location":"whats-new/#v3120","title":"v3.12.0","text":"<ul> <li>New Features for Case Module</li> <li>Data Collector finds Event Forms are automatically created on Case Event creation and after adding a Participant #2147 [Demo]</li> <li>Data Collector has found a non required form has become required #2233<ul> <li>Demo Part 1: https://youtu.be/dnJk4LaGuQw</li> <li>Demo Part 2: https://youtu.be/I0JOZounZc4</li> </ul> </li> <li>Data Collector finds Case Event is automatically marked as complete #2235 [Demo]</li> <li>Data Collector sees indicator on Event Form when corresponding Form Response has not been synced to a device #2232 [Demo]</li> <li>Data Collector views a dedicated page for a Participant's Event Forms for a specific Case Event #2236 [Demo]</li> <li>Data Collector is redirected to custom route after Event Form is submitted #2237 [Demo]</li> <li>Fixes for Case Module</li> <li>Device User registering only sees user profiles they can associate with restricted by location the Device is assigned #2248</li> <li>When all optional and incomplete forms are removed (no required forms in the event) from an event on the client the + button is not shown to re-add any of them #2113</li> <li>Delete an incomplete form from a case does not refresh the screen #2114</li> <li>Fixes for all of Tangerine</li> <li>Autostop is not triggered when marking the entire lineas incorrect #1869</li> <li>Mark entire line of grid as incorrect cannot be undone #1651</li> <li>Meta data print screen Prompt and Hint are not displayed for Radio Buttons (single type) #1748</li> <li>Form Metadata view of Checkboxes with one option is missing #2239</li> <li>New features for Sync Protocol 2</li> <li> <p>Restore encrypted backup on Device #2127</p> </li> <li> <p>API Changes for Case Module</p> </li> <li><code>caseEvent.status</code> is now <code>caseEvent.complete</code> which has a value of <code>true</code> or <code>false</code> as opposed to the status strings.</li> <li><code>caseService.startEventForm(...)</code> is now <code>caseService.createEventForm(...)</code>.</li> <li><code>caseService.deleteEventFormInstance(...)</code> is now <code>caseService.deleteEventForm(...)</code>.</li> <li><code>caseService.getCaseEventFormsData(...)</code> is now <code>caseService.getEventFormData(...)</code>.</li> <li><code>caseService.setCaseEventFormsData(...)</code> is now <code>caseService.setEventFormData(...)</code>.</li> </ul> <p>Server upgrade instructions:</p> <p><pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.12.0\n# Now you are ready to start the server.\n./start.sh v3.12.0\n# Run upgrade\ndocker exec -it tangerine reporting-cache-clear \n# Remove Tangerine's previous version Docker Image.\ndocker rmi tangerine/tangerine:v3.11.0\n</code></pre> Note that after running the upgrade script, your reporting caches may take some time to finish rebuilding.</p> <p>Android upgrade instructions: If you are upgrading an Android device that was installed with Tangerine v3.8.0 or greater, you will need to regenerate your APK and reinstall, otherwise you may use the over the air updater.</p>"},{"location":"whats-new/#v3110","title":"v3.11.0","text":"<ul> <li>New Features in all Tangerine</li> <li>Device Manager installs many Tangerine APKs on a single device #2182</li> <li>CSV output enhancements:<ul> <li>Editor User indicates whether to include PII in CSV export #1771</li> <li>User profile information available in CSV export #2081</li> <li>Editor User exports CSV file that contains the group and form name #2108</li> </ul> </li> <li>New 'T' namespace for helper functions #2198</li> <li>New Features in Tangerine with Case Module enabled</li> <li>Data Collector changes location of Case #2098 [demo]</li> <li>Data Collector views an alert #2020 [demo]</li> <li>Data Collector views custom report #2143 docs</li> <li>Developer notes</li> <li>Group permissions #2187</li> </ul> <p>Server upgrade instructions:</p> <p><pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.11.0\n# Now you are ready to start the server.\n./start.sh v3.11.0\n# Run upgrade\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.11.0.js\n</code></pre> Note that after running the upgrade script, your reporting caches may take some time to finish rebuilding.</p> <p>Android upgrade instructions: If your groups are using Sync Protocol 2 module, an APK reinstall is required. Release the APK and reinstall on all Android Devices. If your groups are not using Sync Protocol 2, you may upgrade Android tablets over the air using the usual release process.</p>"},{"location":"whats-new/#v3100","title":"v3.10.0","text":"<ul> <li>New Features in all Tangerine</li> <li>Editor User updates own profile and/or password #2166 [demo]</li> <li>Editor User with appropriate permission manages site level permissions of users and edits details and password of user #2155 [demo]</li> <li>Editor User views question configuration by category (as opposed to long list) #2097 [demo]</li> <li>Server Admin creates group on command line with local or remote content set #2174<ul> <li>Demo: Server Admin creates group on command line from local or remote content set</li> <li>Demo: Server Admin creates group on command line from content set in a private repository on Github</li> </ul> </li> <li>New Features in Tangerine with Case Module enabled</li> <li>Tangerine User views form response in alternative templates #2176 [demo]</li> <li>Data Manager manages Data Issues #1982 [demo]</li> <li>Data Manager rebases proposed changes in Issue #2179 [demo]</li> <li>Data Manager creates Data Issue #2144 [demo]</li> <li>Data Collector causes Issue to be created due to use of API in the form #2145 [demo]</li> <li>Data Collector causes Issue to be created due to <code>discrepancy-if</code> logic in form #2171 [demo]</li> <li>Synapse consumes structured outputs based on Case ER Diagram #2051</li> <li>New features in Tangerine with Sync Protocol 2 Enabled</li> <li>Improve two-way sync efficiency in PouchDB by using <code>doc_ids</code> filter as opposed to mango query #2040</li> <li>Developer notes</li> <li>Resolve problems with client compilation in Angular #2091</li> </ul> <p>Upgrade instructions: <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.10.0\n# Now you are ready to start the server.\n./start.sh v3.10.0\n# Run upgrade\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.10.0.js\n</code></pre></p>"},{"location":"whats-new/#v391","title":"v3.9.1","text":"<ul> <li>Fixes</li> <li>Database views are missing when running <code>tangerine-preview</code> or <code>npm start</code> #2096</li> <li>Event Schedule day view duplicates day event and show it in previous day as well #2103</li> <li>According to date carousel, events appear off by one week #2094</li> <li>Event Schedule templates are failing #2085</li> <li>Reports form is not added to forms.json #2088</li> <li>Events appear off by one day in Schedule List #2101</li> <li>CouchDB port should be configurable in config.sh #2092</li> <li>When opening the schedule view the first page is missing the header dates #2082</li> <li>Data Collector unable to open an Event from the Event Schedule #2102</li> <li>When editing a radio button options in editor, options should be in one column, not two #2090</li> </ul>"},{"location":"whats-new/#v390","title":"v3.9.0","text":"<ul> <li>Features</li> <li>Set and get properties for Case Event Forms #2023</li> <li>Data Manager reviews Cases PR</li> <li>Data Collector removes Event Form. PR</li> <li>Fixes</li> <li>Fix additional memory leaks in Case module causing tablets to slow down. PR</li> <li>Make <code>getValue()</code> function in Event Form List Item related templates less likely to crash. change</li> <li>Fixed incompatibilities with 2-way sync and P2P Sync. </li> <li>Fixed issue causing tablets to crash when syncing with a database with tens of thousands of records.</li> <li>Developer notes</li> <li>Editor and Clients upgraded to Angular 8.</li> <li>Changes</li> <li>Due to current limitations of two way sync, two changes have been made to the Device form in Tangerine Editor. First, changing a Device's assigned location and sync settings after the Device record has been claimed will no longer be allowed. Second, devices will now always be required to be assigned to the last level in your location hierarchy.</li> </ul> <p>Upgrade instructions:</p> <p>When you run the upgrade script, if you are using sync protocol 2 and have enabled, forms configured for 2 way sync will now be configured to use CouchDB sync to push documents up as opposed to \"custom sync\".  <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.9.0\n# If you did not upgrade your config.sh in v3.8.1, migrate it now.\n# Move custom variables from config.sh_backup to config.sh. Note that T_ADMIN and T_PASS are no longer needed. \nmv config.sh config.sh_backup\ncp config.defaults.sh config.sh\n# To edit both files in vim you would run...\nvim -O config.sh config.sh_backup\n# Now you are ready to start the server.\n./start.sh v3.9.0\n# Run upgrade\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.9.0.js\n</code></pre></p>"},{"location":"whats-new/#v381","title":"v3.8.1","text":"<ul> <li>Client app performance improvements</li> <li>Improved caching of files. We are caching important configuration files for faster page loads (app-config.json, forms.json, location-list.json) and the Roboto font and have reduced redundant rendering calls. 1991</li> <li>Loading spinner when opening an Event Form in a Case. #1992</li> <li>Fixed a memory leak when viewing a Case which was causing tablets to crash if spending too much time on a Case screen. #2000</li> <li>Radiobuttons now load faster on forms.</li> <li>Editor fixes</li> <li>Fixed an issue causing editor content region to be untouchable when window was narrow. #1940</li> <li>Improved CSV output so it now contains Release ID, Device ID, and Build Channel on every row #349</li> <li>Developer notes</li> <li>We focused on issues with slow performance on tablets when viewing forms. We are caching important configuration files (app-config.json, forms.json, location-list.json) and the Roboto font and have reduced redundant rendering calls. More information in the Globals doc.  </li> <li>Server Admin notes</li> <li>We cleaned up config variables in <code>config.sh</code>, deprecated <code>T_ADMIN</code> and <code>T_PASS</code> #1986</li> <li>New <code>generate-cases</code> command for load testing a large number of Cases based on your custom content in a group. #1993 </li> <li>New <code>reset-all-devices</code> command for reseting the server token and database keys for all devices. Note that after running this command you will need to reinstall on all devices and reregister with new QR codes. This command is useful if you are migrating a large amount of devices to a new group or a new server and you want to maintain Device ID consistency with the Device Serial numbers you are tracking.</li> </ul> <p>Upgrade instructions: <pre><code># Fetch the updates.\ncd tangerine\ngit fetch origin\ngit checkout v3.8.1\n# Now migrate custom variables from config.sh_backup to config.sh. Note that T_ADMIN and T_PASS are no longer needed. \nmv config.sh config.sh_backup\ncp config.defaults.sh config.sh\n# To edit both files in vim you would run...\nvim -O config.sh config.sh_backup\n# Now you are ready to start the server.\n./start.sh v3.8.1\n</code></pre></p>"},{"location":"whats-new/#v380","title":"v3.8.0","text":"<p>v3.8.0 is a big and exciting release! To accomodate the long list of changes, we split up this round of release notes into sections: General, Sync Protocol 2 Module, and Case Module, and Developer notes.</p>"},{"location":"whats-new/#general","title":"General","text":"<p>The following are features and fixes that are coming to all Tangerine installs. With this release comes an improved Editor UI experience, a faster device setup process, new form features, and much more.</p> Group tabs are now in 4 sections Breadcrumbs allows you to navigate back up deeply nested areas <ul> <li>Editor User browses Group UI by nested categories (as opposed to flat list) #1880</li> <li>Device Administrator is prompted to authorize permissions on first app load #1896</li> <li>Data Collector defines password according to policy #1867</li> <li>Data Collector views device info such as Device ID, Assigned Location, Server URL, Group Name, and Release Channel. #1834</li> <li>Data Collector in checkboxes chooses \"none of the above\", then other options are unselected #1822</li> <li>Editor distinguishes between inputs that are hidden and skipped #1800</li> <li>Minor tweaks to the menu (now there is a single \"Sync\" item) and added tab bars to some pages for consistency.</li> </ul>"},{"location":"whats-new/#sync-protocol-2-module","title":"Sync Protocol 2 Module","text":"<p>Sync Protocol 2 is a new module that can be enabled on a Tangerine installation that adds Device management, the ability for form responses to sync to the server and back down to tablets, the ablity for two tablets to sync form responses with each other offline, and much more.</p> Manage which devices have access to sync, when they last synced, when they last updated and which version Define which form responses are synced up and back down to tablets <ul> <li>Data Collector generates encrypted backup of Device #1909</li> <li>Data Collector conducts a two-way sync with server only getting data from server relevant to their location #1755</li> <li>Device sync by Location: Sync Protocol 2: Enables a \"Device Setup\" process on first boot of the client application. This requires you set up a \"Device\" record on the server. When setting up a Device record on the server, it will give you a QR code to use to scan from the tablet in order to receive it's device ID and token.</li> <li>Data Collector syncs to server with large dataset #1757</li> <li>Data collector synchronizes data between devices using an Offline P2P mechanism #279</li> <li>Editor User configures two-way sync for form responses from specific forms #1753</li> <li>Editor revokes access to syncing with server for a lost Device #1894</li> </ul>"},{"location":"whats-new/#case-module","title":"Case Module","text":"<ul> <li>Data Collector views Case Events in Schedule with Estimated Day, Scheduled Day, Window, and Occurred On Dates #1737</li> <li>Data Collector creates (another) instance of a repeatable form for a specific participant in a specific event(8hrs) #1786</li> <li>Data Collector views which Participant they are filling out a form for #1820</li> <li>Data Collector searches for a Case in a large dataset #1893</li> <li>Improvements to Case Home search - limit docs to 25 when no phrase is entered: #1871. Added rule to delay search in Case Home until at least two characters have been entered. Search results now sorted by date record updated.</li> <li>Lazy loading tabs in Case Home - this helps resolve some of the slowness in loading Case Home. Also disabled animations on tabs to remove jankiness.</li> </ul>"},{"location":"whats-new/#developer-updates","title":"Developer Updates","text":"<ul> <li>Re-enabled git config in Dockerfile - still having git networking error even when off corp network. </li> <li>Updated docker-tangerine-base-image to v3.4.0</li> <li>New load testing doc.</li> <li>Added random name generation to the script that generates new cases - useful for load testing and checking how well search listing works. If using the 'case-mother' switch, record templates are pulled from your group.</li> </ul>"},{"location":"whats-new/#upgrade-instructions","title":"Upgrade instructions","text":"<p>On the server, backup your data folder and then run the following commands.</p> <pre><code>git fetch origin\ngit checkout v3.8.0\n./start.sh v3.8.0\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.8.0.js\n</code></pre> <p>Replace all ocurrences of <code>localStorage.getItem('currentUser')</code> with <code>window.currentUser</code>.</p>"},{"location":"whats-new/#v372","title":"v3.7.2","text":"<ul> <li>More fixes for upgrade process from v3.1.0.</li> </ul>"},{"location":"whats-new/#v371","title":"v3.7.1","text":"<ul> <li>Fix translations update script.</li> <li>Fix client update process when upgrading from v3.1.0.</li> </ul> <p>Upgrade instructions: On the server, backup your data folder and then run the following commands. <pre><code>git fetch origin\ngit checkout v3.7.1\n./start.sh v3.7.1\ndocker exec tangerine translations-update\n</code></pre></p>"},{"location":"whats-new/#v370","title":"v3.7.0","text":"<ul> <li>Fixes</li> <li>When editing forms, they will only save back to the server after clicking the top level \"save\" button. There is also now messaging around when the save either completes successfully or fails.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1645</li> </ul> </li> <li>On <code>&lt;tangy-timed&gt;</code> when using auto stop, return the property instead of the instead of the truthfulness of the value which is always false.<ul> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/110</li> </ul> </li> <li>When uploadUnlockedFormReponses is set to true only incomplete forms are Synced up.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1725</li> </ul> </li> <li>In editor, modifying allowed pattern on text and number inputs does not work.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1770</li> </ul> </li> <li>Fix spacing between checkboxes in client<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1690</li> </ul> </li> <li>Fix click target and style for Case Event Form list<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1681</li> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1702</li> </ul> </li> <li>Fix Partial Date validation<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1683</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/71</li> </ul> </li> <li>EF Touch changes<ul> <li><code>&lt;tangy-eftouch multi-select go-next-on-selection=\"2\"&gt;</code> should become <code>&lt;tangy-eftouch multi-select=\"2\" go-next-on-selection&gt;</code>. This allows for expanding functionality of being able to use multi-select without go-next-on-selection but still limit the number of choices the user can make minus the transition.</li> <li><code>no-corrections</code> has been deprecated for new <code>disable-after-selection</code> attribute. When used with <code>multi-select</code>, the number of selections are still limited by the setting on <code>multi-select</code>, but changing selection is not allowed.</li> <li>The <code>required</code> attribute when used with <code>multi-select</code> will only require just one value selected. If you need form example 2 selections to be valid, you can combine <code>required-all multi-select=\"2\"</code>. </li> <li>We have an API change where we used to have <code>TangyEftouch.value.selection</code> was sometimes a string when not using <code>multi-select</code> and then when using <code>multi-select</code>, is was an array of strings. Now <code>TangyEftouch.value.selection</code> will always be an array of strings.</li> </ul> </li> <li>Features</li> <li>When editing forms, the user will be warned of any duplicate variable names that exist in the form.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1793</li> </ul> </li> <li>Improve messaging when an APK update fails to download<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1743</li> <li>PR: https://github.com/Tangerine-Community/Tangerine/commit/2ede9d3fb9d43dda234bfdcfc4849769b9b08e69</li> </ul> </li> <li>Data Collector sends SMS message from form<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1745</li> </ul> </li> <li>Data Collector views events in schedule with icons, estimated date info, and scheduled date info<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1686</li> </ul> </li> <li>Data Collector views Case Module screens in French<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1711</li> </ul> </li> <li>Data Collector confirms case when opened<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1695</li> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1741</li> </ul> </li> <li>Improved support for changing color scheme of client app using <code>custom-styles.css</code>, possible to have \"dark mode\".<ul> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1742</li> </ul> </li> <li>Data Collector shares all data on Device with other Users on the same Device.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1712</li> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1709</li> </ul> </li> <li>Data Collector finds Case Event status has changed to \"complete\" when all required forms are submitted.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1693</li> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1719</li> </ul> </li> <li>Data Collector finds all required Event Form instances in a Case Event are created upon opening the Case Event.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1691</li> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1718</li> </ul> </li> <li>Data Collector registers a Participant in a Case and views Event Forms grouped by Participant<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1692</li> <li>PR : https://github.com/Tangerine-Community/Tangerine/pull/1723</li> </ul> </li> </ul> <p>Upgrade instructions: On the server, backup your data folder and then run the following commands. <pre><code>git fetch origin\ngit checkout v3.7.0\n./start.sh v3.7.0\ndocker exec tangerine translations-update\n</code></pre></p>"},{"location":"whats-new/#v365","title":"v3.6.5","text":"<ul> <li>Fix timed grid output to exclude item level variables in logstash output https://github.com/Tangerine-Community/Tangerine/pull/1806</li> </ul> <p>Upgrade instructions: After the usual upgrade commands, also clear reporting caches with <code>docker exec -it tangerine reporting-cache-clear</code>.</p>"},{"location":"whats-new/#v364","title":"v3.6.4","text":"<ul> <li>Fix usage of <code>T_CSV_MARK_DISABLED_OR_HIDDEN_WITH</code> in some cases.</li> </ul>"},{"location":"whats-new/#v363","title":"v3.6.3","text":"<ul> <li>Allow disabled or hidden inputs output in CSV to be overridden using CSV_MARK_DISABLED_OR_HIDDEN_WITH in <code>config.sh</code>. The default value in <code>config.defaults.sh</code> is <code>\"999\"</code> which is what it has been for a few releases. When upgrading, do nothing if you want this to stay the same, otherwise use <code>\"ORIGINAL_VALUE\"</code> if you want to turn off the feature or set to your own custom value such as <code>\"SKIPPED\"</code>.</li> </ul>"},{"location":"whats-new/#v362","title":"v3.6.2","text":"<ul> <li>Fix import of location list from CSV https://github.com/Tangerine-Community/Tangerine/pull/1732/commits/05e57e8f1bb869dbd52b927d45fc223903e201db</li> </ul>"},{"location":"whats-new/#v361","title":"v3.6.1","text":"<ul> <li>Fix form routing for archived and active forms.</li> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1722</li> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1724</li> <li>Fix \"Mark entire line as incorrect in grids is not reflected in csv #1713\"</li> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1713</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/103</li> </ul>"},{"location":"whats-new/#v360","title":"v3.6.0","text":"<ul> <li>New Features</li> <li>Support for changing the order of forms.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1523</li> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1707</li> </ul> </li> <li>Support for archiving a form.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1526</li> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1675</li> </ul> </li> <li>Improvements and support on all inputs for <code>error-text</code>, <code>hint-text</code>, <code>question-number</code>, and  content translations.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1655</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/88, https://github.com/Tangerine-Community/tangy-form/pull/86</li> </ul> </li> <li>Add support to <code>&lt;tangy-qr&gt;</code> for scanning data matrix codes.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1653</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/87</li> </ul> </li> <li>New \"Capture Item at N Seconds\" feature for <code>&lt;tangy-timed&gt;</code> will prompt Data Collector to mark which item the child last read after a specific amount of time.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1586</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/95</li> </ul> </li> <li>New <code>goTo('itemID')</code> helper function to navigate users to a specific item given some item level <code>on-change</code> logic.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1652</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/92</li> </ul> </li> <li>New <code>&lt;tangy-signature&gt;</code> input for capturing signatures.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1656 </li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/90</li> </ul> </li> <li>Visibility of labels and/or icons on item navigation now configurable with <code>&lt;tangy-form-item hide-nav-icons&gt;</code> and <code>&lt;tangy-form-item hide-nav-labels&gt;</code>. <ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1682 </li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/73</li> </ul> </li> <li>Fixes</li> <li>Fix Class tablets that are filling up their disk too fast.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1706 </li> </ul> </li> <li>Fix metadata print screen options <ul> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1703</li> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1670, https://github.com/Tangerine-Community/Tangerine/issues/1671</li> </ul> </li> <li>Fix missing camera permission blocking APK installs form using QR or Photo Capture<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1646, https://github.com/Tangerine-Community/Tangerine/issues/1578</li> </ul> </li> <li>Fix performance issues caused by needless TangyForm.on-change events from firing when they don't need to.<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1656</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/89</li> </ul> </li> <li>Fix data collector reviews completed fullscreen form <ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1629</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/75</li> </ul> </li> <li><code>&lt;tangy-eftouch auto-progress&gt;</code> now distinguishes between going next on the time limit and going next on a number of selections. The API is now <code>&lt;tangy-eftouch go-next-on-selection=2&gt;</code> for going next on 2 selection and <code>&lt;tangy-eftouch go-next-on-time-limit&gt;</code> for going next on the time limit. <ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1597</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/84</li> </ul> </li> <li><code>&lt;tangy-eftouch&gt;</code> content is now more likely to fit above the fold, not overlap with content above it, be more consistent on smaller screens, and also adapt to screen size changes. <ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1591, https://github.com/Tangerine-Community/Tangerine/issues/1587</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/79</li> </ul> </li> <li><code>&lt;tangy-eftouch&gt;</code> suffered from going to next item twice due to time limit and selection being made at in a close window. This is now fixed. <ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1596</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/76</li> </ul> </li> <li>Fix Partial Date validation and for disabled attribute not reflecting <ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1683</li> <li>PR: https://github.com/Tangerine-Community/tangy-form/pull/71</li> </ul> </li> <li>Fix variable names in Editor to allow for only valid variable names. 2 or more characters, begin with alpha, no spaces, periods, allow _ no dash<ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1566, https://github.com/Tangerine-Community/Tangerine/issues/1558, https://github.com/Tangerine-Community/Tangerine/issues/1461</li> <li>PR: https://github.com/Tangerine-Community/tangy-form-editor/pull/77</li> </ul> </li> <li>Fix for Autostop for radio buttons - <ul> <li>Issue: https://github.com/Tangerine-Community/Tangerine/issues/1519</li> <li>PR's: </li> <li>https://github.com/Tangerine-Community/Tangerine/issues/1590</li> <li>https://github.com/Tangerine-Community/tangy-form/pull/100</li> <li>https://github.com/Tangerine-Community/tangy-form/pull/100</li> </ul> </li> <li>Experimental Features</li> <li>When using the experimental Case module, Editors can now program forms to trigger the creation of a \"Data Query\" when Data Collectors are entering data. Data queries are then shown later in a \"Data Queries\" tab where clarification on prior data entered is requested.<ul> <li>PR: https://github.com/Tangerine-Community/Tangerine/pull/1661</li> </ul> </li> </ul> <p>Upgrade instructions:</p> <p>On the server, backup your data folder and then run the following commands. <pre><code>git fetch origin\ngit checkout v3.6.0\n./start.sh v3.6.0\n</code></pre></p> <p>Now you may publish a release to your Devices and run the \"Check for Update\" on each Device. Note that if you are looking to use the QR Code scanner and you have been using Android Installation, you will need to reinstall the App on Devices and make sure to note the additional permissions installation instructions noted in the README.md file for enabling the App to have Camera Access. If using the Web Browser Installation, there is no need to reinstall the app for Camera access.</p>"},{"location":"whats-new/#v350","title":"v3.5.0","text":"<ul> <li>New Features</li> <li>Forms with fullscreen enabled now have a toggle button for the user to enable/disable fullscreen mode. Form designers may specify the number of taps in order for fullscreen to disable. https://github.com/Tangerine-Community/tangy-form/pull/51, https://github.com/Tangerine-Community/tangy-form/pull/72, https://github.com/Tangerine-Community/tangy-form-editor/pull/73</li> <li>An <code>inputs</code> object keyed by input name is now available for use in <code>valid-if</code> statements. https://github.com/Tangerine-Community/tangy-form/pull/65</li> <li>A new Partial Date item is available https://github.com/Tangerine-Community/tangy-form/pull/57</li> <li>Translations updates. #1613</li> <li>New <code>custom-styles.css</code> file which can be added by modifying a group's assets folder. You may define CSS classes and then utilize them in the editor by adding them under each widget's class attribute.</li> <li>New \"Copy form\" feature added to to Editor and more descriptive icon for adding a database record #1627</li> <li>Fixes</li> <li>Helper functions for timed grids are now safer, will not crash if a grid was skipped and info is not availble. https://github.com/Tangerine-Community/tangy-form/pull/61</li> <li>Print view for a form had a bug where only the first page was printable. This is now fixed so that all pages may be printed. https://github.com/Tangerine-Community/Tangerine/pull/1605</li> <li>Fix tangy-select test regression and work on EFTouch transition sound plays only on auto-progress #137</li> <li>API change in tangy-select - use of secondaryLabel is supported but deprecated; Use optionSelectLabel instead. #1602</li> <li>Fix the display of uploaded docs #1609</li> <li>Enable auto-stop for untimed grids #1522</li> <li>Increased clickable target for forms list and visits tab #1628</li> </ul> <p>Upgrade instructions:</p> <p>Backup your data folder and then run the following commands. <pre><code>git fetch origin\ngit checkout v3.5.0\n./start.sh v3.5.0\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.5.0.js \n</code></pre></p> <p>If any of your on-change logic looks into a form item's contents using <code>tangyFormItemEl.shadowRoot.querySelector(...)</code> or  <code>this.$.content.querySelector(...)</code>, you must change it. The contents of the form can now be accessed at <code>tangyFormItemEl.querySelector(...)</code>. </p> <p>Also, the <code>content</code> element is no longer available.</p> <p>For example:</p> <pre><code>// replace\nvar el = this.$.content.querySelector('tangy-input[name=\\'classId\\']')\n//with \nvar el = this.querySelector('tangy-input[name=\\'classId\\']')\n</code></pre> <p>The advantage of moving this content out of the shadow DOM is that you can now style it directly from your app.</p>"},{"location":"whats-new/#v340","title":"v3.4.0","text":"<ul> <li>New Features</li> <li>New groups now ordered by creation date: Creating new groups will now order them by the date the were created in the group list. #1584</li> <li>Configurable Web App Device Orientation: You can now specify the Web App orientation (portrait, landscape, or any) on device using the <code>T_ORIENTATION</code> variable in <code>config.sh</code>. Add <code>T_ORIENTATION=\"any\"</code> to config.sh to have more flexible orientations for PWA's. The options for T_ORIENTATION are at https://developer.mozilla.org/en-US/docs/Web/Manifest/orientation</li> <li>Media Library and Image support for Forms: Each group now has a media library tab where they can uplaod images which can then be utilized when inserting the new \"Image\" item on forms. #1138</li> <li>New ACASI widget: The ACASI widget is braodly based on the EFTouch widget, but focused on a more static presentation of images and sounds. #56</li> <li>Configurable font size in grids: You may now configure the font size in tangy-timed and tangy-untimed grids using the Option Font Size input. In tangy-form, it is exposed as option-font-size. Example of generated code: <code>&lt;tangy-timed required columns=\"3\" duration=80 name=\"class1_term2\" option-font-size=\"5\"&gt;</code></li> <li>Auto-stop for tangy-radio-buttons: Add support for autostop in tangy-radio-buttons #49. In Editor, set the Threshold to the number of incorrect answers: screenshots. Autostop is implemented by using the hideInputsUponThreshhold helper, which takes a tangy-form-item element and compares the number of correct radio button answers to the value in its incorrect-threshold attribute. Example of generated code: <code>&lt;tangy-form-item id=\"item1\" incorrect-threshold=\"2\"&gt;</code></li> <li>New \"correct\" attribute for radio button options: A new \"correct\" attribute has been added to tangy-list-item to store the correct value. There is a \"Correct\" checkbox next to each option. Example of generated code:     <code>&lt;tangy-radio-buttons name=\"fruit_selection2\" label=\"What is your favorite fruit?\"&gt;       &lt;option name=\"tangerine\"&gt;Tangerine&lt;/option&gt;       &lt;option name=\"cherry\" correct&gt;Cherry&lt;/option&gt;     &lt;/tangy-radio-buttons&gt;</code></li> <li>Fixes</li> <li>Critical Sync and \"data loss\" fix: Some variants of v3.3.x saw cases where data seemed to be lost on the tablet and sync no longer worked. After this release is deployed to the server, release for your groups and instruct all tablets to upgrade. The upgrade process may take many minutes depending on the amount of data stored on the tablet due to a schema update in the database. For an in depth look at what this update does, see the code here. </li> <li>Logstash Improvements #1516<ul> <li>User profiles were in a nested object, now they have been merged to be flat in the logstash output doc. See example here.</li> <li>If a form response uses a location element, it will now be extracted out into a top level <code>\"geoip\"</code> property whose value is an object with <code>\"lat\"</code> and <code>\"lon\"</code> properties. See example here.</li> <li>When new forms are created in the editor, they will no longer have a <code>.</code> character in their ID. This was causing some uneccessary and confusing logic in logstash config files. See PR here.</li> </ul> </li> <li>EFTouch: A large number of fixes have been made for EFTouch. See recent issues here. </li> <li>Updated to tangy-form-editor ^5.18.0 for Change grid variables in CSV starting with variable_0 to variable_1. </li> <li>A previous update to tangy-form to 3.15.1, tangy-form-editor to 5.17.0 to fixed Editing form level HTML requires two Save clicks</li> <li>Beta Features</li> <li>Two-way Sync: Allows for two-way sync of form responses. Can be configured to two way sync form responses for specific forms and also by geographic region defined in the user profile. See <code>docs/feature-two-way-sync.md</code>.   and Add a tangy input inside a tangy box duplicates items,    and enable Adjustable letter size for grids</li> <li>Case Module<ul> <li>Add the \"case\" module to <code>T_MODULES</code> in <code>config.sh</code> and the default landing page for a group will be the cases search page and new \"Case Management Editor\" tab will appear in groups for creating and editing Case Definitions. #1517</li> <li>Clientside search of Forms for Case Management Groups allows Cases to be found using the device camera to scan a QR code. See <code>docs/case-management-group.md</code>.</li> <li>Add event time and scheduling to Case Mangement Groups #1518</li> <li>New layout for Case and Case Event pages.</li> </ul> </li> </ul> <p>Upgrade instructions:</p> <p>Backup your data folder and then run the following commands. <pre><code>git fetch origin\ngit checkout v3.4.0\n</code></pre></p> <pre><code>./start.sh\n</code></pre>"},{"location":"whats-new/#v331","title":"v3.3.1","text":"<p>This release fixes a feature that made it into v3.3.0 but had a bug and was disabled. This release fixes that bug and makes it available.</p> <ul> <li>As an Editor user I want to be able to do an initial import of my location structure. #1117</li> </ul>"},{"location":"whats-new/#v330","title":"v3.3.0","text":"<ul> <li>Features</li> <li>Assessor reviews high level case variables, AKA \"Case Manifest\" #1399</li> <li>Assessor changes language setting to Russian #1402</li> <li>Untimed Grid subtest #1366</li> <li>Editor Style Upgrades (April 2019) #1421</li> <li>Group Names can now have spaces and special characters #1424</li> <li>Editor configures Timed Grid to show or hide labels on buttons #1432</li> <li>Server Admin tunes the reporting delay between when an upload occurs and it shows up in reporting outputs #1441</li> <li>CSV output for single checkboxes now show up as \"0\" and \"1\" as opposed to \"\" and \"on\" #1367</li> <li>CSV output for single radiobuttons now show up as \"0\" and \"1\" as opposed to \"null\" and \"on\" #1433</li> <li>You can now limit who can add/see sitewide users to only the USER1 account by setting <code>T_USER1_MANAGED_SERVER_USERS</code> to <code>\"true\"</code> in <code>config.sh</code> #1381.</li> <li>Client now has an \"About\" page with details about what Tangerine is #1465.</li> </ul> <p>Upgrade instructions:</p> <p>Backup your data folder and then run the following commands. <pre><code>git fetch origin\ngit checkout v3.3.0\n./start.sh\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.3.0.js \n</code></pre></p>"},{"location":"whats-new/#v320","title":"v3.2.0","text":"<ul> <li>Features</li> <li>Assessor changes language of App #1315</li> <li>Editor provides feedback given data entered earlier in the form #1384</li> <li>Assessor starts new Case is immediately forwarded to first form #1362</li> <li>Assessor finds Form and Event in Case has been disabled/enabled due to custom logic #1363</li> <li>Assessor confirms participant info using data from another form #1385</li> <li>Server Admin restarts machine to find containers have automatically come back up #1388</li> <li>Server Admin sets up Tangerine outage alarm #1389</li> <li>Developer Notes<ul> <li>Ability to define database views on a per module basis in Client Angular #1419</li> <li>Integrate test harness and TypeScript with server using NestJS #1413</li> <li>Fix client tests, organize shared services and guards into the shared module, move client/app/ to client/ #1398</li> </ul> </li> </ul> <p>Upgrade instructions: <pre><code>git fetch origin\ngit checkout v3.2.0\n./start.sh\ndocker exec tangerine /tangerine/upgrades/v3.2.0.js \n</code></pre> - In each group's <code>app-config.json</code>, change <code>\"direction\"</code> to <code>\"languageDirection\"</code>. - If using a translation other than English, change in each group's <code>app-config.json</code>, change <code>\"languageCode\"</code> to the corresponding language code. Current codes other than <code>en</code> for English is <code>JO_ar</code> for Jordanian and <code>KH_km</code> for Khmer.</p>"},{"location":"whats-new/#v310","title":"v3.1.0","text":"<ul> <li>Features</li> <li>Item Editor UX Improvements #810 </li> <li>Assessor verifies correct location selected by reviewing metadata of location #1191</li> <li>As an assessor I'd like to include a hint option to be displayed below the question text #1279</li> <li>Grids: helper functions for grids #1183</li> <li>Ability to mark an entire row as incorrect on grids #1333</li> <li>Assessor's backed up form responses are archived when storage is filling up #1304</li> <li>Assessor scans a QR Code into form #1309</li> <li>All hidden inputs have reporting values of <code>\"999\"</code> #1349</li> <li>Merge reporting output of radiobuttons into one column.</li> <li>Bug fixes</li> <li>Editor not properly logging users out resulting in getting stuck every 24 hours #1314 </li> <li>Min and Max for input number cannot be saved through the interface #1297</li> <li>time on grids cannot be changes and is always 60 seconds #1301</li> <li>Unclosed tags in html container can break form #1289</li> <li>Tangy timed option values disappear #1302</li> </ul> <p>Note that #1349 will bve optional in future releases and you may not want to upgrade until that time.</p> <p>Upgrade instructions: <pre><code>git fetch origin\ngit checkout v3.1.0\n./start.sh\ndocker exec tangerine reporting-cache-clear\n</code></pre></p>"},{"location":"whats-new/#v300-beta13","title":"v3.0.0-beta13","text":""},{"location":"whats-new/#upgrade-instructions-from-v3-betas","title":"Upgrade instructions from v3 betas","text":"<pre><code>git fetch origin\ngit checkout v3.0.0\n# Note the new T_UPLOAD_TOKEN variable which is a replacement for the old upload account variables.\nmv config.sh config.sh_backup\ncp config.defaults.sh config.sh\nvim config.sh\n./start.sh\ndocker exec tangerine push-all-groups-views\ndocker exec tangerine reporting-cache-clear\n</code></pre> <p>For existing groups, you need to edit their <code>app-config.json</code> files in the <code>./data/client/content/groups</code> folders. Replace them with the following template and make sure to update variables such as <code>groupName</code>, <code>uploadToken</code>, and <code>serverUrl</code>. <pre><code>{\n   \"listUsernamesOnLoginScreen\" : true,\n   \"modules\" : [ ],\n   \"groupName\" : \"pineapple\",\n   \"securityQuestionText\" : \"What is your year of birth?\",\n   \"hideProfile\" : false,\n   \"direction\" : \"ltr\",\n   \"columnsOnVisitsTab\" : [],\n   \"hashSecurityQuestionResponse\" : false,\n   \"uploadUnlockedFormReponses\" : false,\n   \"uploadToken\" : \"change this to match T_UPLOAD_TOKEN in config.sh\",\n   \"securityPolicy\" : [\n      \"password\"\n   ],\n   \"homeUrl\" : \"case-management\",\n   \"serverUrl\" : \"https://f571f419.ngrok.io/\",\n   \"centrallyManagedUserProfile\" : false,\n   \"registrationRequiresServerUser\" : false\n}\n</code></pre></p>"},{"location":"whats-new/#new-features-since-v300-beta12","title":"New features since v3.0.0-beta12","text":"<ul> <li>Server admin imports client archives into server #1166</li> <li>After exporting data from clients, we now have an easy command line tool to import them. Place those exported files in <code>./data/archives</code> folder and then run <code>docker exec tangerine import-archives</code>.</li> <li>Consumers of reporting API find user profile data appended to form responses #1147</li> <li>New <code>logstash</code> module for installations that want to use logstash to migrate data to an Elastic Search instance.</li> <li>Enable by adding <code>logstash</code> to the list of modules in <code>config.sh</code>, then clear reporting caches <code>docker exec -it tangerine bash; cd /tangerine/server/src/scripts; ./clear-all-reporting-cache.js;</code>.  You will find new <code>&lt;groupName&gt;-logstash</code> databases in CouchDB that you can configure logstash to consume.</li> <li>Upload Tokens instead of upload usernames and passwords. </li> <li>In your <code>config.sh</code> change <code>T_UPLOAD_TOKEN</code> to a secret phrase and then in existing groups add that to <code>app-config.json</code> as an <code>\"uploadToken\"</code> property and <code>uploadUrl</code> to <code>serverUrl</code> but without the username and password and <code>upload/&lt;groupName&gt;</code>. For example, <code>\"uploadUrl\": \"http://uploader:password@foo.tangerinecentral.org/upload/foo\"</code> would become <code>\"serverUrl\":\"http://foo.tangerinecentral.org\", \"groupName\":\"foo\", \"uploadToken\":\"secret_foo_passphrase\"</code>.</li> <li>If you not planning on updating clients right away, in <code>config.sh</code> set <code>T_LEGACY=\"true\"</code> to support the older upload API that those clients expect. When all clients are upgraded, set that variable back to false.</li> <li>Editor edits location list for group #982</li> <li>@TODO</li> <li>Editor creates, edits, and deletes form responses on the server #1047</li> <li>Editor exports CSV of a form for a month of their choosing #1143</li> <li>Editor sees user profile form related columns joined to CSV of all forms #1142</li> <li>On client, prevent users from editing their own profile.</li> <li>To impact new groups, change <code>T_HIDE_PROFILE</code> to <code>\"true\"</code> in <code>config.sh</code> .</li> <li>To modify existing groups, change <code>\"hideProfile\"</code> in group level <code>app-config.json</code> to <code>true</code>.</li> <li>Assessor registers on tablet, downloads form responses created on server #1129</li> <li>On device registration, after user creates account, will force user to enter 6 character code that references online account.</li> <li>To impact new groups, change <code>T_REGISTRATION_REQUIRES_SERVER_USER</code> to <code>\"true\"</code>.</li> <li>To modify existing groups, change <code>\"registrationRequiresServerUser\"</code> in group level <code>app-config.json</code> to <code>true</code>.</li> <li>Editor updates client user profile on server, Assessor sees updated profile after next sync #1134</li> <li>On client sync, will result in any changes made to a user profile on the server to be downloaded and reflected on the client.<ul> <li>To impact new groups, change <code>T_CENTRALLY_MANAGED_USER_PROFILE</code> to <code>\"true\"</code> in <code>config.sh</code>.</li> <li>To modify existing groups, change <code>\"centrallyManagedUserProfile\"</code> in group level <code>app-config.json</code> to <code>true</code>.</li> </ul> </li> <li>Editor views tangy-timed items_per_minute calculation in the CSV #1100</li> <li><code>&lt;tangy-location&gt;</code> can be filtered by entries in the profile by adding attribute <code>&lt;tangy-location filter-by-global&gt;</code>. In the editor when editing a <code>&lt;tangy-location&gt;</code> you will find a new option \"Filter by locations in the user profile?\" you can check.</li> <li>Advanced forms features (no GUI for these features)</li> <li><code>&lt;tangy-input-group&gt;</code> can be used to create repeatable groups of inputs. See the demo here. </li> <li>Geofence for v3 #941<ul> <li>If you location list has <code>latitude</code> and <code>longitude</code> properties for each location, you can validate your <code>&lt;tangy-location&gt;</code> selection given a geofence in <code>&lt;tangy-gps&gt;</code>. See the screenshots here and a code example of how to build this in your form here.</li> </ul> </li> <li>Upload incomplete form responses (important for Class module)</li> <li>To modify existing groups, set <code>\"uploadUnlockedFormReponses\"</code> to <code>true</code> in <code>app-config.json</code>.</li> <li>Server Admin clears reporting cache #1064</li> <li>Server Admin runs script to update views in databases #962</li> <li>Server Admin limits by site or by group the number of form responses uploaded end up in reporting outputs #1155</li> <li>This feature brings two new settings to <code>config.sh</code>.</li> <li>Set <code>T_PAID_MODE</code> to <code>\"site\"</code> to limit on a sitewide level, use <code>\"group\"</code> to limit on a per group level.</li> <li>Set <code>T_PAID_ALLOWANCE</code> from <code>\"umlimited\"</code> to a specific number like <code>\"1000\"</code> to limit form responses that end up in reporting outputs to one thousand. </li> <li>This mechanism works by marking uploaded form responses as \"paid\". When you first upgrade to this release, none of your form responses will be marked as paid and will not end up in reporting outputs until they are marked as paid against the allowance. If you want to mark all current uploaded form responses as paid and only mark against their allowance for future uploads, set the allowance to unlimited and after the reporting caches have been built, set the allowance desired and run <code>./start.sh</code> again. </li> <li>Optional Modules you can turn on and off in <code>config.sh</code> <code>T_MODULES</code> list.</li> <li>Note that if you are going to override the default <code>T_MODULES</code> list with an additional module such as <code>class</code>, don't forget to add modules such as <code>csv</code> if you still need them! </li> <li>Reporting outputs (inluding CSVs) include the information about the number of children a location has. #1174</li> </ul>"},{"location":"whats-new/#known-issues","title":"Known issues","text":"<ul> <li>Memory leak results in <code>Error: spawn ENOMEM</code> #886</li> <li>On the server command line run <code>crontab -e</code> and then add the following entry to restart the program every 24 hours <code>0 0 * * * docker stop tangerine; docker start tangerine</code>.</li> </ul>"},{"location":"whats-new/#200-pre-release","title":"2.0.0 (pre-release)","text":""},{"location":"whats-new/#user-stories","title":"User Stories","text":"<ul> <li>As a Tangerine Database admin, I want to control which users have the \"Manager\" role for creating new groups #218</li> <li>As a Tangerine Editor User, I expect to see timestamps on CSVs down to the second #223</li> <li>As a user, if I end up on a http:// URL I want to be redirected to the https:// version of that URL #98</li> </ul>"},{"location":"whats-new/#bugs","title":"Bugs","text":"<ul> <li>New groups default Client tabs are set up for workflow, should be vanilla tangerine #230</li> <li>When Tangerine is first installed, User1 does not have the required Manager role so groups cannot be created #229</li> <li>School Location Subtest does not render after upgrading from Tangerine 0.4.x to v2.0.0 #189</li> <li>If a group was upgraded from 0.x.x and does not have a media folder, APK generating fails #186</li> <li>Deleting group does not set security correctly on resulting \"deleted\" database #227</li> <li>Large CSVs fail to generate #221</li> <li>When a new Workflow is created it is missing retrictToRole, reporting, and authenticityParameters #228</li> <li>Ensure /var/log/couchdb exists so CouchDB does not crash #216</li> </ul>"},{"location":"whats-new/#technical","title":"Technical","text":"<ul> <li>Document how to use SSL with Tangerine #219</li> <li>Things to add to .gitignore #185</li> <li>Clean up build process so client does not need to compile twice #74</li> </ul>"},{"location":"whats-new/#upgrade-directions","title":"Upgrade directions","text":"<ul> <li>This is the first release with upgrade scripts so you will need to run all upgrade scripts between the version you started at and this one. </li> </ul> <p>For example, if you are at Tangerine 0.4.6, then you must run... <pre><code>docker exec -it tangerine-container /tangerine-server/upgrades/v1.0.0.sh\ndocker exec -it tangerine-container /tangerine-server/upgrades/v2.0.0.sh\n</code></pre></p> <p>If you are at Tangerine 1.7.8, then you must run... <pre><code>docker exec -it tangerine-container /tangerine-server/upgrades/v2.0.0.sh\n</code></pre></p>"},{"location":"whats-new/#v220","title":"v2.2.0","text":""},{"location":"whats-new/#user-stories_1","title":"User Stories","text":"<ul> <li>As a Site Owner I want to know how many results have been uploaded given arbitrary time period #457</li> </ul>"},{"location":"whats-new/#technical_1","title":"Technical","text":"<ul> <li>Refactor start.sh and config.defaults.sh to allow configurable ports and tag #456</li> </ul>"},{"location":"whats-new/#upgrade-direcections","title":"Upgrade direcections","text":"<pre><code>docker exec -it tangerine-container /tangerine-server/upgrades/v2.2.0.sh\n</code></pre>"},{"location":"artwork/icons/","title":"Icons for v3","text":"<p>Gimp source and examples of icons are in the icon-source directory adjacent to this file.</p>"},{"location":"data-collector/","title":"Data Collector Guide","text":"<ul> <li>Tangerine app Installation</li> <li>Registration and Login</li> <li>Data Collection</li> <li>Data Synchronization</li> <li>App update</li> </ul>"},{"location":"data-collector/#case-only","title":"Case only","text":"<ul> <li>Using P2P Sync for Offline Data Transfer</li> </ul>"},{"location":"data-collector/#data-collection-support","title":"Data collection support","text":"<ul> <li>Data Export/ Backups</li> </ul>"},{"location":"data-collector/backups/","title":"Backups","text":""},{"location":"data-collector/backups/#backups","title":"Backups","text":"<p>Data managers can take backups of the data on a device using the Export Data feature. Log in as the \"admin\" user on the device to export data for all users. The Export Data feature is in the dropdown menu in the top-right corner after log-in. </p> <p>The backup files will be saved in the <code>/storage/self/primary/Documents/Tangerine/backups/</code> directory on the device.</p>"},{"location":"data-collector/backups/#copy-device-backups-to-a-computer","title":"Copy device backups to a computer","text":"<p>You can copy the backups by sending them over email from the indicated location but also by using the adb Android utlities</p> <p>Transfering the backup requres the Android Debug Bridge installed on the computer. Make sure to add the command <code>adb</code> to your executable PATH environment variable. </p> <p>Use the following commands to save all of the database backup files:</p> <p>For MacOS:</p> <pre><code>adb pull /storage/self/primary/Documents/Tangerine/backups/tangerine-variables ~/Desktop/\nadb pull /storage/self/primary/Documents/Tangerine/backups/tangerine-lock-boxes ~/Desktop/\nadb pull /storage/self/primary/Documents/Tangerine/backups/users ~/Desktop/\nadb pull /storage/self/primary/Documents/Tangerine/backups/shared-user-database ~/Desktop/\n</code></pre> <p>For Windows:</p> <pre><code>adb pull /storage/self/primary/Documents/Tangerine/backups/tangerine-variables %USERPROFILE%\\Desktop\\\nadb pull /storage/self/primary/Documents/Tangerine/backups/tangerine-lock-boxes %USERPROFILE%\\Desktop\\\nadb pull /storage/self/primary/Documents/Tangerine/backups/users %USERPROFILE%\\Desktop\\\nadb pull /storage/self/primary/Documents/Tangerine/backups/shared-user-database %USERPROFILE%\\Desktop\\\n</code></pre>"},{"location":"data-collector/data-collector/","title":"Data collection on Device","text":"<p>To start collecting data you should open/play the form for the data collection. In the example below I will start the \"Simplified EGRA: Reading Assessment\" On the first section we always see only the Next button to proceed. Note that depending on how a section is configured you may or may not see the Back button.</p> <p>Tap the Play button on the left of the form name. This will begin the form, and you can answer each question one by one. All forms are organized sections, and each section contains some questions. </p> <p>Use the Back and Next buttons (if enabled)to go back and forth from one section to another:</p> <p></p> <p>Each page/section contains different question. Some question may be required and others optional. You have to complete all required questions. In a case where you didn't respond a required question, Tangerine will not let you proceed. Below I didn't respond to the gender question and upon clicking Next, Tangerine marked this question with a red exclamation point and forces me to fill it in. </p> <p></p> <p>Other questions are only visible when certain conditions are met. You can see how below upon tapping Yes for questions 3c, another question appears 3d. </p> <p></p> <p>The last page of the form always has a Submit button. It is important to press this Submit button when you reach the last page. By tapping Submit you will mark your form as complete.</p> <p></p> <p>After tapping Submit you will get a screen similar to the one below. This summary screen allows you to review the form you just entered. The review is in read only form. No data can be modified after submission. Tap the Open All Items to open each completed section in read only mode or scroll down and tap the Open button on any of the sections to review the responses. </p> <p>Note</p> <p>Tap the Tangerine icon to go back to the form listing page</p> <p>If you are currently entering data on one of the forms and you click any other link in the application (Below I tapped the Tangerine icon on the top left),  you will receive a confirmation message from Tangerine warning you that you are exiting a data entry form. If you tap OK here you will exit the current form. If you pressed a button by mistake tap Cancel to remain on the form. </p> <p></p>"},{"location":"data-collector/data-collector/#timeduntimed-grid-inputs","title":"Timed/untimed grid inputs","text":"<p>We use grid input mostly to perform reading tasks, or even, math operation under some specified time</p> <p>Warning</p> <p>Different to all other inputs, where the user/assessor selects the applicable / correct response which will then be marked in blue, in grids, the user has to select all INCORRECT items (they will turn blue).</p> <p></p>"},{"location":"data-collector/data-collector/#resuming-instrument","title":"Resuming Instrument","text":"<p>Should an administration be interrupted, or to be completed at a later stage, navigate to \"Visits\" on the top of the tablet screen. We use the Visits tab to show previously entered data for a school or go back to a form response to complete it. If the tablet restarts on its own, or you accidentally lose your place in a form, you can always go back to it. </p> <p>Warning</p> <p>The visits tab groups all forms by location. Without a location list loaded and a location input on your form, your forms will be available under the noLocation group.</p> <p>From the main home screen tab the Visits tab to go to previously entered form responses. </p> <p></p> <p>The screen is organized by school, or by the bottom most level in the location input. In some cases this can be student, or teacher. If you the form you want to resume doesn't contain a location selection, this form will be listed under the noLocation. Tap the desired location (or noLocation) to get a listing of all forms available for this location.</p> <p>On the screen below we see the form name, the complete column indicating if the form was submitted, and the date and time that the form was started.</p> <p></p> <p>You can return from the \"Visits\" page to the main screen by hitting the Tangerine icon on the top left corner</p>"},{"location":"data-collector/data-sync/","title":"Data Synchronization","text":"<p>Whenever possible during data collection, recommend that users /assessors to sync their data to the tablet by navigating to the profile menu, and select \"Sync\".</p> <p>After completing a form, this form is locked and stored on your device. To upload a form, you have to go to the Sync page. Access the Sync menu by locating the top right burger menu and selecting Sync. This will bring you to the Sync/Data upload page. </p> <p>Below you see a summary of sync process. We have 7 responses not synced and 0 synced. Underneath this summary you see the Sync data for all users button. Pressing this button will upload the data for all users registered on this device. </p> <p>Further down you can see a break down by user. In my example there is only one user on the tablet and therefore we only see the Username: lachko</p> <p></p> <p>Once the sync is complete, Tangerine will show \"100%\" for the field \"Percentage uploaded\".</p> <p></p>"},{"location":"data-collector/deployment/","title":"Deploying Tangerine for Offline (or Online) Data Collection","text":"<p>Reffer to Update the App to see how to update an app that is already installed</p> <p>After you have rendered your forms, it is time to deploy them. A deployment means that you will create a version of the forms to be installed(or updated) on a tablet. Tangerine offers different type of deployment releases available under your group's Deploy tab.</p> <p>Note</p> <p>We use a release to create a new installation and also to create an update for tablets that have the app installed already.</p> <p>Release Offline (require installation) APK (Android package file) creates a link with an APK file that can be downloaded and installed on an Android device in offline mode. Browser (PWA) creates a link to the app to be installed inside the Chrome browser on Window, Linux, or Mac but also on Android Chrome mobile app. The installation requires internet connection, but the application can be used offline once installed Release Online Survey - deploys a single form to be used by a user in a browser without installation but requires internet connection</p> <p></p> <p>Upon selecting \"Release Offline App\", you will see the screen below.</p> <p></p> <p>Tangerine offers two deployment types, test release and live release:</p> <ol> <li> <p>Test Release -- This release option (\"release to QA\") is     recommended for testing the instruments. When you make changes and     updates to the instruments and release your changes as \"Test     Release\", tablets that have the \"live\" version of Tangerine     installed will NOT receive this update. HOWEVER, any data synced     from the tablet devices even in a \"Test Release\" deployment goes     into the main database (thus mark your tests clearly as \"TESTS\" to     facilitate data cleaning.</p> </li> <li> <p>Live Release -- When instruments/forms are final, or instrument     edits have been tested, use this release option (\"release to     production\"). In this case, tablets that are already collecting     data, or have the group's apk installed, will receive an update     request when connecting to the Internet the next time. All data     collected from this release will also be added to the main database.</p> </li> </ol> <p>Tangerine also offers two deployment /installation strategies, Android installation or web browser installation:</p> <ul> <li> <p>Android Installation. This is the standard deployment package     where an actual apk file can be generated on the computer,     downloaded, and then copied over to a mobile device via a USB cable     and installed. This method of deployment is suitable in slow network     environment or when the apk is large.</p> </li> <li> <p>Web Browser Installation. This deployment strategy requires an     Internet connection on the tablet for the Tangerine to be installed.     Once installed, the app can work again offline. This method is     suitable in places of good connectivity.</p> </li> </ul> <p>Warning</p> <p>When using browser app installation, it is important to keep in mind that the app lives in the browser\u2019s data/cache. If you use incognito mode, the app and data will be removed every time you close the browser. Some people clear their cache for the browser which also results in complete removal of app and data.</p> <p>Users using the Browser app installation must always use the same browser in regular mode (not incognito) and never clear the cache. </p> <p>If you are using Browser installation, you should never install the app for more than one group at the same time. If switching groups, the user must sync and then clear the previous app in order to install a new one. If mixing between groups data contamination may occur where the data for one group is uploaded to another.</p> <p>Note</p> <p>We recommend thoroughly testing your instruments and its data output before releasing them! To test your instrument, use the Test Release mode.</p>"},{"location":"data-collector/deployment/#using-standard-installation","title":"Using standard installation","text":""},{"location":"data-collector/deployment/#android-installation","title":"Android Installation","text":"<p>Creating a deployment release is the last step before your app can be used on a tablet. Go to your group and click Deploy-&gt;Release Offline App and click the Generate Live Release under Android installation. On the next screen you can enter some additional information of your deployment. The Version tag is what the tablet user can use to make sure they have updated their tablet (this can be seen under the About page on the tablet)</p> <p>You can change the default release tag and add some description to it. If your group has the historical APK feature enabled, this information will be visible in the listing of historical releases. I will leave the default date and time as my version tag. Now click Release APK </p> <p>Wait.</p> <p></p> <p>The process of building the apk can take a couple of minutes. Please be patient and don't navigate away from the page. Once it has completed you will see a screen like the one below presenting a link for you to download. You can now download this APK file and install it on a tablet. </p> <p></p> <p>Using the same steps you can create a Test release. We recommend that you use Test releases only for testing purposes and always install live releases on data collection tablets. This is true even for your assessor's training. Once you install a Live release on the data collector's tablet you will be able to push updates to this tablet.</p> <p>Warning</p> <p>Every time an instrument/form is changed, added, or deleted from the group, it is necessary to create a release and alert each tablet user to use the \"Check for Update\" option in order to update their application.</p>"},{"location":"data-collector/deployment/#web-browser-installation","title":"Web Browser Installation","text":"<p>This deployment strategy creates a link/URL to a \"progressive web app\" (PWA) for direct installation from the web to the Android tablet or smartphone. Click on Web Browser Installation Test Release/Live Release. Wait.</p> <p>Creating a deployment release is the last step before your app can be used on a tablet. Go to your group and click Deploy-&gt;Release Offline App and click the Generate Live Release under Browser installation. On the next screen you can enter some additional information of your deployment. The Version tag is what the tablet user can use to make sure they have updated their tablet (this can be seen under the About page on the tablet)</p> <p>Note that you should only install 1 application in 1 browser otherwise unexpected conditions may be created. We use the Chrome's Persons option to create a profile for each group that we have in Tangerine. Doing this ensures that your group's data stays isolated, and your app always works. Learn how to create Chrome Persons here</p> <p>You can change the default release tag and add some description to it. If your group has the historical APK feature enabled, this information will be visible in the listing of historical releases. I will leave the default date and time as my version tag. Now click Release PWA</p> <p></p> <p>The process of building the PWA is very quick. Once it has completed you will see a screen like the one below presenting a link for you to copy. You can use this link and install the Browser Release on a tablet, or inside the Chrome or Edge browsers on any Operating System </p> <p>We will discuss how to install the browser release in Browser/PWA Installation topic</p> <p></p> <p>Using the same steps you can create a Test release. We recommend that you use Test releases only for testing purposes and always install live releases on data collection tablets. This is true even for your assessor's training. Once you install a Live release on the data collector's tablet you will be able to push updates to this tablet.</p> <p>Warning</p> <p>Please keep in mind that the Browser/PWA release requires an internet connection to be installed on a tablet or browser on a computer. The installation must be done correctly for the app to be accessible offline. Refer to our Browser/PWA Installation for more information. </p> <p>Every time an instrument/form is changed, added, or deleted from the group, it is necessary to release the apk/pwa again, but NO NEW INSTALLATION is necessary on the tablets. Instead, instruct Tangerine tablet users to connect their tablets, select their profile page (3 vertical white dots on top right of tablet screen).</p> <p>This update approach will not only apply any instrument/form edits, new forms, or form deletions, but also any updates to the Tangerine application made in the meantime and applied to your group (if any).</p>"},{"location":"data-collector/deployment/#create-an-online-survey-release","title":"Create an Online Survey Release","text":"<p>Creating a deployment release is the last step before your form can be filled in on a tablet or a computer. Go to your group and click Deploy-&gt;Release Online Survey. Here you will see a list of forms that have been publish and those that can be published. On the image below we see that one form is listed under Published Surveys and other forms are under Unpublished Surveys. </p> <p></p> <p>To publish a form click the check mark icon beside it on any of the forms under Unpublished Surveys. </p> <p>Clicking on this icon brings that form up to the Published Surveys section and you can see the form's name plus some other info and actions on the right hand side. Those are: an icon to unpublished the form, the date of publishing, and the link to this form</p> <p>Right after you publish a form you will also see a message at the bottom of the screen confirming your action. </p> <p></p> <p>To unpublish a form, click the icon beside it. This will take the form down to Unpublished forms and the link will no longer be available for this form to be filled in. </p> <p>Warning</p> <p>If you have made any changes on your form, you must unpublish it and re-publish it in order for those changes to be visible in the form's link. </p> <p>To share your form for data entry, copy the link from the Published Survey listing and send it to your data accessors Note that the online survey can be opened only on Chrome, Edge, Safari, and later versions of Firefox. </p>"},{"location":"data-collector/deployment/#creating-releases-video","title":"Creating Releases Video","text":""},{"location":"data-collector/deployment/#using-apk-installation","title":"Using APK Installation","text":"<ol> <li>Connect the tablet to WiFi (or connect direct to network using a SIM card)</li> </ol> <p>Note: here you can also copy the file from your computer to the tablet using a cable </p> <ol> <li>Download the APK file to your tablet and tap it to install. You can also copy the APK file to the tablet with a cable</li> </ol> <p>Note that here you may get a warning for enabling Unknown Sources. This setting allows you to install an app coming from outside the Play store. Please allow this in your settings. </p> <p>The instructions below are generic and they may differ for your version of Android.</p> <ol> <li>If you receive the blocked install message like in the image, below click Settings to enable Unknown Sources. Tap the Settings button</li> </ol> <p></p> <p>Make sure you select the Unknown sources</p> <p></p> <p>Click OK to Confirm</p> <p></p> <p>To continue with the installation  note all different permission Tangerine needs. We are making user of the GPS location, and contents on device \u2013 this one is for data export.</p> <p>SMS is used only if configured in your forms to send an sms</p> <p>Taking pictures is also used only when configured in your forms</p> <p>Click Next</p> <p></p> <p>Click Install</p> <p></p> <p>Wait for the installation to complete</p> <p></p> <p>Now you have the app installed. you can find it in the app drawer or your main screen. </p> <p>To open the app click Open</p> <p></p> <p>The app is now installed. You can proceed and Register a user. In general, we let the data assessor go through the registration process and create their username and password. Note that more than one users can share a tablet.</p> <p></p> <p>Fill in your information and click Submit </p> <p>The next step is to create your assessor profile. All of the data on the user profile(Assessor/ Enumerator profile) is attached to each form collected on this device</p> <p></p> <p>Enter the information presented on the user profile page and tap Submit</p> <p>You are now free to use the app</p>"},{"location":"data-collector/deployment/#using-browser-installation-on-tablets","title":"Using Browser Installation on Tablets","text":"<p>You can only install one Browser app (PWA) on a tablet. Mixing more than one Browser/PWA installations will result in unexpected conditions. Always uninstall the application before you install a new on in PWA mode. Follow this guide to uninstall the app and this one to clear the Tangerine data. Perform both before installation a new PWA on the same tablet. </p> <p>Turn on Wi-Fi. On the tablet open Chrome and navigate to Web install URL generated by Tangerine. Confirm the installation by clicking OK After confirming the install, you may get a different screen</p> <p>First option: offering to add the app to home screen or one not offering. Click the add to home screen link - I cannot highlight the importance of this step. If you do not do this step your app will not be installed in an offline mode</p> <p></p> <p>Second option: If you weren\u2019t offered the first option while on that same screen click the dot menu bar and select Add to home screen.</p> <p></p> <p>You may be asked to confirm the adding to home screen. Confirm it.</p> <p></p> <p>After a successful click the link \u201cClick here to proceed\u201d</p> <p></p> <p>If you get the an error screen, please open the Install URL again and try again</p> <p>Test that the app is offline: Turn off the device Wifi and network (or put it in airplane mode) and click the icon on the drawer/desktop. Never start the app from the URL used for installation. Use only the icon on the tablet.</p> <p>Confirm that the new version of the application is loading by starting a form while you are not connected to the internet</p>"},{"location":"data-collector/deployment/#using-device-setup-installation-2-way-sync-setup","title":"Using Device Setup Installation - 2 way sync setup","text":""},{"location":"data-collector/deployment/#installation","title":"Installation","text":"<p>Tangerine offers two deployment /installation strategies, Android installation or web browser installation:</p> <ul> <li> <p>Android Installation. This is the standard deployment package where     an actual apk file can be generated on the computer, downloaded, and     then copied over to a mobile device via a USB cable and installed.     This method of deployment is suitable in slow network environment or     when the apk is large.</p> </li> <li> <p>Web Browser Installation. This deployment strategy requires an     Internet connection on the tablet for the Tangerine to be installed.     Once installed, the app can work again offline. This method is     suitable in places of good connectivity. This method of installation     can also be used for installing app on your Chrome browser on a PC     or laptop</p> </li> </ul> <p>For both installation models you will need a Registration Code (QR Code) or a device ID and Token. If you don't have this information you will not be able to install the application on your device.</p> <p>We recommend that the initial device setup is done by a responsible person at the site. This can be someone who will handle queries regarding Tangerine or an IT staff. Each device registration requires that an admin user is create on that device. This admin user is the one that can authorize the registration of a user account. This is to make sure that your data can only be accessed by authorized personnel and no untheorized accounts exist on the tablet.</p>"},{"location":"data-collector/deployment/#installation-of-apk-on-a-tabletphone","title":"Installation of APK on a tablet/phone","text":"<p>Copy the apk file to the tablet and open it. Follow the installation prompts until you receive a message that the app has been installed. Locate the Tangerine app in the application drawer and click it.</p> <p>Warning</p> <p>You must be online on the tablet to do the initial installation.</p> <p>The first step is to select the language for the user interface</p> <p></p> <p>Select the language and click Submit</p> <p>Now enter the administration password for this tablet. You may wish to use the same admin password for all tables at your site. This same password will be required each time a user is registering to use the app on this device.</p> <p></p> <p>Select Yes if you have a device code or No if you are going to insert a device ID and Token for the registration.</p> <p></p> <p></p> <p>Insert the ID and Token or click the Scan icon to scan the registration QR code.</p> <p></p> <p>Click Submit when done. The next screen will show you some information for this device. If it is correct select Yes, if the scanned device code and ID correspond to a different device select No and start over with the correct device code.</p> <p></p> <p>On the next screen you will see some synchronization information. The app at this moment is contacting the server and obtaining users assigned to your device location. If you have already collected data on another tablet for this location, this data will also be pulled.</p> <p></p> <p>Click Next and then go to the Registration tap. Ask your administrator to enter the admin password and enter your user information below. Click submit when ready.</p> <p>If you are an administrator handing off the tablet to a user, enter your password and ask the user to enter their username and password. Here the Year of Birth can be used by the user to reset their password in case they forgot it.</p> <p></p> <p>On the next screen you will see a dropdown of all users for this location. Select the one that corresponds to you and click Submit.</p> <p></p> <p>You will now see a screen similar to the one below where you can start working</p> <p></p>"},{"location":"data-collector/deployment/#installation-in-your-chrome-browser","title":"Installation in your Chrome browser","text":"<p>Tangerine can be installed and used offline in the Chrome browser. To do this we follow similar installation instructions as above.</p> <p>Warning</p> <p>You must be online on to do the initial installation.**</p> <p>The first step is to follow the link for Browser installation that has been given to you or copied directly after it's generation in the backend. Copy the link and paste it in the Chrome's address bar. You will see a screen indicating that the app is being installed.</p> <p></p> <p>After a successful installation you will receive a confirmation screen like the one below. Do not click the link to proceed.</p> <p></p> <p>Click the + icon beside the address bar to install Tangerine in your browser. A popup will open to give you the option to install the app. Click Install</p> <p></p> <p>Depending on your browser setup, you may be asked to create a shortcut on your desktop or in your program folder or the browser may close automatically and offer you the link for Tangerine to open. If you see the link click it</p> <p>If you cannot find it type this into the address bar of your browser: [chrome://apps/]{.underline}</p> <p>Warning</p> <p>Always start Tangerine from the application icon and not from the URL address. Only one Tangerine instllation per browser profile is allowed.</p> <p></p> <p>Click the Tangerine app to start the application.</p> <p></p> <p>Select the language and click Submit</p> <p>Now enter the administration password for this tablet. You may wish to use the same admin password for all tables at your site. This same password will be required each time a user is registering to use the app on this device.</p> <p></p> <p>Select Yes if you have a device code or No if you are going to insert a device ID and Token for the registration.</p> <p></p> <p></p> <p>Insert the ID and Token or click the Scan icon to scan the registration QR code. If your PC or laptop doesn't have a camera that can be used to scan the barcode, you'd have to type in the ID and Token</p> <p></p> <p>Click Submit when done. The next screen will show you some information for this device. If it is correct select Yes, if the scanned device code and ID correspond to a different device select No and start over with the correct device code.</p> <p></p> <p>On the next screen you will see some synchronization information. The app at this moment is contacting the server and obtaining users assigned to your device location. If you have already collected data on another tablet for this location, this data will also be pulled.</p> <p></p> <p>Click Next and then go to the Registration tap. Ask your administrator to enter the admin password and enter your user information below. Click submit when ready.</p> <p>If you are an administrator handing off the tablet to a user, enter your password and ask the user to enter their username and password. Here the Year of Birth can be used by the user to reset their password in case they forgot it.</p> <p></p> <p>On the next screen you will see a dropdown of all users for this location. Select the one that corresponds to you and click Submit.</p> <p></p> <p>You will now see a screen similar to the one below where you can start working</p>"},{"location":"data-collector/deployment/#synchronization","title":"Synchronization","text":""},{"location":"data-collector/deployment/#user-setup","title":"User setup","text":"<p>Follow to below steps to prepare the Tangerine backend to allow installation of your app on the user device or Chrome browser. The menu items used during setup can be found under the Deploy link in the left side navigation menu.</p> <p></p> <p>Click the Device Users section to create a new tablet user profile. On this screen you will see a listing of all users already created. At the bottom left of the screen there is a'+' icon which allows you to add a new device user profile.</p> <ul> <li> <p>Click the + icon to create a user profile on the server</p> </li> <li> <p>Fill in all information required in the profile and click Submit</p> </li> <li> <p>You will see that next to the Submit button a blue check marks     appears indicating that the profile was saved</p> </li> </ul> <p></p> <ul> <li>Repeat the above steps for all users</li> </ul>"},{"location":"data-collector/deployment/#device-setup","title":"Device setup","text":"<p>Now we have to create the 'virtual' devices that will be associated with a real device or browser upon installation. The devices that you create represent a real user device. Each virtual device can be associated with a real tablet only once. After being claimed the device cannot be reused (unless reset and the app re-installed). Each device requires that we assign it to a particular location. This assigned location is automatically attached to each form collected from the tablet. We can also control the synchronization level. This level will indicate to Tangerine what records should be kept in sync across tablets. If you select to synchronize on a top level, all tablets will contain all records collected over all of the facilities in under this top level. It may be better to choose to synchronize only at the bottom level.</p> <p>The device listing go to Deploy-&gt;Devices</p> <ul> <li>Here, if you have some devices already created you will see a full     listing with some other information</li> </ul> <p></p> <ul> <li> <p>The device listing gives you:</p> <ul> <li> <p>The ID of the device</p> </li> <li> <p>The assigned location</p> </li> <li> <p>Whether this device has already been used in an installation or     not. A checkmark under Claimed indicates that it has been used.</p> </li> <li> <p>Registered on gives you the date this device was first     registered</p> </li> <li> <p>The last synchronization date for this device</p> </li> <li> <p>Updated on is the date this device was last updated</p> </li> <li> <p>Version is the version of the application this device is running</p> </li> <li> <p>Under options you will have access to a menu allowing you to     Edit, Reset, Delete, get The QR registration code for a device.</p> </li> </ul> </li> </ul> <p>Create a new device by going to Deploy-&gt;Devices</p> <ul> <li> <p>Click the + icon at the bottom of the page</p> </li> <li> <p>Note that you have the ID and Token listed here (can also be access     by clicking Edit for a particular device on the device listing     screen) In cases where the QR code cannot be sent to the site for     installation you can also use the ID and Token to install Tangerine.</p> </li> </ul> <p></p> <ul> <li> <p>Select the location this device is assigned to</p> </li> <li> <p>Select the synchronization level</p> </li> <li> <p>Select the actual site to be used for synchronization. Be careful     here not to assign the device to one location and select a different     one for synchronization.</p> </li> <li> <p>Click Submit</p> </li> <li> <p>The device now shows up on the of the list and you can get the QR     code for it by clicking the Options menu and selecting Registration     Code</p> </li> </ul> <p></p> <ul> <li>Repeat the above steps for all devices that you need to use on your     project.</li> </ul> <p>NOTE: you may wish to store the device ID and Token in a file for safe keeping. Such a sample file can be found here. Put the device ID and the Token in the corresponding columns and the QR code will be generated for you. Keep in mind that his worksheet functions correctly only on Google Drive. You can also print this file and distribute the installation codes on paper.</p>"},{"location":"data-collector/deployment/#device-modification","title":"Device modification","text":"<p>It may happen that you want to modify a device that is already in use. Although you will be able to do that in the interface, this modification is not pushed to the actual tablet. The way to go here is to apply the modification reset the device, and send the new Registration Code or ID and Token to the admin to reinstall the application. Make sure that before re-installing the app all data is synchronized.</p> <p>Note</p> <p>You can edit all devices that have not been claimed yet.</p> <p>To Edit a device, click the Edit button in the Options menu. Apply any modifications and click Submit</p> <p>To Delete a device , click the Delete button in the Options menu. Keep in mind that any device that you delete will disallow this device from synchronization or updates. Use this option if you have had one of your devices stolen or lost.</p> <p>To Reset a device, click the Reset button in the options menu. This action will disallow the device from receiving updates or synchronizing data. Use this option, if one of your staff members leaves and will no longer use this device. Make sure data is synchronized before you reset the device.</p>"},{"location":"data-collector/install-app/","title":"Tangerine app Installation","text":""},{"location":"data-collector/install-app/#tangerine-app-installation","title":"Tangerine app Installation","text":"<p>There are two ways you can install an app on a mobile device: - Using an APK file - Using a Browser app (PWA)</p> <p>Warning</p> <p>When using browser app installation, it is important to keep in mind that the app lives in the browser\u2019s data/cache. If you use incognito mode, the app and data will be removed every time you close the browser. Some people clear their cache for the browser which also results in complete removal of app and data.</p> <p>Users using the Browser app installation must always use the same browser in regular mode (not incognito) and never clear the cache.</p> <p>If you are using Browser installation, you should never install the app for more than one groups at the same time. If switching groups, the user must sync and then clear the previous app to install a new one. If mixing between groups data contamination may occur where the data for one group is uploaded to another.</p> Android APK installation <p>For detailed instructions read through the section Android Installation</p> Go to Guide Browser Installation on Tablets  <p>For detailed instructions read through the section Using Browser Installation  </p> Go to Guide <p>Case Module Installation</p> Android APK Device Setup <p>For detailed instructions read through the section Using Device Setup Installation </p> Go to Guide Browser Installation on Tablets  <p>For detailed instructions read through the section Using Browser Installation</p> Go to Guide"},{"location":"data-collector/registration/","title":"User registration","text":"<p>When you start the app for the very first time, you are required to create a login and fill in a user profile (assessor profile). Upon starting the app for the first time if you see any permissions requests, please allow them. You will now have Login and Registration screen</p> <p>To create a new user click the Register tab.</p> <p></p> <p>Now enter your user information and click Submit. The username you enter here will be attached to each form that you collect with this user. Use a descriptive username, for example First Initial + Last name or similar. </p> <p>The birth year below is only used in the case when you want to reset your password. Put in the correct birth year here. If you forget your password, you'll be asked to provide the same year to reset it. </p> <p></p> <p>The next page asks you to fill in the user profile (assessor/enumerator profile) and click Submit. All of this information is attached to each form completed on this app.  Note that the use profile is customizable, and you may be asked to fill in different type of information. A typical user profile asks you to fill in your name and phone number. </p> <p></p> <p>After clicking submit you will be redirected to the form listing. Below there is a sample list of forms available for me to fill in. </p> <p></p>"},{"location":"data-collector/registration/#login","title":"Login","text":"<p>Tangerine may log you out after you reboot the tablet or after performing an update. You can also log out manually by clicking the Logout button from the top right corner menu (the last option is Logout)  If you want to login in again select the username from the drop down and enter your password. Click Login.</p> <p></p>"},{"location":"data-collector/registration/#password-reset","title":"Password Reset","text":"<p>Open the app (or logout) and then click the Reset Password button, this will bring you to a screen which allows you to reset your password. What you need is the exact birth year, as entered during registration. </p> <ul> <li>Select your username from the dropdown</li> <li>Enter the exact birth year used during registration</li> <li>Enter the new password</li> <li>Repeat the new password</li> <li>Click the Submit button when the information has been entered</li> </ul> <p>If all went well, your password is updated, and you are once again on the Form Listing screen. </p> <p>If you get a Password Reset Unsuccessful message. It means that the birth year entered on the form doesn't match the one used during registration. Update the birth year and try again.</p> <p>Note</p> <p>If you are not able to reset your password and you cannot gain access to the application, you still have one option left. Create a new user with a different username</p>"},{"location":"data-collector/update-app/","title":"App Update","text":""},{"location":"data-collector/update-app/#app-update","title":"App Update","text":"<p>The app update in Tangerine can bring up new content or updates. to your forms but it can also update the version of the app you are currently using. </p> <p>To check which version of the app you are on go to the top right menu and select About. When you scroll down you will see the Device Information section. The most important information here is the Version Tag. In the example below the version tag is: 2022-06-16-14-21-15</p> <p>If the default tag is used it will be in a similar format, where you see the date and time of the release. Ask your supervisor for the correct version tag to make sure you are running the right forms. </p> <p>You can also see the build channel below. This indicates if you are running a Live or a Test release</p> <p></p> <p>To update the app you have to find the Check for Updates link in the top right menu. Make sure you are connected to the network and tap the Check for updates link.</p> <p></p> <p>After you tap the Check for updates link you will receive a pop up message. This message asks you to confirm that you want to perform the check for updates. Clicking OK will continue with the check and will update the app. Clicking Cancel will cancel the update.</p> <p>Tap OK to continue:</p> <p></p> <p>After the update has been downloaded you will come back to a similar screen. Tap Continue to apply any pending actions.</p> <p></p> <p>You will now be logged out of the app and have to log back in. Every time you do an update you'd have to log in to the app again. After the update go to the About page and verify that the Version tag has changed.</p> <p>You can see below that my version tag is now: 2022-06-24-14-10-00. If your version tag didn't change there was no update available to be installed. Updates can be pushed only by users with access to the backend. </p> <p></p>"},{"location":"data-collector/p2p/p2p-sync/","title":"Using P2P Sync for Offline Data Transfer","text":"<p>Use the P2P sync feature to transfer data between two or more tablets without an Internet connection.</p> <p>Note</p> <p>The tablets must be running Android 8 (Oreo) to use this function. </p> <p>In the following example, your tablet will be syncing data from your tablet to two other peers' tablets running Tangerine. The goal is to have the same data on all tablets. At the end of the process, data will be transferred from your tablet to the Internet.</p>"},{"location":"data-collector/p2p/p2p-sync/#accessing-the-p2p-feature","title":"Accessing the P2P feature:","text":"<p>Each peer should select Sync from the menu.</p> <p> </p> <p>Click the P2P Sync tab.</p> <p> </p>"},{"location":"data-collector/p2p/p2p-sync/#discovery","title":"Discovery","text":"<p>Gather in a circle with your peers. You and your peers should click the Discovery button. It does not matter who clicks first. </p> <p></p>"},{"location":"data-collector/p2p/p2p-sync/#endpoints","title":"Endpoints","text":"<p>After a short time - a minute of two, the screen will show the device name, a list of available endpoints, and information about the data transfers in the Log. </p> <p>In the screenshot, your device name is highlighted in green (89678). The list of available endpoints - your peers' tablet names - is highlighted in red. A log of diagnostic information is highlighted in blue.</p> <p>(Please note that the endpoint names are randomly generated. The names you see when using this feature will be different.)</p> <p></p>"},{"location":"data-collector/p2p/p2p-sync/#syncing-to-an-endpoint","title":"Syncing to an Endpoint","text":"<p>At this point in the process, your peers don't need to push any buttons; they only need to monitor the sync process for errors. Your tablet will be called the \"master\" tablet because it is controlling the sync operations. Once the \"master\" tablet has collected all of the data from the tablets, it can be connected to the Internet and upload all of this data to the server.</p> <p>Ask your peers which one has the tab at the top of the endpoints list marked \"35747 - Pending\". Upon identifying that peer, ask them to pay attention to the screen. Now you may click \"35747 - Pending\" to initiate the data transfer. Notice how the endpoint button you click turns a darker shade of grey to indicate that it has been pressed.</p> <p></p> <p>Your tablet will send its data to your peer's tablet and then your peer's tablet will send its data back to your tablet, as well as the data you just sent. It's a little redundant, but this is part of reaching \"eventual consistency\" for all of the tablets. </p> <p>Notice that more data is added to the Log as the connection is made between the tablets and data transfer is initiated:</p> <p></p> <p>When the data transfer is complete, the endpoint list updates to show that you are ready to sync the next device (\"Done! Sync next device.\").  </p> <p></p> <p>Ask your peer if they received any error messages; if not, it is safe to proceed to the next peer's tablet. Ask the peer who has the tablet marked \"29726\" to be ready. Click the endpoint marked \"29726: Pending\".</p> <p></p> <p>When the data transfer is complete, the endpoint list updates to show that you are ready to sync the next device (\"Done! Sync next device.\"). Ask your peer if they received any error messages. If none, great! Since you're at the end of the endpoints list, you are done with this first part.</p> <p></p>"},{"location":"data-collector/p2p/p2p-sync/#do-it-again","title":"Do it again!","text":"<p>When you synced data from your \"master\" tablet to the second tablet, it received data from the first tablet, which was transferred to the \"master\" when it was sync'd. But the first tablet still needs to receive data from the second tablet. So, you will need to repeat this whole process, starting from the first tablet (35747) and then to the second (29726). (You actually don't need to sync again the final device sync'd in the process (29726), but it is easier to explain this process as a simple round-robin.) </p> <p>It may be useful to confirm that any records created on other tablets has indeed been transferred. </p> <p>English: </p> <p>French:  </p> <p>As mentioned earlier, once the sync process is complete (and you've done it twice), you may conect the \"master\" to the Internet and transfer data to the server.</p>"},{"location":"data-collector/p2p/p2p-sync/#tips","title":"Tips","text":"<ul> <li>Each time you visit the P2P page, your device name will change. It is a randomly generated number.</li> <li>Errors are highlighted in pink. It is fine to ignore the error marked \"State set to CONNECTED but already in that state\".  </li> </ul>"},{"location":"developer/","title":"Developer Guide Contents","text":"<ul> <li>Bullet points for Tangerine Development</li> <li>i18n-translation.md</li> <li>modules.md</li> <li>tangerine-dev-tutorial-notes.md</li> <li>Reverse Proxy for Developers</li> </ul>"},{"location":"developer/#application-design","title":"Application design","text":"<ul> <li>Data Structures</li> <li>Bootstrapping Tangerine</li> <li>Viewing Forms and Form Data</li> <li>Supporting custom elements</li> <li>Tangerine Globals</li> <li>How Tangerine code is generated</li> </ul>"},{"location":"developer/#debugging","title":"Debugging","text":"<ul> <li>Creating Clean Development Content</li> <li>debugging-reporting.md</li> <li>debugging_node_apps.md</li> </ul>"},{"location":"developer/#managing-deployments","title":"Managing Deployments","text":"<ul> <li>Upgrades</li> <li>Installing Multiple Tangerine apps on the same tablet</li> <li>Deleting Records</li> </ul>"},{"location":"developer/#testing","title":"Testing","text":"<ul> <li>Load Testing</li> <li>Testing conflicts</li> </ul>"},{"location":"developer/#developing-cordova-plugins","title":"Developing Cordova Plugins","text":"<ul> <li>cordova-plugin-development.md</li> </ul>"},{"location":"developer/#tangerine-class-projects","title":"Tangerine Class Projects","text":"<ul> <li>class-docs.md</li> <li>class-deletions.md</li> </ul>"},{"location":"developer/#troubleshooting","title":"Troubleshooting","text":"<ul> <li>Docker Network Issues</li> </ul>"},{"location":"developer/#administration","title":"Administration","text":"<ul> <li>Deleting Records</li> </ul>"},{"location":"developer/bootstrapping-tangerine/","title":"Bootstrapping Tangerine","text":"<p>During a recent Angular 8 upgrade process, we had to change how Tangerine initializes. If Tangerine is running inside a Cordova app, it must wait until the 'deviceReady' event is emitted. Our earlier method of doing this in main.ts is no longer possible; therefore, we are intercepting the Service initialization process by using APP_INITIALIZER to pause the app while Cordova loads. Here is the relevant comit. For more information, view the Predefined tokens and multiple provider section in the Angular documentation.</p>"},{"location":"developer/class-deletions/","title":"Deletions in Tangerine","text":"<p>We're archiving records instead of deleting them in Tangerine by setting <code>archive:true</code> on the root of the doc and filtering queries by <code>&amp;&amp; !archive</code>.</p> <p>Please note that vanilla Tangerine uses the <code>archived</code> flag.'</p> <p>For most queries, you simply must simply append  <code>&amp;&amp; !archive</code> to the query in order to ensure your views filter for the archive flag.</p> <p>Sample view that filters by archive:</p> <pre><code>    responsesByClassIdCurriculumId: {\n      map: function (doc) {\n        if (doc.hasOwnProperty('collection') &amp;&amp; doc.collection === 'TangyFormResponse' &amp;&amp; !doc.archive) {\n          if (doc.hasOwnProperty('metadata') &amp;&amp; doc.metadata.studentRegistrationDoc.classId) {\n            // console.log(\"matching: \" + doc.metadata.studentRegistrationDoc.classId)\n             emit([doc.metadata.studentRegistrationDoc.classId, doc.form.id], true);\n          }\n        }\n      }.toString()\n    },\n</code></pre> <p>Sample function to archive some records:</p> <pre><code>  async archiveStudent(column) {\n    let studentId = column.id\n    console.log(\"Archiving student:\" + studentId)\n    let deleteConfirmed = confirm(_TRANSLATE(\"Delete this student?\"));\n    if (deleteConfirmed) {\n      try {\n        let responses = await this.classViewService.getResponsesByStudentId(studentId)\n        for (const response of responses as any[] ) {\n          response.doc.archive = true;\n          let lastModified = Date.now();\n          response.doc.lastModified = lastModified\n          const archiveResult = await this.classViewService.saveResponse(response.doc)\n          console.log(\"archiveResult: \" + archiveResult)\n        }\n        let result = await this.dashboardService.archiveStudentRegistration(studentId)\n        console.log(\"result: \" + result)\n      } catch (e) {\n        console.log(\"Error deleting student: \" + e)\n        return false;\n      }\n    }\n  }\n</code></pre>"},{"location":"developer/class-docs/","title":"Getting Started","text":""},{"location":"developer/class-docs/#how-to-get-data-out-of-a-tangyformresponse","title":"How to get data out of a TangyFormResponse","text":"<pre><code>const studentRegistrationDoc = await dashboardService.getResponse(this.studentId);\nconst srInputs = this.getInputValues(studentRegistrationDoc);\n\n  getInputValues(doc) {\n    let inputs = doc.items.reduce((acc, item) =&gt; [...acc, ...item.inputs], [])\n    let obj = {}\n    for (const el of inputs) {\n      var attrs = inputs.attributes;\n      for(let i = inputs.length - 1; i &gt;= 0; i--) {\n        obj[inputs[i].name] = inputs[i].value;\n      }\n    }\n    console.log(\"obj: \" + JSON.stringify(obj))\n    return obj;\n  }\n</code></pre>"},{"location":"developer/cordova-plugin-development/","title":"Cordova plugin development","text":""},{"location":"developer/cordova-plugin-development/#getting-started","title":"Getting started","text":"<p>It is a lot easier to build a cordova plugin for Tangerine using a generic Cordova project instead of developing directly in Tangerine, because in Tangerine access to the actual client Cordova code is hidden away in /tangerine/client/builds/apk. So first use the cordova cli to generate a new project.</p>"},{"location":"developer/cordova-plugin-development/#refreshing-your-new-plugin-in-your-cordova-project","title":"Refreshing your new plugin in your Cordova project","text":"<p>After making modifications to the plugin, rm and add the plugin and the cordova android platform before building.</p> <pre><code>cordova plugin rm cordova-plugin-nearby-connections\ncordova platform rm android\ncordova platform add android@8\ncordova plugin add ../../Tangerine-Community/cordova-plugin-nearby-connections\ncordova build android\n</code></pre>"},{"location":"developer/cordova-plugin-development/#updating-the-cordova-plugin-inside-tangerine","title":"Updating the cordova plugin inside Tangerine","text":"<p>After your done the bulk of your Cordova development, you will need to modify the docker-tangerine-base-image to include the new plugin. After updating the base image, don't forget to update the Dockerfile. </p> <p>Sometimes you may need to view an update to the plugin but you don't want to go to the trouble of updating the base image. It is possible to work on the plugin code and then refresh the code in Tangerine. First you will need to share the source code with your docker instance Add the following to develop.sh:</p> <pre><code>  --volume $(pwd)/../cordova-plugin-nearby-connections:/tangerine/client/cordova-plugin-nearby-connections \\\n</code></pre> <p>Once your container has started, docker exec into it, and run the following:</p> <p><pre><code>cd /tangerine/client/builds/apk\ncordova plugin rm cordova-plugin-nearby-connections\ncordova plugin add ../../cordova-plugin-nearby-connections --save\n</code></pre> Sometimes cordova can have issues with cleaning the build; here's a way to make sure you have the updated code: <pre><code>cd /tangerine/client/builds/apk\ncordova plugin rm cordova-plugin-nearby-connections\ncordova platform rm android\ncordova platform add android@8\ncordova plugin add ../../cordova-plugin-nearby-connections --save\ncordova build android\n</code></pre></p>"},{"location":"developer/cordova-plugin-development/#updating-angular-client-code-used-in-the-apk","title":"Updating Angular client code used in the APK","text":"<p>IF you're developing Cordova plugins for Tangerine and make changes to the Angular client code that is displayed in the apk, you will need to refresh the apk build. Run the following code:</p> <pre><code>cd /tangerine/client &amp;&amp; \\\nrm -rf builds/apk/www/shell &amp;&amp; \\\nrm -rf builds/pwa/release-uuid/app &amp;&amp; \\\ncp -r dev builds/apk/www/shell &amp;&amp; \\\ncp -r pwa-tools/updater-app/build/default builds/pwa &amp;&amp; \\\ncp -r dev builds/pwa/release-uuid/app\n</code></pre> <p>Then generate the apk.</p> <p>To check if it worked, you can search for the new code in these files:</p> <pre><code>vi builds/apk/www/shell/main.js\nvi builds/pwa/release-uuid/app/main.js\n</code></pre> <p>T0 uninstall and re-install the apk:</p> <pre><code>adb uninstall org.rti.tangerine\nadb install qa/apks/group-long-uuisd/platforms/android/app/build/outputs/apk/debug/app-debug.apk\n</code></pre>"},{"location":"developer/creating-clean-dev-content/","title":"Creating Clean Development Content","text":"<p>If you are trying to fix an issue, it is helpful to begin development using content that is known to support common Tangerine features. This can be more reliable than using a project's content because that content may have missing forms that create bugs that have nothing to do with the issue you are trying to resolve. </p>"},{"location":"developer/creating-clean-dev-content/#client","title":"Client","text":"<pre><code>cd client\nnpm install\nrm -rf client/src/assets\ncp -r ../content-sets/&lt;your pick&gt;/client src/assets\ncp src/assets/app-config.defaults.json src/assets/app-config.json\ncp ../translations/translation* src/assets/\nnpm start\n</code></pre>"},{"location":"developer/creating-clean-dev-content/#server","title":"Server","text":"<p>The <code>create-group</code> command to the rescue!</p> <p>The following command downloads a content set known to support common Tangerine features and is used for load-testing. Notice that it is a github repo; therefore, you may clone it and modify at will. </p> <p><code>docker exec tangerine create-group \"New Group C\" https://github.com/rjsteinert/tangerine-content-set-test.git</code></p> <p>There is also support for creating a group using local content from the <code>content-sets</code> directory' in the Tangerine repository. Currently, there is support for creating a case-module:</p> <p><code>docker exec tangerine create-group \"New Group D\" case-module</code></p> <p>You may also configure how inputs are populated by custom functions; see the Case generation section in the Load testing doc.</p> <p>If you add <code>--help</code> to the <code>create-group</code> command you may see other options as well.</p> <p><code>docker exec tangerine create-group --help</code></p> <p>To see more examples, check out the demo video from the v3.10.0 release.</p>"},{"location":"developer/data-structures/","title":"Tangerine Data Structures - Document Collections and Types","text":"<p>If the goal is to have data output to CSV via the changes log, the collection property of the document should be \"TangyFormResponse\". This is the only collection that is currently supported by data processing on the server-side.</p>"},{"location":"developer/data-structures/#tangyformresponse","title":"TangyFormResponse","text":"<p>A TangyFormResponse is a JSON object that contains all the data that a user has entered into a Tangy Form. It is the data that is stored in the database when a user submits a Tangy Form. It is also the data that is returned when you call the dashboardService.getResponse() method.</p> <p>Tangerine modules - such as CSV and mysql - can be adapted to support different data structures in a TangyFormResponse.  The default case is to output a CSV file with a header row and a row for each TangyFormResponse.  The header row contains the names of the inputs in the TangyFormResponse. The data rows contain the values of the inputs in the TangyFormResponse.</p> <p>A register - such as an Attendance register used in Teach - is a snapshot of a list of things being tracked, such as students attending a class. (Contrast this to a typical TangyFormResponse that is a snapshot of form inputs.) A register is for collecting data about multiple people or objects, whereas a formResponse is collecting data for a single unit or participant.  An example of a register is a form of type 'attendance' or 'scores' which is used to collect data in the Attendance feature of the Teach module. There is a property called attendanceList that has an array of students.  When processing the changes feed, the csv module detects the 'attendance' type and creates a new row for each student in the attendanceList. </p> <p>In the case module context, a case definition manages participants and the forms submitted with data about each participant. A class project does not have a file similar to a case definition; it is more rigid and stores much of those relationships in the app logic. </p> <p>One could say a case is similar to a Class in Teach in that Teach saves metadata about a school, classes and students, but it is a rigid structure. A case is more flexible and can be used to track any type of data.</p>"},{"location":"developer/debugging-reporting/","title":"Debugging reporting","text":""},{"location":"developer/debugging-reporting/#debugging-the-reporting-cache-process","title":"Debugging the Reporting Cache process","text":"<p>Summary of steps:</p> <ol> <li>Turn on reporting modules in <code>config.sh</code>.</li> <li>Run develop.sh.</li> <li>Create a group.</li> <li>Generate data.</li> <li>Stop the keep alive for reporting worker by commenting out <code>this.keepAliveReportingWorker()</code> in <code>server/src/app.service.ts</code>.</li> <li>Enter the container on command line with <code>docker exec -it tangerine bash</code>.</li> <li>Clear reporting cache with command <code>reporting-cache-clear</code>.</li> <li>Run a batch with debugger enabled by running command <code>node --inspect-brk=0.0.0.0:9228 $(which reporting-worker-batch)</code>.</li> <li>Latch onto debugging session using Chrome Inspect. You may need to click \"configure\" and add <code>localhost:9228</code> to \"Target discovery settings\".</li> </ol>"},{"location":"developer/debugging-reporting/#instructions","title":"Instructions","text":"<p>Configure your project to use the CSV and Logstash modules: <pre><code>T_MODULES=\"['csv', 'logstash']\"\n</code></pre></p> <p>Start the development environment... <pre><code>./develop.sh\n</code></pre></p> <p>Create a group called <code>foo</code> in the GUI. Then open <code>./server/src/app.service.ts</code> and comment out the call to <code>this.keepAliveReportingWorker()</code>. It's important to do these two things in this order otherwise the group could be disconnected from reporting.</p> <p>\"exec\" into the container and note how <code>foo</code> has been added to the <code>/reporting-worker-state.json</code> file.</p> <pre><code>docker exec -it tangerine bash\ncat /reporting-worker-state.json\n</code></pre> <p>Seed the <code>foo</code> group with 100 form responses. <pre><code>docker exec tangerine generate-uploads 100 foo\n</code></pre></p> <p>Clear the cache</p> <p>```shell script docker exec tangerine reporting-cache-clear <pre><code>If you get the error message 'Waiting for current reporting worker to stop...', you must exec into the container and remove the semaphore:\n\n```shell script\nrm /reporting-worker-running\n</code></pre></p> <p>and then run reporting-cache-clear again.</p> <p>Start the reporting-worker-batch.js batch process manually and check for errors</p> <p>```shell script node --inspect-brk=0.0.0.0:9228 $(which reporting-worker-batch) <pre><code>In Chrome, go to `chrome://inspect`, click `Configure...`, and add `127.0.0.1:9228` as an entry in \"Target discovery settings\".\n\n## Debugging Demo \n\nhttps://www.youtube.com/watch?v=AToUBoApw8E&amp;feature=youtu.be\n\nNow manually trigger a batch. After the command finishes, verify the batch by checking `http://localhost:5984/_utils/#database/foo-reporting/_all_docs`.\n</code></pre> node --inspect-brk=0.0.0.0:9228 $(which reporting-worker-batch) <pre><code>There will be only 15 docs in your reporting db because that is the batch size.\n\nAlthough Tangerine in develop.sh mode runs node in a debugger process, you must launch a separate node process to debug the batch reporting worker.\n\nIf no errors occurred, copy the temporary state to the current state.\n</code></pre> cp /reporting-worker-state.json_tmp /reporting-worker-state.json <pre><code>Keep repeating to continue processing...\n</code></pre> cat /reporting-worker-state.json | /tangerine/serversrc/scripts/reporting-worker-batch.js | tee /reporting-worker-state.json_tmp cp /reporting-worker-state.json_tmp /reporting-worker-state.json <pre><code>If you would like to debug, add the `--inspect-brk=0.0.0.0:9227` option to the `run-worker.js` command.\n</code></pre> cat /reporting-worker-state.json | node --inspect-brk=0.0.0.0:9227 /tangerine/server/src/scripts/reporting-worker-batch.js | tee /reporting-worker-state.json_tmp <pre><code>When you run that command, it will wait on the first line of the script for a debugger to connect to it. In Chrome, go to `chrome://inspect`, click `Configure...`, and add `127.0.0.1:9227` as an entry in \"Target discovery settings\". Now back to the `chrome://inspect` page and you will find under the `Remote Target #127.0.0.1` group, a new target has been discovered called `/tangerine/server/reporting/run-worker.js`. Click `inspect` and now you should be able to set breakpoints and walk through the code. You may not be able to set breakpoints in all files so use \"step into\" and the `debugger` keyword to get the debugger to the focus you want.\n\n\nIf you want to keep the cache worker running, use watch.\n</code></pre> watch -n 1 \"cat /reporting-worker-state.json | node /tangerine/server/reporting/run-worker.js | tee /.reporting-worker-state.json | json_pp &amp;&amp; cp /.reporting-worker-state.json /reporting-worker-state.json\" <pre><code>If you need to clear a reporting cache, don't simply delete the reporting db. Use\n</code></pre> reporting-cache-clear</p> <p><pre><code>You typically need to remove the semaphore before running reporting-cache-clear, especially if there was a crash\n</code></pre> rm /reporting-worker-running</p> <p><pre><code>## A typical report debugging workflow:\n\nRemember to setup config.sh properly! (Make sure  T_MODULES=\"['csv','logstash']\")\nComment out keepAliveReportingWorker in /server/src/app.service.ts.\nRemember to add `127.0.0.1:9228` as an entry in \"Target discovery settings\" in chrome://inspect/#devices\n\nYou may need to add `debugger` before the line of code you wish to debug. \n\ndocker exec into your container\n</code></pre> docker exec -it tangerine bash <pre><code>Then you'll typically need to rm the reporting-worker-running - it keeps reporting-cache-clear from running if a previous debug session crashed.\n</code></pre> rm /reporting-worker-running reporting-cache-clear node --inspect-brk=0.0.0.0:9228 $(which reporting-worker-batch) <pre><code>Switch back to Chrome, open `chrome://inspect`. The debugger will be the session that looks like this:\n</code></pre> Target /usr/local/bin/reporting-worker-batch file:///tangerine/server/src/scripts/reporting-worker-batch.js Inspect ```</p> <p>When it launches, it will wait on the first line of the script for a debugger to connect to it. Click F8 to run.  If all is right and good in this world, it will stop at your debugger statement. When the batch has completed, your debugger window will close.</p>"},{"location":"developer/debugging_node_apps/","title":"Debugging node apps","text":"<p>In develop.sh, the port 9229 should be opend.</p> <pre><code>docker run \\\n  -d \\\n  --name tangerine-container \\\n  -p 80:80 -p 5984:5984 -p 9229:9229 \\\n  --env \"DEBUG=1\" \\\n  --env \"NODE_ENV=development\" \\\n  etc...\n</code></pre> <p>Add the folloiwng to your node process:</p> <pre><code>--inspect=[::]:9229 index.js\n</code></pre> <p>for example, reporting/shart.sh:</p> <p>nodemon --inspect=[::]:9229 index.js</p> <p>using the leh* db for testing workflow csv generation</p> <p>http://localhost/app/group-leh_wi_lan_pilot_2018/index.html#assessments</p>"},{"location":"developer/deletion-strategy/","title":"Deletion Strategy","text":""},{"location":"developer/deletion-strategy/#introduction","title":"Introduction:","text":"<p>To delete a case in Editor, click the \"Trashcan\" button to the right of the case ID in the \"breadcrumbs\" area at the top of the case document. This adds <code>archived:true</code> to the case document as well as all eventForm responses for the case. </p> <p>The client search index code filters out docs with the <code>archived:true</code> flag. </p> <p>Once you start using this deletion feature, create an update using the following code:</p> <pre><code>await window['T'].search.createIndex()\nawait userDb.query('search', { limit: 1 })\n</code></pre> <p>This code will rebuild the index on client in order to return the correct results when running a search on a tablet that already has data collected on it.</p>"},{"location":"developer/deletion-strategy/#difference-between-delete-and-archive-feature-in-editor","title":"Difference between Delete and Archive feature in Editor","text":"<p>In Editor, the \"Delete\" and \"Archive\" buttons both add the <code>archived:true</code> flag to a document, but they do differ in the following ways: - Deleting a case creates \"stub\" documents with minimal properties. The case doc keeps its inputs so search works properly. - A case that has been archived can be un-archived. The only difference between an archived doc and a non-archived doc    is the presence of the <code>archived:true</code> flag.</p>"},{"location":"developer/deletion-strategy/#deleting-a-record-in-tangerine-manually-on-the-server","title":"Deleting a record in Tangerine manually on the server","text":"<p>When using this manual method, deletions on the client do not follow deletions on the server.</p> <p>Open the document in Fauxton. Click the \"Delete\" button on the right hand side of the header to delete. This will create a bare-bones document that includes the _deleted\" flag. By default, deleted docs are not included in replication; however, there is a way to query them (see below).</p>"},{"location":"developer/deletion-strategy/#testing-deletions","title":"Testing deletions","text":"<p>When you open a new case on client, don't enter any data, but click next. The app does create a case and it can be sync'd. Although the case does not display in the case home search results on client, this record does get output on the server via CSV export. </p> <p>When you use the Delete button in Fauxton, it removes all data except for this tombstone:</p> <pre><code>{\n  \"_id\": \"6c27f5c8-6e08-4245-ae57-cef7d63099de\",\n  \"_rev\": \"2-28819102bb2ec0e3390f28d94467212a\",\n  \"_deleted\": true\n}\n</code></pre> <p>When the client syncs, it does not get this new rev.</p>"},{"location":"developer/deletion-strategy/#viewing-deletions","title":"Viewing deletions:","text":"<pre><code>curl -X POST -H \"content-Type: application/json\" \"http://admin:password@localhost:5984/group-2627a0a7-852a-4f51-9d5d-b7ae53130976/_changes?filter=_selector\" -d '{\"selector\": {\"_deleted\": true}}'\n</code></pre> <p>response:</p> <pre><code>{\n  \"results\": [\n    {\n      \"seq\": \"16-g1AAAAIBeJyVz0sOgjAQBuABjI-FZ9AjUJpaXMlNtC8CBNuFutab6E30JnqTWh4J0UQDm5nkz8yXmRIAplkgYa6NNlIl2mTmcCxd7DPgC2ttkQVsvHfBhIRrgST5Hv6xzpeu8k0reLWgMBacx32FpBK2reDXAltRRGLcV9hVwvlDEDiKKev7hR65ChfXHHLtFIIICzkdpNwa5d4pVDIs0mG3PBrlWSlQK5HCKUJIwuykpUpzreRf4dUItmBe8QYjK50u\",\n      \"id\": \"6c27f5c8-6e08-4245-ae57-cef7d63099de\",\n      \"changes\": [\n        {\n          \"rev\": \"2-28819102bb2ec0e3390f28d94467212a\"\n        }\n      ],\n      \"deleted\": true\n    }\n  ],\n  \"last_seq\": \"20-g1AAAAIfeJyV0F0OgjAMAOAp_j54Bj0CY5mDJ7mJbusIEtwe1Ge9id5Eb6I3wTFIiBoNvLRJ035pmyOEJqkHaKaNNqBibVKzP-S23OdIzIuiyFKPj3a2MKZ-JDHQz-Yf42Jho1jVQs8JihApRNhWiEthXQt9J_AlwzQkbYVNKZzeBEmCkPG2V-iBjehsk0UujUIx5b5gnZRrpdwahQEnMum2y71SHqWCnBIokmCMAU2PGlSy1Qr-Cs9KcD8ZOiEBSUX09dXsBf6mphA\",\n  \"pending\": 0\n}\n</code></pre> <p>To get deleted doc, use the rev: http://localhost:5984/group-2627a0a7-852a-4f51-9d5d-b7ae53130976/6c27f5c8-6e08-4245-ae57-cef7d63099de?rev=2-28819102bb2ec0e3390f28d94467212a</p>"},{"location":"developer/deletion-strategy/#how-to-create-deletions-on-client","title":"How to create deletions on client","text":"<p>Potential steps: - Use the _changes example above to get a list of deleted docs on the server. - Process the results and use the pouchdb remove function on each doc/rev.</p>"},{"location":"developer/deletion-strategy/#restoring-deleted-documents","title":"Restoring deleted documents","text":""},{"location":"developer/deletion-strategy/#using-couchdb-wedge","title":"Using couchdb-wedge","text":"<p>Using the <code>restore-deleted-doc</code> command from couchdb-wedge, we can give it a URL, db, and docId to restore.</p> <pre><code>npm install -g couchdb-wedge\nwedge restore-deleted-doc --url http://username:password@source-server.com:5984 --db my-db --docId 1234\n</code></pre>"},{"location":"developer/deletion-strategy/#using-curl","title":"Using curl","text":"<p>Get the revs for the deleted doc:</p> <pre><code>curl -H 'Accept: application/json' 'http://server:5984/group-uuid-devices/6013f414-6401-4903-b0f9-fb862779cc3f?revs=true&amp;open_revs=all'\n</code></pre> <p>Command returns:</p> <pre><code>{\n  \"_id\": \"6013f414-6401-4903-b0f9-fb862779cc3f\",\n  \"_rev\": \"4-46fb2d064595bb6b2068b20450f2a3f9\",\n  \"_deleted\": true,\n  \"_revisions\": {\n    \"start\": 4,\n    \"ids\": [\n      \"46fb2d064595bb6b2068b20450f2a3f9\",\n      \"59e68396a5b632f62e3ab3930dda3d45\",\n      \"09463546fcf1177408821fccada40269\",\n      \"e3af953eab52ed5f3d56c9f57fdeb2f9\"\n    ]\n  }\n}\n</code></pre> <p>Get the previous rev id by subtracting 1 from the _revisions.start property and appending the value of the second element in the _revisions.id array:</p> <p>Result should be <code>3-59e68396a5b632f62e3ab3930dda3d45</code></p> <p>Now query the server for that _rev:</p> <p>http://server/group-uuid-devices/6013f414-6401-4903-b0f9-fb862779cc3f?rev=3-59e68396a5b632f62e3ab3930dda3d45</p> <p>To overwrite the old deleted entry you have to post or put back the document with the correct id and the latest revision number (not the pre delete revision number, but the revision number the document has now it has been deleted).</p> <p>An easier way to do this is to use the COPY command:</p> <p>curl -X COPY \"server:5984/group-uuid-devices/6013f414-6401-4903-b0f9-fb862779cc3f?rev=3-59e68396a5b632f62e3ab3930dda3d45\" -H \"Destination: 6013f414-6401-4903-b0f9-fb862779cc3f\"</p>"},{"location":"developer/development-bullet-points/","title":"Bullet points for Tangerine Development","text":"<p>Here are my steps when developing for Tangerine: -   Launch ngrok.io to provide https in front of the app. -   Check settings in config.sh:      o  T_HOST_NAME='SOME-NAME.ngrok.io' \u2013 this is critical for sync to work. I don\u2019t think PWA\u2019s work w/ IP addresses - must have a domain name.      o  T_MODULES=\"['csv','sync-protocol-2, case']\" -   Launch Tangerine in developer mode: ./develop.sh -   Once it is up, drop to console and do the following to get a docker console: docker exec -it tangerine bash -   Create a new group: docker exec tangerine create-group \"New Group D\" case-module - Here is a doc on creating a basic case module group which users sync protocol 2, which has the bi-directional syncing/user mgmt.: https://docs.tangerinecentral.org/developer/creating-clean-dev-content/ -   Create a tablet user at Deploy -&gt; Device Users -   While you\u2019re in there, go to Deploy -&gt; Devices and create a device. -   Go to your Tangerine instance using the URL you configured in T_HOST_NAME. Go to the new group you just created and release a PWA:      o  Go to \u201cRelease Offline App\u201d. In Web Browser Installation, select \u201cGenerate Test Release\u201d.      o  Click \u201c Release PWA\u201d button. Copy the url it displays once it has generated the PWA. It should generate the PWA using the T_HOST_NAME. -   In Chrome, enter a new Profile (makes life easier when testing\u2026) and paste the URL for the PWA.  -   In the Device Setup , choose \u201cno\u201d for the Device QR code to scan\u201d. Switch to your Tangerine app, go to Deploy -&gt; Devices and edit the device you created earlier and copy the device ID and Token. -   Once it is setup, login w/ admin or the user you created. -   To generate cases, look at the Case generation page: https://docs.tangerinecentral.org/developer/load-testing/      o  Don\u2019t worry about the substitutions part, just crank out some cases, substituting your group name (something like group-98e646c1-77e5-45ef-8a19-31501c2142a3) for GROUP-UUID below:      o  docker exec tangerine generate-cases 10 GROUP-UUID      o  After generating cases, sync!</p>"},{"location":"developer/development-bullet-points/#troubleshooting","title":"Troubleshooting","text":"<p>If you have problems, check the app-config. File in the group you created. It is at tangerine/data/groups/group-4de0b30c-1c90-4efd-8dcf-e83527109038/client/app-config.json. In the group I setup on the server:</p> <p>\"serverUrl\":https://project.server.org/</p> <p>PWA\u2019s won\u2019t work for that because I no longer have a load balancer setup nor DNS pointing to that instance. So if things are flaky on the groups you generate, this is a good thing to check. Also check the config.sh for the T_HOST_NAME as noted above.</p> <p>To confirm your config.sh settings are correct, your group\u2019s app-config.json should have: \"syncProtocol\":\"2\",\" \"homeUrl\":\"case-home\", \"serverUrl\":https://SERVER.nkgrok.io/</p>"},{"location":"developer/docker-network-issues/","title":"Docker Network Issues","text":""},{"location":"developer/docker-network-issues/#overview","title":"Overview","text":"<p>If you develop behind a corporate firewall, you may run into issues when building Tangerine from the Dockerfile relating to network access to file resources. Why would this happen? - Your corporate network may use the same ports as the virtual private network that docker creates.  - Your local DNS may may configured to use an internal corporate DNS which causes resolution problems when offline. </p> <p>If you experience these problems, add the following switches to your docker config file:</p> <pre><code>\"default-address-pools\": [\n        {\n            \"base\": \"172.80.0.0/16\",\n            \"size\": 24\n        },\n        {\n            \"base\": \"172.90.0.0/16\",\n            \"size\": 24\n        }\n    ],\n  \"dns\": [\n    \"75.75.75.75\",\n    \"8.8.8.8\"\n  ]\n</code></pre>"},{"location":"developer/docker-network-issues/#background","title":"Background","text":""},{"location":"developer/docker-network-issues/#networking","title":"Networking","text":"<p>Error:</p> <pre><code>bower polymer#^2.0.0                       ECMDERR Failed to execute \"git ls-remote --tags --heads https://github.com/Polymer/polymer.git\", exit code of #128 fatal: unable to access 'https://github.com/Polymer/polymer.git/': gnutls_handshake() failed: The TLS connection was non-properly terminated.\n\nAdditional error details:\nfatal: unable to access 'https://github.com/Polymer/polymer.git/': gnutls_handshake() failed: The TLS connection was non-properly terminated.\n</code></pre> <p>Quoting correspondence with a colleague:</p> <p>\"Docker creates bridge networks on the set of ranges 172.[17-31].0.0/16 (and some others) by default.  If a server had a Docker network on 172.19.0.0/16, it could receive traffic from the VPN, but it would send its response to the bridge network, where it wouldn\u2019t go anywhere.\"</p> <p>Fortunately, we can change the default address pools for Docker networks by changing the configuration for the Docker daemon: https://github.com/moby/moby/pull/36396</p> <p>I\u2019m setting ours to the default address example in that pull request:\"</p> <pre><code>    \"default-address-pools\": [\n        {\n            \"base\": \"172.80.0.0/16\",\n            \"size\": 24\n        },\n        {\n            \"base\": \"172.90.0.0/16\",\n            \"size\": 24\n        }\n    ]\n</code></pre>"},{"location":"developer/docker-network-issues/#dns","title":"DNS","text":"<p>Error:</p> <pre><code>request to https://registry.npmjs.org/@vaadin/vaadin-usage-statistics/-/vaadin-usage-statistics-2.1.0.tgz failed, reason: getaddrinfo EAI_AGAIN registry.npmjs.org registry.npmjs.org:443\n</code></pre> <p>I think this is where I found this solution:</p> <p>https://github.com/npm/npm/issues/16661</p> <p>So, I needed to configure the docker DNS config. The first item is my local ISP (Comcast_ DNS server, the second is Google\u2019s.)</p> <p>\"dns\": [     \"75.75.75.75\",     \"8.8.8.8\"   ]</p> <p>Change them to your needs. </p> <p>Anyway, the good news is that with both the default-address-pools and dns properties in my docker config, my build works both connected and disconnected to the RTI VPN.</p>"},{"location":"developer/how-tangerine-is-built/","title":"How Tangerine code is generated","text":"<p>When the develop.sh script is run, the Dockerfile builds tangerine into dist/tangerine-client and copies the built code into builds/apk/www/shell and builds/pwa/release-uuid/app. </p>"},{"location":"developer/how-tangerine-is-built/#building-files","title":"Building files","text":"<p>When Dockerfile is complete, it runs entrypoint-development.sh and watches for changes, sending its output to the dev directory:</p> <pre><code>./node_modules/.bin/ng build --watch --poll 100 --base-href ./ --output-path ./dev \n</code></pre>"},{"location":"developer/how-tangerine-is-built/#copy-files","title":"Copy files","text":"<p>If you need to make an apk using the updated code, run the following script:</p> <pre><code>cd /tangerine/client &amp;&amp; \\\nrm -rf builds/apk/www/shell &amp;&amp; \\\nrm -rf builds/pwa/release-uuid/app &amp;&amp; \\\ncp -r dev builds/apk/www/shell &amp;&amp; \\\ncp -r pwa-tools/updater-app/build/default builds/pwa &amp;&amp; \\\ncp -r dev builds/pwa/release-uuid/app\n</code></pre>"},{"location":"developer/how-tangerine-is-built/#potential-workflow-after-updating-a-lib","title":"Potential workflow after updating a lib","text":"<p>In this workflow, you're testing changes to a library such as tangy-form. Make these changes inside the container in the node_modules directory for your library. </p> <p>Run <code>./node_modules/.bin/ng build --base-href ./ --output-path ./dev</code> inside the client dir in the container. It will rebuild all of the libs.</p> <p>(Note that each time you run the <code>ng build</code> script above it removes the dev directory before building. This may cause problems when you try to list files in that directory. Do a <code>cd .. &amp; cd dev &amp; ls -ls</code> and all will be good.)</p> <p>Next, run the script in the \"Copy files\" section to copy these generated build files to the correct location.</p> <p>If this part of the chain is working, then check the output of the file copy process. </p> <p>If all is good, release a new APK from the Tangerine UI.</p>"},{"location":"developer/how-tangerine-is-built/#tips","title":"Tips","text":"<p>The release-apk.sh script shows the steps when building an APK.</p>"},{"location":"developer/i18n-translation/","title":"i18n/Translation","text":"<p>In Tangerine there are two kinds of translations, content translations and application translations. Content translations are embedded in form content by Editor Users using <code>&lt;t-lang&gt;</code> tags, while application translations are embedded in application level code using the <code>t</code> function in Web Components, <code>_TRANSLATE</code> function in an Angular TS file, or <code>translate</code> pipe in Angular component templates.</p>"},{"location":"developer/i18n-translation/#content-translations","title":"Content Translations","text":"<p>Translations for specific languages are embedded in content, thus portable and specific to that content. The <code>&lt;t-lang&gt;</code> component (https://github.com/ICTatRTI/translation-web-component) is used to detect the language assigned to the HTML doc. In the following example, the label on the <code>hello</code> input will be \"Hello\" if English is set as the language, \"Bonjour\" if French is selected as the language.</p> <pre><code>    &lt;tangy-input \n        name=\"hello\"\n        label=\"\n            &lt;t-lang en&gt;Hello&lt;/t-lang&gt;\n            &lt;t-lang fr&gt;Bonjour&lt;/t-lang&gt;\n        \"\n    &gt;\n    &lt;/tangy-input&gt;\n</code></pre>"},{"location":"developer/i18n-translation/#application-translations","title":"Application Translations","text":"<p>In application code, instead of placing inline translations, a centrally managed JSON file is sourced for replacing strings. At <code>./translations/translation.fr.json</code> you will find the JSON file use for translations when the French language is selected.</p> <pre><code>{\n    \"Accuracy\": \"Pr\u00e9cision\",\n    \"Accuracy Level\": \"Niveau de pr\u00e9cision\",\n    \"Add New User\": \"Ajouter un nouvel utilisateur\",\n    \"Add User to Group\": \"Ajouter un utilisateur \u00e0 un groupe\",\n    ...\n}\n</code></pre> <p>You'll also find the Russian translation at <code>./translations/translation.ru.json</code>. <pre><code>{\n    \"Accuracy\": \"\u0410\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e\u0441\u0442\u044c\",\n    \"Accuracy Level\": \"\u0423\u0440\u043e\u0432\u0435\u043d\u044c \u0430\u043a\u043a\u0443\u0440\u0430\u0442\u043d\u043e\u0441\u0442\u0438\",\n    \"Add New User\": \"\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\",\n    \"Add User to Group\": \"Add User to Group\",\n    ...\n}\n</code></pre></p> <p>And many more. Each file defines an object where the keys are what to replace in the application and the values are what to replace strings with for that language. Depending on where in the application the string is, there are different techniques for exposing a string to translation.</p> <p>In Web Components libraries such as <code>&lt;tangy-form&gt;</code> and <code>&lt;tangy-form-editor&gt;</code>, they use a special <code>t</code> function. Translating strings in template literals looks like...</p> <pre><code>this.shadowRoot.innerHTML = `\n  &lt;h1&gt;\n    ${t('Hello')}\n  &lt;/h1&gt;\n  ...\n`\n</code></pre> <p>Often times Polymer templates are used which won't let you embed functions. In that case, in <code>connectedCallback</code> a <code>this.t</code> object is assembled and then used in the Polymer template.</p> <pre><code>    connectedCallback() {\n        super.connectedCallback()\n        this.t = {\n            hello: t(\"Hello\")\n        }\n    }\n    template() {\n        return html`\n            [[t.hello]] \n        `\n    }\n</code></pre> <p>In Angular Components, the <code>translate</code> pipe is available in templates and _TRANSLATE function for translating in TS files outside of templates.</p> <pre><code>&lt;h1&gt;\n    {{'Hello'|translate}}\n&lt;/h1&gt;\n</code></pre> <pre><code>    const helloString = _TRANSLATE('Hello')\n</code></pre>"},{"location":"developer/i18n-translation/#application-translation-workflow","title":"Application Translation Workflow","text":"<ol> <li>Add new translatable string(s) to <code>./translations/translation.en.json</code>.</li> <li>With develop.sh running, run <code>docker exec tangerine make-translations-consistent</code> to spread this translateable to the other translation json files. </li> <li>With develop.sh running, run <code>docker exec tangerine export-translations-csvs</code> to spread this translateable to the other translation csv files. </li> <li>Commit changes to the translations folder.</li> <li>Send the translations CSVs to corresponding translator.</li> <li>When all translation CSVs have been updated, with develop.sh running, run <code>docker exec tangerine import-translations-csvs</code> to convert translation CSVs to JSON files.</li> <li>Add instructions to CHANGELOG upgrade notes that <code>docker exec tangerine translations-update</code> will need to be run to update all groups with updated translation files.</li> </ol>"},{"location":"developer/i18n-translation/#other-notes","title":"Other notes","text":"<p>Mat-pagination needs a special service to enable use of translation.json - see class/_services/mat-pagination-intl.service.ts</p>"},{"location":"developer/i18n-translation/#right-to-left-languages-rtl","title":"Right to left languages (RTL)","text":"<p>Mat-menu does not support RTL out of the box, but it's simple to get it working: add <code>dir=\"rtl\"</code> to its enclosing element.</p> <pre><code>&lt;span dir=\"rtl\"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;\n  &lt;button mat-button [matMenuTriggerFor]=\"reportsMenu\" class=\"mat-button\"&gt;{{'Select Report'|translate}}&lt;/button&gt;\n  &lt;mat-menu #reportsMenu=\"matMenu\"&gt;\n    &lt;button mat-menu-item [matMenuTriggerFor]=\"groupingMenu\"&gt;Class grouping&lt;/button&gt;\n  &lt;/mat-menu&gt;\n  &lt;mat-menu #groupingMenu=\"matMenu\"&gt;\n    &lt;button mat-menu-item *ngFor=\"let item of formList\" routerLink=\"/reports/{{item.id}}/{{item.classId}}\"&gt;{{item.title}}&lt;/button&gt;\n  &lt;/mat-menu&gt;\n&lt;/span&gt;\n</code></pre> <p>mat-table also needs some twekas to work - Css:</p> <pre><code>.mat-column-Name {\n  padding-right:5px;\n}\n\nth.mat-header-cell {\n  text-align: right;\n}\n</code></pre>"},{"location":"developer/load-testing/","title":"Load testing","text":""},{"location":"developer/load-testing/#client-side-testing","title":"Client-side testing","text":"<p>Generate a PWA. Go to any case record and enter the following in the js console:</p> <p><pre><code>this.caseService.generateCases(1)\n</code></pre> You may change the number of cases generated. It uses the current case as a template for the generated cases.  TODO: Use the case-export.json in the group.</p> <p>You can check how many docs are in the db with:</p> <pre><code>this.userService.getSharedDBDocCount()\n</code></pre> <p>Select \"Sync Online\" to test syncing a large recordset.</p>"},{"location":"developer/load-testing/#server-side-generation","title":"Server-side generation","text":"<p>One may populate a vanilla Tangerine instance with records using the cli:</p> <pre><code>docker exec tangerine generate-uploads 500 group-uuid 2000 100\n</code></pre> <p>That command generates 500 sets (each of which has 2 records) in batches of 100, posted every 2000 ms. Each doc are generated from templates in server/src/scripts/generate-uploads.</p> <p>Add the 'class' switch to the end of that command will generate a studentRegistrationDoc in addition to the other 2 docs. (Read server/src/scripts/generate-uploads/bin.js for more details.)</p> <p>You may need to modify the templates to suit the docs you wish to generate.</p>"},{"location":"developer/load-testing/#case-generation","title":"Case generation","text":"<p>You may create a group for testing using the <code>create-group</code> command. See the creating clean dev conntent doc for more information. There is a case-module option that creates generic case forms. You may also use your own custom group forms. </p> <p>Case generation uses a case-export.json file placed in the group directory as the template for record generation. To create this json file, generate a PWA and create a new case. While viewing the case, open the javascript console and use the <code>copy(await this.caseService.export())</code> command to copy the json. Then paste this data into a case-export.json file. Please note that some groups, such as those created by the case-module mentioned earlier, already have a case-export.json file; however, you may be testing for different scenarios so feel free to create your own. </p> <p>Create or modify the custom-generators.js file if you have different variable substitutions. This file exports: - customGenerators: An object that has custom functions you may define - customSubstitutions: An array of substitutions. </p> <p>Here is an example of substitutions:</p> <pre><code>const substitutions = [\n    {\n        \"type\": \"caseDoc\"\n    },\n    {\n        \"type\": \"demoDoc\",\n        \"formId\": \"registration-role-1\",\n        \"substitutions\": {\n            \"first_name\": {\n                \"functionName\": \"firstname\",\n                \"runOnce\":\"perCase\"\n            },\n            \"last_name\": {\n                \"functionName\": \"surname\",\n                \"runOnce\":\"perCase\"\n            },\n            \"consent\": {\n                \"functionName\": \"yes_no\",\n                \"runOnce\": false\n            }\n        }\n    }\n]\n</code></pre> <p>In this example, there are two files that can have variable substitution: - caseDoc - This is the case manifest, which has the doc.type === 'case'. No substitutions are listed for this doc. - demoDoc - This is the demographics form that corresponds to the formId, which is \"registration-role-1\" in the example. </p> <p>Since the current case-module example does not have any substitutions happening in the caseDoc inputs, there are no entries for substitutions in it. The demoDoc does have substitutions. The substitutions are key/value pairs. The substitutions key is the variable name of the input you wish to substitute, and the substitutions value is an object that may declare several properties: - functionName: how the function is called - runOnce: if the function is executed when the script is initialized per case, or when each doc is generated.  the pre-built randomised field you wish to substitute. </p> <p>In this example, first_name is being populated by the firstname function, which is run when each case is generated. </p> <p>Case generation also performs other types of randomization. Here are some examples: - firstname: Randomises a female first name  - surname: Randomizes a last name - tangerineModifiedOn: Today's date, offet by the running tally of docs being generated. The time is similarly offset.  - day: day part of tangerineModifiedOn, padded with 0 if needed. - month: month part of tangerineModifiedOn, padded with 0 if needed. - year: year part of tangerineModifiedOn. - date: year + '-' + month + '-' + day; - participant_id: Random number under 1000000. - participantUuid: A UUID.</p> <p>Before generating cases, create a device registration in order to properly generate a location property in the generated docs. When setting location, case generation uses the first doc in the group's devices database. If you don't have one, sync won't work properly. Case generation will fail if there are no device registrations. </p> <p>To generate cases, use the following docker command:</p> <pre><code>docker exec tangerine generate-cases 1 group-uuid\n</code></pre> <p>This would generate one case. Change the number to generate more. </p>"},{"location":"developer/load-testing/#clean-things-up","title":"Clean things up","text":"<p>To delete all generated records (but keep the views), use bulkdelete.</p>"},{"location":"developer/modules/","title":"Tangy Modules","text":"<p>Modules provide additional features to Tangerine, such as:  - automatically add forms to the client when a new group is created (via groupNew hook)  - data transformation for reporting (via flatFormResponse hook)</p> <p>Modules:  - Class</p> <p>Steps to add a module  - Create an index.js file inside server/src/modules/moduleName using the sample below as a guide.  - Implement any relevant hooks. Available hooks:    - flatFormResponse    - groupNew    - declareAppRoutes    - clearReportingCache    - reportingOutputs  - Forms that need to be copied over to the client should be placed in server/src/modules/moduleName.</p>"},{"location":"developer/modules/#activating-modules","title":"Activating modules","text":"<p>Add the module name to T_MODULES in config.sh. When a new group is created, the modules listed in T_MODULES will be added to the new group's app-config.json. </p> <pre><code>T_MODULES=\"['csv','sync-protocol-2','synapse','case']\"\n</code></pre> <p>If you need to add a module to an existing group, modify the modules property in app-config.json/</p> <pre><code>   \"modules\" : [\n      \"csv\"\n   ],\n</code></pre>"},{"location":"developer/modules/#example-module-indexjs","title":"Example module index.js","text":"<p>This example from the <code>class</code> module implements the <code>flatFormResponse</code> and <code>groupNew</code> hooks:</p> <p>``` const clog = require('tangy-log').clog const fs = require('fs-extra')</p> <p>module.exports = {   hooks: {     flatFormResponse: function(data) {       return new Promise((resolve, reject) =&gt; {           debugger;           let formResponse = data.formResponse           let flatFormResponse = data.flatFormResponse           if (formResponse.metadata &amp;&amp; formResponse.metadata.studentRegistrationDoc &amp;&amp; formResponse.metadata.studentRegistrationDoc.classId) {             let studentRegistrationDoc = formResponse.metadata.studentRegistrationDoc             flatFormResponse[<code>sr_classId</code>] = studentRegistrationDoc.classId;             flatFormResponse[<code>sr_student_name</code>] = studentRegistrationDoc.student_name;             flatFormResponse[<code>sr_student_id</code>] = studentRegistrationDoc.id;             flatFormResponse[<code>sr_age</code>] = studentRegistrationDoc.age;             flatFormResponse[<code>sr_gender</code>] = studentRegistrationDoc.gender;           }           resolve({flatFormResponse, formResponse})       })     },     groupNew: function(data) {       return new Promise(async (resolve, reject) =&gt; {         const {groupName, appConfig} = data         clog(\"Setting homeUrl to dashboard and uploadUnlockedFormReponses to true.\")         appConfig.homeUrl =  \"dashboard\"         appConfig.uploadUnlockedFormReponses =  true         // copy the class forms         try {           await fs.copy('/tangerine/server/src/modules/class/', <code>/tangerine/client/content/groups/${groupName}</code>)           clog(\"Copied class module forms.\")         } catch (err) {           console.error(err)         }         resolve(data)       })     },   } }  ```</p> <p>This code will be automatically run when the TangyModules (server/src/modules/index.js) is run.</p>"},{"location":"developer/modules/#hooks","title":"Hooks","text":"<p>Example:</p> <pre><code>const data = await tangyModules.hook('groupNew', {groupName, appConfig})\n</code></pre>"},{"location":"developer/reporting-mango-tips/","title":"Tips for making queries for Reports using Mango","text":"<p>Mango is a query language available to Couchdb based upon MongoDB. </p>"},{"location":"developer/reporting-mango-tips/#general-info-about-mango","title":"General info about Mango:","text":"<ul> <li>https://pouchdb.com/guides/mango-queries.html</li> <li>https://docs.couchdb.org/en/stable/api/database/find.html</li> <li>https://github.com/cloudant/mango</li> </ul>"},{"location":"developer/reporting-mango-tips/#some-things-to-watch-out-for","title":"Some things to watch out for:","text":""},{"location":"developer/reporting-mango-tips/#sorting","title":"Sorting","text":"<p>Add the key you're sorting upon - in the following case, it is <code>tangerineModifiedOn</code> - to the index:</p> <pre><code> await createIndex({\n    index: {\n      fields: [\n        'type',\n        'status',\n        'tangerineModifiedOn'\n      ]\n    }\n  })\n</code></pre>"},{"location":"developer/reporting-mango-tips/#or-and-ne","title":"$or and $ne","text":"<p>Mango abandons the indexes and does live queries, which can cause the query to fail. For $ne you can do a partial filter to improve performance. </p> <p>Here is a good discussion of the issue w/ these Mango expressions: https://stackoverflow.com/a/41897093</p> <p>Here is an example of this issue in Tangerine: #2367</p> <p>Example lifted from the Couch doc on Partial Indexes:</p> <pre><code>To improve response times, we can create an index which excludes documents where \"status\": { \"$ne\": \"archived\" } at index time using the \"partial_filter_selector\" field:\n\n{\n  \"index\": {\n    \"partial_filter_selector\": {\n      \"status\": {\n        \"$ne\": \"Open\"\n      }\n    },\n    \"fields\": [\"type\", \"status\", \"tangerineModifiedOn\"]\n  },\n  \"ddoc\" : \"type-not-open\",\n  \"type\" : \"json\"\n}\n</code></pre>"},{"location":"developer/reverse-proxy-for-developers/","title":"Reverse Proxy for Developers","text":""},{"location":"developer/reverse-proxy-for-developers/#reverse-proxy-software","title":"Reverse proxy software","text":"<p>local-ssl-proxy is a Node.js app that can be used to proxy requests from a local development server to a remote server over HTTPS. This is an alternative to using a reverse proxy tunnel service such as ngrok.io or tunnelto.dev.</p>"},{"location":"developer/reverse-proxy-for-developers/#generate-ssl-certificates","title":"Generate SSL certificates","text":"<p>Here's a nice primer on creating a self-signed SSL certificate: https://deliciousbrains.com/ssl-certificate-authority-for-local-https-development/ I've lifted these examples from that article. Although this example focuses on MacOS, the primer in the link has examples for Linux and Windows. </p> <p>In the following example, the code creates a key and cert for a local dev server named tangy.test. Note that this script does not have the <code>-des3</code> switch, which forces the use of a password, because the script is intended for use with local development servers.</p> <p><code>openssl genrsa -out tangy.test.key 2048</code></p> <p>You'll answer a bunch of questions. The most important one is the Common Name (e.g. server FQDN or YOUR name). Enter the name of your local dev server here, e.g. tangy.test.</p> <p><code>openssl req -new -key tangy.test.key -out tangy.test.csr</code></p> <p>You should now have two files: myCA.key (your private key) and myCA.pem (your root certificate).</p>"},{"location":"developer/reverse-proxy-for-developers/#adding-the-root-certificate-to-macos-keychain","title":"Adding the Root Certificate to macOS Keychain","text":"<p><code>sudo security add-trusted-cert -d -r trustRoot -k \"/Library/Keychains/System.keychain\" myCA.pem</code></p> <p>The tutorial has examples of adding the root certs to other devices, which might be handy for Android and IOS development.</p>"},{"location":"developer/reverse-proxy-for-developers/#creating-ca-signed-certificates","title":"Creating CA-Signed Certificates","text":"<p>Now create tangy.test.ext:</p> <pre><code>authorityKeyIdentifier=keyid,issuer\nbasicConstraints=CA:FALSE\nkeyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = tangy.test\n</code></pre> <p>The final step: </p> <p><code>openssl x509 -req -in tangy.test.csr -CA myCA.pem -CAkey myCA.key \\ -CAcreateserial -out tangy.test.crt -days 825 -sha256 -extfile tangy.test.ext</code></p> <p>We now have three files: tangy.test.key (the private key), tangy.test.csr (the certificate signing request, or csr file), and tangy.test.crt (the signed certificate). We can configure local web servers to use HTTPS with the private key and the signed certificate.</p>"},{"location":"developer/reverse-proxy-for-developers/#using-local-ssl-proxy","title":"Using local-ssl-proxy","text":"<p>At this point you can launch Tangerine, which will respond to requests on port 80. Then launch local-ssl-proxy:</p> <p>local-ssl-proxy --source 443 --target 80 --cert ~/ssl/server.crt --key ~/ssl/server.key</p> <p>You should be able to access Tangerine via <code>https://localhost</code>. Next step - configure your local dev domain in DNS:</p>"},{"location":"developer/reverse-proxy-for-developers/#dns-settings","title":"DNS settings","text":"<p>Add your local dev domain to /etc/hosts. The domain 'tangy.test' is used in this example; replace with your own domain:</p> <pre><code>##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1       localhost\n255.255.255.255 broadcasthost\n::1             localhost\n127.0.0.1       tangy.test\n</code></pre> <p>Now you should be able to access Tangerine using https://tangy.test`.</p>"},{"location":"developer/supporting-custom-elements/","title":"Supporting custom elements and external libs","text":""},{"location":"developer/supporting-custom-elements/#adding-new-elements","title":"Adding new elements","text":"<p>To add a new custom element or to add support for new polymer or other web components, you must make them accessible to Angular: - add to package.json - import into polyfills</p> <p>You also need to add CUSTOM_ELEMENTS_SCHEMA to your module to support custom tags in your templates:</p> <pre><code>schemas: [CUSTOM_ELEMENTS_SCHEMA],\n</code></pre>"},{"location":"developer/supporting-custom-elements/#manual-imports","title":"Manual imports","text":"<p>Some libs need to be imported manually because they are not available as ES6 modules. Add the lib using a script tag - </p> <pre><code>&lt;script src=\"./libs/plotly-latest.min.js\"&gt;&lt;/script&gt;\n</code></pre> <p>and then add to angular.json:</p> <pre><code>\"assets\": [\n    \"src/libs/plotly-latest.min.js\"\n]\n</code></pre>"},{"location":"developer/supporting-custom-elements/#resolving-incompatibilities","title":"Resolving incompatibilities","text":"<p>The <code>\"skipLibCheck\": true</code> switch in tscondig.json will causes type checking of declaration files (files with extension .d.ts) to be skipped. (Stack Overflow discussion) If you run into an error such as <code>ERROR in node_modules/tangy-form/tangy-form-response-model.d.ts:18:17 - error TS1039: Initializers are not allowed in ambient contexts.</code> this switch may be useful to getting the app to compile. We decided to not use it - simply removing it worked fine - but if it's a choice between the app compiling or not, it's worth using.</p>"},{"location":"developer/sync-sessions/","title":"Sync Sessions","text":"<p>A deviceToken, which is persisted in the client device record, is used for authentication with the server and is passed  in the syncSessionUrl by sync.service. This is passed using the following code:</p> <pre><code>const syncSessionInfo = &lt;SyncSessionInfo&gt;await this.http.get(`${syncDetails.serverUrl}sync-session-v2/start/${syncDetails.groupId}/${syncDetails.deviceId}/${syncDetails.deviceToken}`).toPromise()\n</code></pre> <p>The syncSessionService.start() method verifies the token, starts a sync session, and returns the following object:</p> <pre><code>&lt;SyncSessionInfo&gt;{\n        syncSessionUrl: `${config.protocol}://${syncUsername}:${syncPassword}@${config.hostName}/db/${groupId}`,\n        deviceSyncLocations: device.syncLocations\n      }\n</code></pre> <p>This syncSessionUrl is used to create the connection to the Couchdb for replication.</p>"},{"location":"developer/tangerine-dev-tutorial-notes/","title":"Commands","text":""},{"location":"developer/tangerine-dev-tutorial-notes/#create-group-and-generate-casees","title":"Create group and generate case(es)","text":"<pre><code>docker exec tangerine create-group \"CM-1\" case-module\n\ndocker exec tangerine generate-cases 1 group-09a2a880-1317-4cbf-b944-0fd059fa7007\n</code></pre>"},{"location":"developer/tangerine-dev-tutorial-notes/#open-docker-shell","title":"Open docker shell","text":"<pre><code>docker exec -it tangerine bash\n</code></pre>"},{"location":"developer/tangerine-dev-tutorial-notes/#refresh-code","title":"Refresh code","text":"<p>Run this inside tangerine docker shell</p> <pre><code>cd /tangerine/client &amp;&amp; rm -rf builds/apk/www/shell \n&amp;&amp; rm -rf builds/pwa/release-uuid/app &amp;&amp; cp -r dev builds/apk/www/shell \n&amp;&amp; cp -r pwa-tools/updater-app/build/default builds/pwa \n&amp;&amp; cp -r dev builds/pwa/release-uuid/app\n</code></pre>"},{"location":"developer/tangerine-dev-tutorial-notes/#adb-commands","title":"ADB commands","text":"<pre><code>adb devices\n</code></pre> <pre><code>adb install data/client/releases/prod/apks/group-09a2a880-1317-4cbf-b944-0fd059fa7007/platforms/android//app/build/outputs/apk/debug/app-debug.apk\n</code></pre> <pre><code>adb uninstall org.rti.tangerine\n</code></pre>"},{"location":"developer/tangerine-globals/","title":"Globals in Tangerine","text":""},{"location":"developer/tangerine-globals/#globals-in-memory","title":"Globals in memory","text":"<p>In-memory globals won't survive refreshing the browser. </p> <p>We are caching important configuration files (app-config.json, forms.json, location-list.json) to avoid having to keep fetching those docs from the db.</p> <p>Use the following code to take advantage of this caching:       - <code>await this.appConfigService.getLocationList();</code>       - <code>await this.tangyFormsInfoService.getFormsInfo();</code>       - <code>await this.appConfigService.getAppConfig;</code>       - <code>await this.tangyFormService.getFormMarkup(this.eventFormDefinition.formId);</code></p> <p>CaseDefinitionsService also has implements of caseDefinitions, but that is not exposed publicly. More info in this PR: https://github.com/Tangerine-Community/Tangerine/pull/1991</p>"},{"location":"developer/tangerine-globals/#globals-that-are-stored-in-a-database","title":"Globals that are stored in a database","text":"<p>Database variables will persist after page refreshes or app reboots.</p> <p>Use VariableService. Stores data in 'tangerine-variables' pouchdb as a key/value pair. The key is the _id in the doc. The value can be a string, JSON object, or any other data type that can be persisted in a pouchdb. </p> <pre><code>await this.variableService.set('tangerine-device-is-registered', true)\n</code></pre> <pre><code>await this.variableService.get('tangerine-device-is-registered')\n</code></pre>"},{"location":"developer/tangerine-globals/#widely-used-configuration-variables","title":"Widely-used Configuration Variables","text":""},{"location":"developer/tangerine-globals/#server","title":"Server","text":"<p>They are not globals, but they are mighty useful. The TangerineConfigService provides variables set in config.sh. Expose it in your constructor:</p> <p><pre><code>private readonly configService: TangerineConfigService,\n</code></pre> And then you may use it:</p> <pre><code>const userOneUsername = this.configService.config().userOneUsername\n</code></pre>"},{"location":"developer/tangerine-globals/#client","title":"Client","text":"<p>Use <code>await this.appConfigService.getAppConfig;</code> to fetch app-config.json settings in client.</p>"},{"location":"developer/testing-conflicts/","title":"Conflicts","text":"<p>The goal is to follow the CRDT (conflict-free replicated data type) pattern in resolving conflicts. When the app tries to merge two conflicting records, how should it sync the conflicting values: which value should win? The afore-mentioned Wikipedia page offers some guidance: \"As an example, a one-way Boolean event flag is a trivial CRDT: one bit, with a value of true or false. True means some particular event has occurred at least once. False means the event has not occurred. Once set to true, the flag cannot be set back to false. (An event, having occurred, cannot un-occur.) The resolution method is \"true wins\": when merging a replica where the flag is true (that replica has observed the event), and another one where the flag is false (that replica hasn't observed the event), the resolved result is true \u2014 the event has been observed.\"</p> <p>We have not yet reached this level of conflict resolution. We have first started with comparing data from Event Forms, detecting some basic conflicts such as missing <code>formResponseId</code>, <code>complete</code>, or <code>required</code> properties or detecting if there is a <code>new</code> event form and then merging according to rules specific to each difference. In general, the event form conflicts are resolved by adding the missing property or form. For metadata that are in conflict, the most recent metadata is merged (wins). There is also a check for new events.</p> <p>Unit tests are available that test the conflicts mentioned above. You can also create scenarios on a tablet. </p>"},{"location":"developer/testing-conflicts/#testing-conflicts-on-a-tablet","title":"Testing Conflicts on a tablet","text":""},{"location":"developer/testing-conflicts/#tips","title":"Tips","text":"<p>After each scenario, it is useful to run Sync to make sure that no more docs need to be sync'd: <pre><code>Status: Complete\n   Pulled from the server: 0\n   Pushed to the server: 0\n</code></pre></p>"},{"location":"developer/testing-conflicts/#supported-scenarios","title":"Supported Scenarios","text":""},{"location":"developer/testing-conflicts/#difftype-eventform-tablet-1-opens-but-doesnt-complete-event-form-tablet-2-opens-and-completes-event-form","title":"DiffType: EventForm - Tablet 1 opens but doesn't complete Event Form, Tablet 2 opens and completes Event Form","text":"<p>Steps</p> <p>Setup: - Create a new case with pwa1. Fill out \"Registration for Role 1\" - enter '0' for \"How many participant of type Role 2 would you like to enroll in this case?\", submit. Create a New Event of type \"An Event with an event form you can delete\". Sync. - In PWA2, sync. </p> <p>Create a divergence:  - In PWA1, open the form and exit (don't submit form). This should create a diverging tree in the revisions. - In PWA2, Enter the case you just synced. Enter the event of type \"An Event with an event form you can delete\" and complete the form in \"An Event with an Event Form you can delete.\"  Sync.</p> <p>Syncing to create the conflict: - In PWA1, Sync. This should create a conflict. Note that Sync status displays \"Conflicts detected.\" This conflict is resolved on the client and sync'd to the server. - Check data/issues on server. There should be a new issue, which should display the following: <pre><code>Merged: true\nDiffTypes:\n    (1) DIFF_TYPE__METADATA\n</code></pre> - In PWA2, sync. This should NOT create a conflict.  - Check to see that data is identical on both PWA's.</p>"},{"location":"developer/testing-conflicts/#difftype-event-tablet-1-creates-an-new-event-and-tablet-2-creates-a-new-event","title":"DiffType: Event - Tablet 1 creates an new Event and Tablet 2 creates a new Event","text":"<p>Steps</p> <p>Setup: - Create a new case with PWA1. Fill out \"Registration for Role 1\" - enter '0' for \"How many participant of type Role 2 would you like to enroll in this case?\", submit. Sync - In PWA2, sync. Enter the case you just synced. Create a New Event of type \"An Event with an event form you can delete\" and complete the form in \"An Event with an Event Form you can delete.\" Sync.</p> <p>Create a divergence:  - In PWA1, enter the same case (don't sync yet) and create a New Event of type \"An Event with an event form you can delete\". Complete the form in \"An Event with an Event Form you can delete.\" </p> <p>Syncing to create the conflict: - In PWA1, sync. This should create a conflict. Note that Sync status displays \"Conflicts detected.\" This conflict is resolved on the client and sync'd to the server. - Check data/issues on server. There should be a new issue, which should display the following: <pre><code>Merged: true\nDiffTypes:\n\n    (1) DIFF_TYPE__EVENT\n    (1) DIFF_TYPE__EVENT_FORM\n    (1) DIFF_TYPE__METADATA\n</code></pre></p> <ul> <li>Check the case on PWA1. There should be 2 instances of \"An Event with an Event Form you can delete\" - one from PWA1, and another from PWA2.</li> <li>In PWA2, sync. This should create a conflict. Note that Sync status displays \"Conflicts detected.\"  This conflict is resolved on the client and sync'd to the server.</li> <li>Check data/issues on server. There should be a new issue, which should display the following: <pre><code>Merged: true\nDiffTypes:\n\n    (1) DIFF_TYPE__EVENT\n    (1) DIFF_TYPE__EVENT_FORM\n    (1) DIFF_TYPE__METADATA\n</code></pre></li> <li>Check the case on PWA2. There should be 2 instances of \"An Event with an Event Form you can delete\" - one from PWA1, and another from PWA2.</li> </ul>"},{"location":"developer/testing-conflicts/#difftype-eventform-tablet-1-creates-a-new-event-form-and-tablet-2-makes-some-other-change","title":"DiffType: EventForm - Tablet 1 creates a new Event Form and Tablet 2 makes some other change","text":"<p>Steps</p> <p>Setup: - Create a new case with PWA1. Fill out \"Registration for Role 1\" - enter '0' for \"How many participant of type Role 2 would you like to enroll in this case?\", submit. Create a New Event of type \"An Event with an event form you can delete\".\" Open that new event but do not click on the form \"An Event Form you can delete\". Sync. - In PWA2, sync. Enter the case you just synced. View the \"Registration for Role 1\" form. Sync.</p> <p>Create a divergence:  - In PWA1, Enter the same case (don't sync yet) and enter a New Event of type \"An Event with an event form you can delete\". Complete the form in \"An Event with an Event Form you can delete.\" </p> <p>Syncing to create the conflict: - In PWA1, sync. This should create a conflict. Note that Sync status displays \"Conflicts detected.\" This conflict is resolved on the client and sync'd to the server. - Check data/issues on server. There should be a new issue, which should display the following: <pre><code>Merged: true\nDiffTypes:\n\n(1) DIFF_TYPE__METADATA\n</code></pre> - In PWA2, sync. This should create a conflict. Note that Sync status displays \"Conflicts detected.\"  This conflict is resolved on the client and sync'd to the server. - Check data/issues on server. There should be a new issue, which should display the following: <pre><code>Merged: true\nDiffTypes:\n\n    (1) DIFF_TYPE__METADATA\n</code></pre>   - Check the case on PWA2. There should be 1 instances of \"An Event with an Event Form you can delete\" - with the form completed from PWA1</p>"},{"location":"developer/testing-conflicts/#difftype-metadata-change-location-on-tablet-1-and-tablet-2","title":"DiffType: Metadata - Change location on Tablet 1 and Tablet 2","text":"<p>Steps: - In PWA1, pull up the case you just created. Submit a \"Change Location of Case\" form, setting it for Facility 1. Don't Sync. - In PWA2, pull up the same case. Submit a \"Change Location of Case\" form, setting it for Facility 2. Sync. - In PWA1, sync. Note the error displayed: <pre><code>Status: Error\n4 docs synced; 0 pending; ERROR: \"Document update conflict\"\n</code></pre>    Sync again. Note that Sync status displays \"Conflicts detected.\"  This conflict is resolved on the client and sync'd to the server. </p> <ul> <li>In PWA1, pull up the case. Note that there are two \"Change location of case\" forms, one for Facility 1 and another for Facility 2. In the js console, enter <code>T.case._case.location.facility</code>. It should display \"K0xhy1Su\".</li> <li> <p>In PWA2, sync. Note the error displayed: <pre><code>Status: Error\n4 docs synced; 0 pending; ERROR: \"Document update conflict\"\n</code></pre>    Sync again. Note that Sync status displays \"Conflicts detected.\"  This conflict is resolved on the client and sync'd to the server. </p> </li> <li> <p>In PWA2, pull up the case. Note that there are two \"Change location of case\" forms, one for Facility 1 and another for Facility 2. In the js console, enter <code>T.case._case.location.facility</code>. It should display \"K0xhy1Su\".</p> </li> </ul>"},{"location":"developer/testing-conflicts/#difftype-metadata-modify-case-variables-on-tablet-1-and-tablet-2","title":"DiffType: Metadata - Modify Case variables on Tablet 1 and Tablet 2","text":"<p>TODO: Create a form in the Case Module that uses setVariable and getVariable function</p>"},{"location":"developer/testing-conflicts/#scenarios-not-yet-supported","title":"Scenarios not yet supported","text":""},{"location":"developer/testing-conflicts/#difftype-eventform-tablet-1-removes-an-event-form-and-tablet-2-makes-some-other-change","title":"DiffType: EventForm - Tablet 1 removes an Event Form and Tablet 2 makes some other change","text":""},{"location":"developer/testing-conflicts/#difftype-eventform-tablet-1-makes-an-event-form-required-and-tablet-2-makes-some-other-change","title":"DiffType: EventForm - Tablet 1 makes an Event Form required and Tablet 2 makes some other change","text":""},{"location":"developer/testing-conflicts/#difftype-eventform-tablet-1-makes-adds-an-event-form-variable-and-tablet-2-makes-some-other-change","title":"DiffType: EventForm - Tablet 1 makes adds an Event Form variable and Tablet 2 makes some other change","text":""},{"location":"developer/testing-conflicts/#difftype-eventform-tablet-1-makes-modifies-existing-event-form-variable-and-tablet-2-makes-some-other-change","title":"DiffType: EventForm - Tablet 1 makes modifies existing Event Form variable and Tablet 2 makes some other change","text":""},{"location":"developer/testing-conflicts/#difftype-eventform-tablet-1-makes-modifies-existing-event-form-variable-and-tablet-2-modifies-the-same-event-form-variable-with-same-value","title":"DiffType: EventForm - Tablet 1 makes modifies existing Event Form variable and Tablet 2 modifies the same Event Form variable with same value","text":""},{"location":"developer/testing-conflicts/#difftype-eventform-tablet-1-makes-modifies-existing-event-form-variable-and-tablet-2-modifies-the-same-event-form-variable-with-different-value","title":"DiffType: EventForm - Tablet 1 makes modifies existing Event Form variable and Tablet 2 modifies the same Event Form variable with different value","text":""},{"location":"developer/testing-conflicts/#exploring-unexpected-sync-conflicts","title":"Exploring unexpected sync conflicts","text":""},{"location":"developer/testing-conflicts/#difftype-metadata-two-cases-view-the-same-case-but-make-no-modification","title":"DiffType: Metadata - Two cases view the same case but make no modification","text":"<p>A metadata conflict is easy to create: whenever a case is viewed, its metadata is modified. </p> <p>Steps: - launch 2 PWA's with the group, based on the case module - <code>docker exec tangerine create-group \"Test Auto-merge 1\" case-module</code> - consider editing the \"Registration for Role 1\" \"Registration\" section by changing the QR code into an input, just to make testing easier. - Create a new case with pwa1. Fill out \"Registration for Role 1\" - enter '0' for \"How many participant of type Role 2 would you like to enroll in this case?\", submit, and sync. - in PWA2, sync, and open the new case. Create a New Event of type \"An Event with an event form you can delete\" . Go into the event and form and submit the \"An Event Form you can delete\" form. Sync. Notice that so far, no new conflicts have been created. - In PWA1, sync. Note that Sync status displays \"Conflicts detected.\" Check data/issues on server - should be type (1) DIFF_TYPE__METADATA. Merged: true. - In PWA2, sync. Note that Sync status displays \"Pulled from the server: 1\".</p>"},{"location":"developer/testing-conflicts/#difftype-eventform-data-conflict-1-dont-touch-the-event","title":"DiffType: EventForm - data conflict 1 - Don't touch the event","text":"<p>So far, this has not made a conflict for me...</p> <p>Steps: - Create a new case with pwa1. Fill out \"Registration for Role 1\" - enter '0' for \"How many participant of type Role 2 would you like to enroll in this case?\", submit. On the same case, create a New Event of type \"An Event with an event form you can delete\". Don't view that event or enter data in its form. Sync.  - In PWA2, sync. Enter the case you just synced and complete the form in \"An Event with an Event Form you can delete.\" Sync. - In PWA1, sync. The new form does not appear. Do a hard refresh. The new form should now appear in the case. Sync. - In PWA2, sync. Conflicts arise. Or not. Check data/issues on server - should be type (1) DIFF_TYPE__METADATA. Merged: true. There is a 50/50 chance this record won't have a conflict...</p>"},{"location":"developer/testing-conflicts/#difftype-eventform-data-conflict-2-touch-the-event","title":"DiffType: EventForm - data conflict 2 - Touch the event","text":"<p>So far, this has not made a conflict for me...</p> <p>Steps: - Create a new case with pwa1. Fill out \"Registration for Role 1\" - enter '0' for \"How many participant of type Role 2 would you like to enroll in this case?\", submit. On the same case, create a New Event of type \"An Event with an event form you can delete\". View the event, but don't view the form. Sync.  - In PWA2, sync. Enter the case you just synced and complete the form in \"An Event with an Event Form you can delete.\" Sync. - In PWA1, sync. The new form does not appear. Do a hard refresh. The new form should now appear in the case. Sync. - In PWA2, sync. Conflicts arise. Or not. Check data/issues on server - should be type (1) DIFF_TYPE__METADATA. Merged: true. There is a 50/50 chance this record won't have a conflict...</p>"},{"location":"developer/testing-conflicts/#difftype-eventform-data-conflict-3-open-but-dont-save-the-form","title":"DiffType: EventForm - data conflict 3 - Open but don't save the form","text":"<p>Steps: - Create a new case with pwa1. Fill out \"Registration for Role 1\" - enter '0' for \"How many participant of type Role 2 would you like to enroll in this case?\", submit. On the same case, create a New Event of type \"An Event with an event form you can delete\". View the event, then view the form, but don't submit it. Sync.  - In PWA2, sync. Enter the case you just synced and complete the form in \"An Event with an Event Form you can delete.\" Sync. - In PWA1, sync. The new form does not appear. Do a hard refresh. The new form should now appear in the case. Sync. - In PWA2, sync. Conflicts arise. Or not. Check data/issues on server - should be type (1) DIFF_TYPE__METADATA. Merged: true. There is a 50/50 chance this record won't have a conflict... - So far, this has not made a conflict for me...</p>"},{"location":"developer/viewing-forms-and-data/","title":"Viewing Forms and Form Data","text":"<p>Use TangyFormService to retrieve form definitions and response data. The revision is used to get the correct version of the form.</p> <pre><code>    this.formResponse = await this.tangyFormService.getResponse(this.eventForm.formResponseId)\n    const tangyFormMarkup = await this.tangyFormService.getFormMarkup(this.eventFormDefinition.formId, this.formResponse.formVersionId)\n</code></pre> <p>But there are other ways of getting data out of Tangerine. First you need to see where you are getting data from.</p>"},{"location":"developer/viewing-forms-and-data/#mapping-of-components-to-forms","title":"Mapping of components to forms","text":"<p>EventFormListItemComponent - listing of forms in an event CaseEventListItemComponent - listing of events (such as Followup ANC Visits) in a case.</p>"},{"location":"developer/viewing-forms-and-data/#helper-functions-already-in-components","title":"Helper functions already in components","text":"<p>In the component for a list, helper functions may already expose the properties you need to populate a template. In EventFormListItemComponent, notice the variable exposed:</p> <p><pre><code>    const response = await this.formService.getResponse(this.eventForm.formResponseId)\n    const getValue = (variableName) =&gt; {\n// more code inside getValue();\n      }, {})\n// snip\n    const caseInstance = this.case\n    const caseDefinition = this.caseDefinition\n    const caseEventDefinition = this.caseEventDefinition\n    const caseEvent = this.caseEvent\n    const eventForm = this.eventForm\n    const eventFormDefinition = this.eventFormDefinition\n    const formatDate = (unixTimeInMilliseconds, format) =&gt; moment(new Date(unixTimeInMilliseconds)).format(format)\n    const TRANSLATE = _TRANSLATE\n    eval(`this.renderedTemplateListItemIcon = this.caseDefinition.templateEventFormListItemIcon ? \\`${this.caseDefinition.templateEventFormListItemIcon}\\` : \\`${this.defaultTemplateListItemIcon}\\``)\n    eval(`this.renderedTemplateListItemPrimary = this.caseDefinition.templateEventFormListItemPrimary ? \\`${this.caseDefinition.templateEventFormListItemPrimary}\\` : \\`${this.defaultTemplateListItemPrimary}\\``)\n    eval(`this.renderedTemplateListItemSecondary = this.caseDefinition.templateEventFormListItemSecondary ? \\`${this.caseDefinition. v}\\` : \\`${this.defaultTemplateListItemSecondary}\\``)\n</code></pre> If there is not a response for a form, response will be false; therefore, if you do a getValue() in your template, be sure to test if response is true. </p> <p>If you wish to display the startDatetime in your template, note that is is part of the response object - it is returned as response.startDatetime. In other cases - for values inside the form - use getValue(variableName) - but test if response is true first! Also, remember that the variableName is one of the id's in the inputs array, which is inside each item in the items array. </p>"},{"location":"developer/viewing-forms-and-data/#testing-your-templates","title":"Testing your templates","text":"<p>Here's an easy way to test your template code: in the js console, use the copy() function to copy the value for your template:</p> <p><pre><code>copy(this.caseDefinition.templateEventFormListItemSecondary)\n</code></pre> Then add the fields or functions you need. In this case, I'm adding a getValue:</p> <pre><code>`&lt;t-lang en&gt;Status&lt;/t-lang&gt;&lt;t-lang fr&gt;Statut&lt;/t-lang&gt;: ${!eventForm.complete ? '&lt;t-lang en&gt;Incomplete&lt;/t-lang&gt;&lt;t-lang fr&gt;Incompl\u00e8te&lt;/t-lang&gt;' : '&lt;t-lang en&gt;Complete&lt;/t-lang&gt;&lt;t-lang fr&gt;Achev\u00e9e&lt;/t-lang&gt;'} ${response ? `Version: ${getValue(\"content_release_version\")}`: ''}`\n</code></pre> <p>Output: <pre><code>\"&lt;t-lang en&gt;Status&lt;/t-lang&gt;&lt;t-lang fr&gt;Statut&lt;/t-lang&gt;: &lt;t-lang en&gt;Complete&lt;/t-lang&gt;&lt;t-lang fr&gt;Achev\u00e9e&lt;/t-lang&gt; Start date: 3/13/2020, 11:25:19 AM\"\n</code></pre></p> <p>Note that I was testing for existence of response, and also nesting templates to show the \"Version\" text if there was a value for content_release_version.</p> <p>Another example:</p> <p><code>&lt;t-lang en&gt;Status&lt;/t-lang&gt;&lt;t-lang fr&gt;Statut&lt;/t-lang&gt;: ${!eventForm.complete ? '&lt;t-lang en&gt;Incomplete&lt;/t-lang&gt;&lt;t-lang fr&gt;Incompl\u00e8te&lt;/t-lang&gt;' : '&lt;t-lang en&gt;Complete&lt;/t-lang&gt;&lt;t-lang fr&gt;Achev\u00e9e&lt;/t-lang&gt;'} ${response ?</code>Start date: ${response.startDatetime}<code>: ''}</code></p>"},{"location":"developer/viewing-forms-and-data/#debugging-templates","title":"debugging templates","text":"<p>To make the dev tool stop on a breakpoint in a Case Definition's template, add the following debugger statement to the content of the template.</p> <pre><code>${(()=&gt;{debugger})()}\n</code></pre> <p></p> <p>When that template loads, the Chrome devtools will pause and you can inspect local variables/functions available and try running them in the console. Note that different templates will have different helper functions and variables available.</p> <p></p>"},{"location":"editor/","title":"Editor Guides","text":""},{"location":"editor/#getting-started","title":"Getting Started","text":"<p>In Tangerine, you start by building your forms (evaluations, tools, or surveys) using the platform\u2019s Editor interface. It is user-friendly and lets you set up the structure of your form and add all your questions using a variety of question types. Once you\u2019re happy with the setup, you can preview your form to see how it looks and make any tweaks if needed. Next, you deploy your app and install it on a mobile device or use it in the Chrome browser. Now, data collection begins. Tablet users can start filling out forms by selecting any of the ones created for their group. Data collectors sync their devices and make the data available on the platform\u2019s backend. A data manager can export it as CSV file ready for reporting integration or direct analysis in Excel.</p> <ul> <li>Create a New Group</li> <li>Create New Form </li> <li>Editing the Form</li> <li>Adding Sections and Questions</li> <li>Different Input Types</li> <li>Location list import</li> <li>Skip Logic</li> <li>Validation</li> <li>Calculated Inputs</li> <li>Deployment</li> <li>Downloading your data</li> <li>User Management</li> </ul>"},{"location":"editor/#advanced-form-programming-guides","title":"Advanced Form Programming Guides","text":"<ul> <li>Local Content Development with Tangerine Preview</li> <li>Renaming Section IDs</li> <li>Dynamic Values in Questions</li> <li>Configuration Guide</li> <li>Custom scripts</li> <li>Content-sets</li> <li>Custom-app</li> <li>Custom Dashboard</li> <li>Globals</li> <li>Password Policy</li> <li>Kiosk Mode</li> <li>Form Versions</li> <li>Reserved words in Tangerine</li> <li>Translations</li> <li>Custom Fonts</li> <li>Tangerine Form Developer's Cookbook</li> </ul>"},{"location":"editor/#case-module","title":"Case Module","text":"<ul> <li>Case Management Data Model</li> <li>Case Data Structure</li> <li>Case Management Group</li> <li>Case Archive</li> <li>Case Module Cookbook</li> <li>Configuring Case functionality</li> <li>Custom Case Reports</li> <li>Get and Set Event Data</li> <li>Workflow for Changing Location</li> <li>Pass Data Between Form</li> <li>Use Respondse Data in Event</li> <li>Device Data Corrections</li> <li>Device Data Corrections Using Issues</li> <li>Prepare Form Logic for Issues</li> </ul>"},{"location":"editor/#starting-points","title":"Starting Points","text":"Role Function Skill Set User Guide Forms Editor Converts surveys into a digitial form using the Tangerine Form Editor and/or Javascript. Web Form Editor, Javascript (For Advanced Functions only) Form Editor Guide Tangerine Academy Data Collector Field Level Data collector, administers surveys, directly handles devices loaded with Tangerine Survey and Data Collection Data Collector Guide Tangerine Academy System Administrator Install and implement the technical side of Tangerine. AWS, SSL, SSH, running script in Terminal, Server/DB Management System Administrator Guide Developer Develop new features, bug fixes Node.js, Angular, CouchDB Developer Guide <p>The starting point for Tangerine is dependent on what your role with the product will be. Are you a Project Manager looking to deploy Tangerine to help you manage data collection in your next project? Are you a Systems Administrator working on the back-end to make sure that Tangerine is operational on your company's technology? Or are you a forms developer, taking the questions for the survey and creating the digital forms in Tangerine, or are you a in the field data collector actually running the surveys? Depending on which of these roles fits will define where you should start. </p> <p>Since Tangerine is an open-source platform, you are welcome to develop off of our code if you wish. Go to the Tangerine Community to see the code or navigate to our Developer Guide.</p>"},{"location":"editor/advanced-form-programming/","title":"Advanced Form Programming Guides","text":"<ul> <li>Local Content Development with Tangerine Preview</li> <li>Renaming Section Ids</li> <li>Dynamic Values of Questions</li> <li>Content-sets</li> <li>Configuration Guide</li> <li>Custom-app</li> <li>Custom scripts</li> <li>Custom  Dashboard</li> <li>Form Versions</li> <li>Globals</li> <li>Password Policy</li> <li>Kiosk Mode</li> <li>Form Versions</li> <li>Reserved words in Tangerine</li> <li>Translations</li> <li>Custom fonts</li> <li>Tangerine Form Developer's Cookbook</li> </ul>"},{"location":"editor/advanced-form-programming/class/","title":"Class module (Teach)","text":""},{"location":"editor/advanced-form-programming/class/#setup","title":"Setup","text":"<p>Add <code>class</code> to the <code>T_MODULES</code> property in config.sh. Create a new group via editor; this takes advantage of the class module which sets important class-related properties and file. If you /must/ use the <code>create-group</code> command, change <code>homeUrl</code> to <code>dashboard</code> or <code>attendance-dashboard</code> and set <code>uploadUnlockedFormReponses =  true</code>. </p> <p>You must also configure the <code>teachProperties</code> object in app-config.json for the Teach group. Below is an example configuration. Make sure to include the student name(s) variable and other variables that you want to populate in form responses under <code>studentRegistrationFields</code>. If the student name variable is not in this list you may see your student listing as empty on the tablet's dashboard</p> <pre><code>\"teachProperties\": {\n    \"units\": [\n      \"Semester 1\",\n      \"Semester 2\",\n      \"Semester 3\",\n      \"Semester 4\"\n    ],\n    \"unitDates\": [\n      {\n        \"name\": \"Semester 1\",\n        \"start\": \"2025-02-15\",\n        \"end\": \"2025-04-23\"\n      },\n      {\n        \"name\": \"Semester 2\",\n        \"start\": \"2025-04-24\",\n        \"end\": \"2025-06-30\"\n      },\n      {\n        \"name\": \"Semester 3\",\n        \"start\": \"2025-07-04\",\n        \"end\": \"2025-09-09\"\n      },\n      {\n        \"name\": \"Semester 4\",\n        \"start\": \"2025-09-11\",\n        \"end\": \"2025-11-17\"\n      }\n    ],\n    \"attendancePrimaryThreshold\": 80,\n    \"attendanceSecondaryThreshold\": 70,\n    \"scoringPrimaryThreshold\": 70,\n    \"scoringSecondaryThreshold\": 60,\n    \"behaviorPrimaryThreshold\": 70,\n    \"behaviorSecondaryThreshold\": 60,\n    \"useAttendanceFeature\": true,\n    \"showAttendanceCalendar\": true,\n    \"studentRegistrationFields\": [\n      \"student_name\",\n      \"student_surname\",\n      \"classId\",\n      \"phone\",\n      \"student_num\"\n    ]\n  },\n  \"useAttendanceFeature\": true,\n</code></pre>"},{"location":"editor/advanced-form-programming/class/#feedback","title":"Feedback","text":"<p>Feedback for each form item (subtask) can be entered using the Settings editor.</p> <p>Feedback is displayed if available on the Student grouping report. The following fields are available: - ${feedback.example} - ${feedback.skill} - ${feedback.assignment}</p> <p>The following code can be used to format feedback on the Student Grouping report:</p> <pre><code>&lt;div class='feedback-assignment'&gt;${feedback.assignment}&lt;/div&gt;\n</code></pre> <pre><code>&lt;div class='feedback-example'&gt;${feedback.example}.&lt;/div&gt;\n</code></pre> <p>Note that the use of these formatting commands are optional.</p> <p>Here is a sample feedback message that uses this formatting:</p> <pre><code>These students are doing really well. Consider framing your feedback to these student as follows: &lt;div class='feedback-example'&gt;${feedback.example}.&lt;/div&gt;\nReflect on these students results: why do you think did these students were particularly successful in ${feedback.skill}.\nWas there a specific ${feedback.skill} strategy or activity you used? Did they already know this content?\nIs there another strategy or activity they could do to extend their ${feedback.skill} skills?\nConsider giving these students supplementary story: &lt;div class='feedback-assignment'&gt;${feedback.assignment}&lt;/div&gt; to read\nand make 3-5 inferential questions for them to answer. You may also consider engaging these students as peer mentors to\nothers as these other students do additional practice.\n</code></pre>"},{"location":"editor/advanced-form-programming/class/#scoring","title":"Scoring","text":"<p>There are 3 options for scoring in Class: - Using a TANGY-TIMED grid - Using a hidden formId+_score field to store the calculated score value when the form is submitted using the on-change javascript - Using a score calculated at report run-time.</p> <p>The dashboard.service populaceTransformedResult function loops through the inputs; for each item type, it calculates the value, score, and max. </p> <p>It also keeps a running tally of the sum of all max values (totalMax).</p> <p>Here are the default rules for each input type: * TANGY-INPUT:    * value: value field    * score: value field    * max: max field * TANGY-RADIO-BUTTONS:    * value: loops through the options and uses the value from the non-empty option    * score: value     * max: Use value of the highest option. * TANGY-CHECKBOXES:    * value: loops through the options and uses the value from the non-empty option    * score: value     * max: Use value of the highest option.</p> <p>For a TANGY-TIMED input, once the value and score have been calculated for each item and populated into an answeredQuestions array, we loop through this array and calculate aggregates for the tangy-form-item.</p> <ul> <li>TANGY-TIMED:</li> <li>value: </li> <li>score: totalCorrect</li> </ul> <p>For tangy form items that use a _score field: Calculate the totalAnswers by subtracting 1 from the item.inputs.length (to account for the _score field)   Use score for totalCorrect and totalAnswers for maxValueAnswer, unless the max value was assigned earlier.</p> <p>Finally, there is support for calculating the score at report-time by looping through answeredQuestions and summing the score and max values.</p>"},{"location":"editor/advanced-form-programming/configuration/","title":"Configuration","text":""},{"location":"editor/advanced-form-programming/configuration/#app-configuration","title":"App Configuration","text":"<p><code>app-config.json</code> should have the following properties defined.</p> <ul> <li><code>homeUrl:string</code>  The default route to load when no route is specified. Think of this as the root url</li> </ul> <p>\"homeURL\": \"case-management\" \u2013 for basic apps or coach \"homeURL\": \"dashboard\" \u2013 for basic teach apps with formative assessment only \"homeURL\": \" attendance-dashboard\" \u2013 attendance-dashboard that uses the SART summary as the main page \"homeURL\": \"case-home\" \u2013 for case module enabled groups.  \"homeURL\": \"custom-app\" \u2013 allows you to create your own app through index.html and components</p> <ul> <li><code>securityPolicy</code> - This is an array of all the combinations of the security policies to be enforced in the app. NOTE: <code>noPassword</code> and <code>password</code> are mutually exclusive. Only one should be provided and not both.<ul> <li><code>password</code></li> <li><code>noPassword</code></li> </ul> </li> <li><code>modules</code> -  This settings controls the modules enabled for this group. In general this setting is the same as that of config.sh but in some situations you may wish to have a particular group be sync2 or teach. <ul> <li><code>class</code> - enables the Teach module</li> <li><code>case</code> - enables the case module</li> <li><code>sync-protocol-2</code> - always use with case enabled. Will enable the interface  for configuring sync2</li> </ul> </li> <li><code>appName</code> - can set a custom app name</li> <li><code>packageName</code> - change the packaage name so that more than one apps can be installed e.g. rg.rti.tangerine.YourName</li> <li><code>columnsOnVisitsTab</code> - enables the display of a text or number column on the Visits tab</li> <li><code>uploadToken</code> - set automatically, the token used by the app. It must be the same as that in config.sh</li> <li><code>languageDirection</code> - can set the default direction of the language in the app. The direction is assosiated with the languge and can be overwritten by the user if they change the lanague</li> <li><code>languageCode</code> - the language code, same as a defined lanaguge in transltaions.json</li> <li><code>customLoginMarkup</code> - allows you to enter some html to show up on the app login screen. You can use this for branding. </li> <li><code>hideProfile</code> - will disable the user profile, usually we use this in conjunctions with centrallyManagedUserProfile</li> <li><code>centrallyManagedUserProfile</code> - makes the app work only with predefined user profiles. The end user needs the user profile ID (last X chars) to login</li> <li><code>uploadUnlockedFormReponses</code> -  instructs the app to upload all results, even those that have not been submited</li> <li><code>goHomeAfterFormSubmit</code> -  will redirect the user to the form listing after they submit a form - does not work well if using summary sections</li> <li><code>kioskMode</code> - enables a link in the top right menu to enter Kiosk Mode</li> <li><code>exitClicks</code> - number of taps on a non-input to exit the kiosk mode - this is to avoid that children interacting with the app can browse away</li> <li><code>teachProperties</code> - contains an array of settings for teach<ul> <li><code>units</code> - the units for grouping of continuous assessment scores and attendance</li> <li><code>unitDates</code> - the unit, same as in units and the start and end dates</li> <li><code>studentRegistrationFields</code> - inputs to be used in results for students. Make sure that here you have at least the student_name, and classId. Failure to include studnet_name will result in an empty listing of students on the app.</li> <li><code>attendancePrimaryThreshold</code> - dashboard threshold for attedndace upper limit</li> <li><code>attendanceSecondaryThreshold</code> - dashboard threshold for attendance lower limit</li> <li><code>scoringPrimaryThreshold</code>  - dashboard threshold for scoring upper limit</li> <li><code>scoringSecondaryThreshold</code> - dashboard threshold for scoring lower limit</li> <li><code>behaviorPrimaryThreshold</code>  - dashboard threshold for behavior upper limit</li> <li><code>behaviorSecondaryThreshold</code> - dashboard threshold for behavior lower limit</li> </ul> </li> </ul> <pre><code>\"teachProperties\": {\n        \"units\": [\"Semester 1\", \"Semester 2\"],\n        \"unitDates\": [\n          {\n            \"name\": \"Semester 1\",\n            \"start\": \"2024-02-15\",\n            \"end\": \"2024-04-23\"\n          },\n          {\n            \"name\": \"Semester 2\",\n            \"start\": \"2024-04-24\",\n            \"end\": \"2024-06-30\"\n          } ],\n        \"attendancePrimaryThreshold\": 80,\n        \"attendanceSecondaryThreshold\": 70,\n        \"scoringPrimaryThreshold\": 70,\n        \"scoringSecondaryThreshold\": 60,\n        \"behaviorPrimaryThreshold\": 90,\n        \"behaviorSecondaryThreshold\": 80,\n        \"useAttendanceFeature\": true,\n      \"studentRegistrationFields\": [\n          \"student_name\",\n        \"student_surname\",\n        \"gender\",\n        \"age\",\n        \"classId\",\n        \"student_num\"\n      ]\n     }\n</code></pre>"},{"location":"editor/advanced-form-programming/content-sets/","title":"Content sets","text":""},{"location":"editor/advanced-form-programming/content-sets/#content-sets","title":"Content Sets","text":"<p>Content Sets are groups of forms and configuration you can use as a template for new group creation. Tangerine already comes with some predefined content sets:</p> <ul> <li>custom-app - is a custom app group starter set</li> <li>default - is the regular Tangerine group</li> <li>teach and attendance - are two versions of a teach set that has been preconfigured.</li> <li>case module and case-module-starter - are two sets that showcase the case module</li> </ul>"},{"location":"editor/advanced-form-programming/content-sets/#anatomy-of-a-content-set","title":"Anatomy of a Content Set","text":""},{"location":"editor/advanced-form-programming/content-sets/#version-1-tangerine-v3130","title":"Version 1 (&lt; Tangerine v3.13.0)","text":"<p>In the root directory of a v1 Content Set, you will find the following: - <code>./app-config.json_example</code> (required) - <code>./forms.json</code> (required)</p>"},{"location":"editor/advanced-form-programming/content-sets/#version-2-tangerine-v3130","title":"Version 2 (&gt; Tangerine v3.13.0)","text":"<p>Starting in Tangerine v3.13.0, the second iteration of Content Sets was launched. In the root directory of a v2 Content Set, you will find the following:</p> <ul> <li><code>./client/</code> (required): The folder containing content that will be deployed to Tablets.</li> <li><code>./client/app-config.defaults.json</code> (required): Defaults to use for <code>app-config.json</code>. For example, a Case Module enabled group would have a <code>\"homeUrl\"</code> property with a value of <code>\"case-home\"</code>.</li> <li><code>./client/forms.json</code> (required)</li> <li><code>./editor/</code> (required): A folder containing assets pertanent to how Editor behaves.</li> <li><code>./editor/index.html</code> (required): The file loaded when displaying the Dashboard in a group's Editor.</li> <li><code>./README.md</code> (suggested)</li> <li><code>./docs/</code> (suggested)</li> </ul>"},{"location":"editor/advanced-form-programming/content-sets/#version-21-tangerine-3150","title":"Version 2.1 (&gt;= Tangerine 3.15.0)","text":"<p>Starting in Tangerine v3.13.0, content sets gained a package.json and build step. The package.json specifies the required libs and scripts for the content set. If the content set uses custom scripts, these scripts are compiled by the included webpack. Note that .gitignore ignores the compiled code - client/custom-scripts.js - to avoid conflicts.</p> <p>To install the 2.1 content set - instead of npm install, run <code>npm run install-server</code>.</p> <p>Be sure to update any cron jobs to include the new build commands if they are using content set 2.1:</p> <p><code>git pull npm run install-server npm build</code></p> <p>If using Content set 2, this build process is not necessary. However, it is an advantage for cs2 users to upgrade to be able to pin the webpack version in packagejson and also to not have the huge custom-scripts file.</p>"},{"location":"editor/advanced-form-programming/content-sets/#creating-a-new-content-set","title":"Creating a new Content Set","text":"<p>Create a new content set by copying a group's content into the content-sets folder. You have to update the app-config.json file and rename it to app-config-default.json. In this file, if using sync1, you must update the <code>uploadToken</code> and put the correct <code>homeUrl</code> for your app. Copy this folder under the content-sets folder</p>"},{"location":"editor/advanced-form-programming/content-sets/#enable-content-set-dropdown-in-new-group-creation","title":"Enable content set dropdown in new group creation","text":"<p>You can configure a drop down during group creation to allow you to select a pre-configured content set with it's forms. To do this rename the file <code>content-sets-example.json</code> to <code>content-sets.json</code> then open the file and adjust the id and labels. The id must correspond to your content-set folder name. In the example below I have enabled the default (regular group) and the teach content-sets</p> <pre><code>[\n    {\n        \"id\": \"default\",\n        \"label\": \"Default content set\"\n    },\n    {\n        \"id\": \"teach\",\n        \"label\": \"Teach\"\n    }\n]\n</code></pre> <p>This will result in having a drop down in the group creation</p> <p>Warning</p> <p>Having this configuration means that only the user1 account should create new groups. For regular Tangerine groups, make sure that the uploadToken in the app-config-default.json file for the content set is correctly set. </p> <p></p>"},{"location":"editor/advanced-form-programming/content-sets/#importing-a-content-set-into-tangerine","title":"Importing a Content Set into Tangerine","text":"<p>New group set: - git clone tangerine starter repo - Modify content as needed - Push to Git - On server instance, setup GH deploy key by navigating to your Repository on Github and click on <code>Settings -&gt; Deploy keys -&gt; Add deploy key</code> and paste your Docker instances /root/.ssh/id_rsa.pub in the key contents, enable \"Allow write access\" and save. Run <code>docker exec tangerine create-group \"New Group A\" https://github.com/id/tangerine-content.git</code> using the cli - Add crontab entry that uses the non-pub key to do the pull, npm run install-server, npm run build.</p>"},{"location":"editor/advanced-form-programming/custom-apps/","title":"Custom Apps","text":"<p>The easiest way to start with a custom app is to create a group using the custom-app content set. There is a real custom app available here: https://github.com/ICTatRTI/SE-tools</p> <p>Custom apps allow you to customize the interface and tailer it to your needs. You can use a custom app to control not only the visual aspect of your app, but also which forms are shown to the user and when. This can be done with logic conditions in your custom app</p>"},{"location":"editor/advanced-form-programming/custom-apps/#create-a-group-with-pre-build-custom-app","title":"Create a group with pre-build custom app","text":"<pre><code>docker exec -it tangerine create-group \"My custom app\" custom-app\n</code></pre> <p>You can also clone directly suing the git repository for Self-Administered EGRA and EGMA</p> <pre><code>docker exec -it tangerine create-group \"My custom app\" https://github.com/ICTatRTI/SE-tools.git\n</code></pre>"},{"location":"editor/advanced-form-programming/custom-apps/#creating-a-custom-app","title":"Creating a Custom App","text":"<p>To develop your own custom app, you can use the prebuild custom-app content set which provides scaffolding for your new app.</p> <pre><code>cd tangerine/content-sets\ncp -r custom-app my-app\ncp ../translations/* my-app/client/\ncd my-app\ngit init\ngit add .\ngit commit -m \"First.\"\ngit branch -M main\ngit remote add origin &lt;your apps origin&gt; \ngit push -u origin main\nnpm install\nnpm start\n</code></pre>"},{"location":"editor/advanced-form-programming/custom-apps/#custom-app-examples","title":"Custom app Examples","text":"<p>Tangerine for evaluations using sign language.</p> <p></p> <p>Tangerine Self-Administered EGMA</p> <p></p> <p>Custom app with revamped form listing. </p> <p></p>"},{"location":"editor/advanced-form-programming/custom-dashboard/","title":"Custom Dashboard in Tangerine's Web Interface","text":"<p>Data Managers can create custom dashboards in Tangerine's web interface. These dashboards can be used to display data from multiple forms in a single view. This is useful for monitoring data collection progress, or for displaying data in a way that is more useful than the default form views.</p> <p>Example Dashboards</p> <p></p>"},{"location":"editor/advanced-form-programming/custom-dashboard/#accessing-mysql-data-in-a-custom-dashboard","title":"Accessing MySQL Data in a Custom Dashboard","text":"<p>The code below provides and example of how to run the Tangerine APIs to get MySQL data in a custom dashboard. This code is written in JavaScript and uses the <code>fetch</code> API to make the request to the Tangerine server. The code also uses the <code>localStorage</code> to get the token from the browser's local storage which only works from within the Tangerine web interface for users who have permission.</p> <pre><code>try {\n      const appConfig = await window.T.appConfig.getAppConfig();\n      this.serverUrl = appConfig.serverUrl;\n      this.groupId = appConfig.groupId\n      this.formId = appConfig.formId\n    } catch (error) {\n      console.error('Error: missing serverUrl in appConfig', error);\n    }\n\n    /*\n    * The shape of the response is:\n    * results[0]: rows\n    * results[1]: headers\n    */\n    let results = [];\n    try {\n      const token = localStorage.getItem('token');\n      const headers = {\n        'Access-Control-Allow-Credentials': 'true',\n        'authorization': token,\n        'Content-Type': 'application/json; charset=utf-8'\n      };\n\n      const api = `mysql-api/get-table?groupId=${this.groupId}&amp;formId=${this.formId}`;\n      const response = await fetch(`${this.serverUrl}${api}`, {\n        method: 'GET',\n        headers: headers\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      results = await response.json();\n    } catch (error) {\n      // if this is localhost, we are in development mode and we can load the csv file directly\n      if (window.location.hostname === 'localhost') {\n        results = loadTestData();\n      } else {\n        console.error('Error fetching the mysql data:', error);\n      }\n    }\n</code></pre>"},{"location":"editor/advanced-form-programming/custom-fonts/","title":"Adding custom fonts to your forms","text":"<p>You may be in a situation where you want to add a custom fonts to your form to make things easier for the assessor or to cater for situation when the source form is not in UTF format. There are two ways you can use custom fonts in Tangerine</p> <ul> <li>Apply custom fonts in <code>custom-styles.css</code> file in your group's client folder (if you have access to the file system)</li> <li>Apply custom scripts in your form\u2019s on-open event to load the font and use them in Advanced tab on the question input edit screen</li> </ul> <p>Note</p> <p>Tangerine renders automatically all UTF-8 font. If you are using a non UTF compatible font you may need to apply a custom font solution or convert your source document from non UTF font to a UTF font. </p>"},{"location":"editor/advanced-form-programming/custom-fonts/#add-custom-font-to-some-form-inputs","title":"Add custom font to some form inputs","text":"<p>Most of the time you will not have access to the custom-styles.css file and you have to apply a different solution. Here we use custom fonts in 3 steps. </p> <ul> <li>Upload the font file to you Media Library folder in group</li> <li>Add the code in the form's on-open event to load the custom font in that form</li> <li>Add custom style in your input to instruct Tangerine to style this input using the font</li> </ul> <p>Open the Media Library and upload your font file. In this example we use a file <code>nuer.woff</code>. The extension of the file may differ depending on your source.</p> <p>You need to customize those lines of code and add them to the on-open of the form:</p> <pre><code>var newStyle = document.createElement('style');\nnewStyle.appendChild(document.createTextNode(\n`@font-face {font-family: nuer; src: url('assets/media/nuer.woff) format('woff');}`));\ndocument.head.appendChild(newStyle);\n</code></pre> <p>In the above we map the nuer font to the file the file <code>nuer.woff</code> already uploaded in the media library. Then we also indicate the format <code>format('woff')</code> - you can update this to fit your font file format.</p> <p>Now open your form and expand the Advanced settings-&gt;on-open </p> <p></p> <p>Now in your form you'd have to add custom style for each input. There are two main code snippets that you can use. One is for an HTML containers and grids and the other for inputs/radio buttons/checkboxes.</p> <ul> <li>HTML Containers/Grids use:</li> </ul> <p><code>font-family: 'nuer' !important;</code> - update the nuer to the value you used for mapping in the first line of the script in the on-change event.</p> <ul> <li>Inputs/Radio-buttons/Checkboxes</li> </ul> <p><code>--paper-font-common-base_-_font-family: 'nuer' !important;</code> - again here update the nuer to the correct value</p> <p>Now add the corresponding code to your input's Advanced-&gt;CSS Style on the interface.</p> <p></p>"},{"location":"editor/advanced-form-programming/custom-fonts/#add-custom-font-using-custom-stylescss-file","title":"Add custom font using custom-styles.css file","text":"<p>under your data/groups/group-GROUP_ID/client folder you will see that there is a file <code>custom-styles.css</code> custom styles can be added to this file and those will be loaded automatically in your all forms in that group. We use this to customize the interface in the Self-Administered EGRA/EGMA tools </p> <p>For a full file go to Custom-styles.css</p> <p>All interface customizations in this file are loaded automatically and apply to all forms in the group. From here you can control not only the form\u2019s font but also the buttons style, background, and other adjustments. </p> <pre><code>@font-face {\n  font-family: Andika;\n  src: url('./media/Andika-Regular.ttf');\n}\n\ntangy-form-item {\n  --paper-font-common-base_-_font-family: Andika;\n  --tangy-form-item--background-color: transparent;\n  /* all nav buttons */\n  --fullscreen-nav--color: transparent;\n  --fullscreen-nav--background-color: #ffbf09 !important;\n  --fullscreen-nav--background-size: cover;\n  --fullscreen-nav--height: 6.5rem;\n  --fullscreen-nav--width: 6.5rem;\n  --fullscreen-nav--border-radius: 0.5rem;\n  --fullscreen-nav--padding: 0.1rem 0.75rem;\n  --fullscreen-nav--border: #ffbf09 solid 0.125rem;\n  /* back button  \n  --fullscreen-nav-align-bottom--back--display: none; */\n --fullscreen-nav-align-bottom--back---back-transform: scaleX(-1); \n  --fullscreen-nav-align-bottom--back--background-image: url('./assets/images/back.png');\n  --fullscreen-nav-align-bottom--back--bottom: 20px;\n  --fullscreen-nav-align-bottom--back--right: 10px;\n  /* next button */\n  --fullscreen-nav-align-bottom--next--background-image: url('./assets/images/next.svg');\n  --fullscreen-nav-align-bottom--next--bottom: 20px;\n  --fullscreen-nav-align-bottom--next--right: 10px;\n  /* complete buton */\n  --fullscreen-nav-align-bottom--complete--background-image: url('./assets/images/next.svg');\n  --fullscreen-nav-align-bottom--complete--bottom: 20px;\n  --fullscreen-nav-align-bottom--complete--right: 10px;\n}\n\ntangy-keyboard-input {\n  --bottom-spacer-height: 130px;\n}\n</code></pre>"},{"location":"editor/advanced-form-programming/custom-scripts/","title":"Custom scripts","text":""},{"location":"editor/advanced-form-programming/custom-scripts/#location-of-custom-scripts","title":"Location of custom scripts","text":"<p>Tangerine offers several places to insert custom script</p> <ul> <li>Form level - the form's on-change, on-open, on-submit, and on-resubmit events can be used to manipulate the input, load other libraries, fonts or custom functions.</li> <li>Section level - like form level events, we can use the section level on-change and on-open events to call custom code</li> <li>custom-scripts.js - this file on the file system, is defined per group, and can be used to insert custom code. All functions defined here are available to the form and section events. </li> <li>before-custom-updates.js - this file on the file system, is defined per group, and can be used to insert custom code which executes before an app update</li> <li>after-custom-updates.js - this file on the file system, is defined per group, and can be used to insert custom code which execute after an app update</li> </ul>"},{"location":"editor/advanced-form-programming/custom-scripts/#examples-custom-scriptsjs","title":"Examples Custom-scripts.js","text":"<p>Note</p> <p>You can define those functions in your form's on-open event and use them across that form.</p> <p>Set the value of a radio button. When you define this function in custom-scripts file you can call it from your forms as <code>window.setValueOfRadioButtons(inputs.MyInput, newValue)</code></p> <pre><code>window.setValueOfRadioButtons = (input, value) =&gt; {\n  input.value = input.value.map(button =&gt; {\n    return{\n      ...button,\n      value: button.name === value ? 'on' : ''\n    }\n  })\n}\n</code></pre> <p>Generate a UUID function. Use in on-change or on-open events like so <code>inputs.myInput.value = window.uuid()</code></p> <pre><code>window.uuid = function() {\n  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =&gt;\n    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] &amp; 15 &gt;&gt; c / 4).toString(16)\n  );\n}\n</code></pre> <p>Generate a today\u2019s date and time that you can set a Date or Time input to. Use in on-change or on-open events like so <code>inputs.myDateInput.value = window.todayDate()</code> or <code>inputs.myTimeInput.value = window.todayTime()</code></p> <pre><code>window.todayDate = (x) =&gt; {return new Date().toISOString().split('T')[0]}\nwindow.todayTime = (x) =&gt; {return new Date().toTimeString().substring(0,5) }\n</code></pre>"},{"location":"editor/advanced-form-programming/dynamic-values/","title":"Dynamic Values in Questions","text":"<p>Sometimes you may want to include the respondents name in a next question label. In other words, use the response value of one question for the label of another. </p> <p></p> <p>If you are updating the label for inputs in the same section as the source question as above use the <code>on-change</code> event. For inputs that are on a next section use this next section <code>on-open</code> event</p>"},{"location":"editor/advanced-form-programming/dynamic-values/#updating-the-question-label-for-inputs-text-number-date","title":"Updating the question label for inputs (text, number, date)","text":"<p>This examples inserts the name stored in variable st_name in the label of the question with variable age.</p> <pre><code> inputs.age.label = `How old are you ${getValue('st_name')}?`\n</code></pre>"},{"location":"editor/advanced-form-programming/dynamic-values/#updating-the-question-label-for-radio-buttons-and-checkboxes","title":"Updating the question label for radio-buttons and checkboxes","text":"<p>This examples inserts the name stored in variable st_name in the label of the question with variable reading.</p> <pre><code>inputs.reading.$.label.innerText = `Do you like reading ${getValue('st_name')}?`\n</code></pre>"},{"location":"editor/advanced-form-programming/dynamic-values/#examples","title":"Examples","text":"<p>This example uses questions in the same section and thus with the on-change event. If the question whose labels are on a next section use this next section's on-open event with the same code.</p> <p></p>"},{"location":"editor/advanced-form-programming/form-versions/","title":"Form Versions","text":"<p>Throughout the lifetime of a form, many versions of a form may be deployed. When reviewing form responses collected on a past version of a form, it's important to open that form response using the version of the form it was collected on. When filling out a form response, it helps to think of the form response as a clear plastic sheet that you are writing on over the paper copy of the form. If the questions on that underlying physical form are removed, moved, or new questions are added, the clear plastic sheet you filled out previous form responses on no longer overlays correctly on the updated paper copy of that form.  The consequence of not using Form Versions on a form that changes over time is that when reviewing past data, if 1a question was removed in a future version of a form, it will appear that data collected in the past are now missing that data. There are other scenarios where a form version should be created which we will cover in later sections, but first a simple example.</p>"},{"location":"editor/advanced-form-programming/form-versions/#releasing-updates-to-existing-forms","title":"Releasing updates to existing forms","text":""},{"location":"editor/advanced-form-programming/form-versions/#gotchas","title":"Gotchas","text":"<ul> <li>If you remove an input from an item or move that input to another item, when a user resumes a form response that was created with the prior version, content for that input will appear to have dissappeared.</li> <li>If you add remove an item from a form, when users resume form responses created on with the prior version, it will appear they have lost data since the item has been removed.</li> </ul>"},{"location":"editor/advanced-form-programming/form-versions/#first-release","title":"First Release","text":"<p><code>forms.json</code>: <pre><code>[\n  {\n    \"id\" : \"form-x\",\n    \"title\" : \"Form X\",\n    \"src\" : \"./assets/form-x/form.html\",\n  }\n]\n</code></pre></p> <p><code>./assets/form-x/form.html</code>: <pre><code>&lt;tangy-form id=\"form-x\" title=\"Form X\"&gt;\n  &lt;tangy-input label=\"Question A\" name=\"a\"&gt;&lt;/tangy-input&gt;\n  &lt;tangy-input label=\"Question B\" name=\"b\"&gt;&lt;/tangy-input&gt;\n&lt;/tangy-form&gt;\n</code></pre></p>"},{"location":"editor/advanced-form-programming/form-versions/#second-release","title":"Second Release","text":"<pre><code>{\n  \"id\" : \"form-x\",\n  \"title\" : \"Form X\",\n  \"src\" : \"./assets/form-x/form.html\",\n  \"formVersionId\": \"2\",\n  \"formVersions\": [\n    {\n      \"id\": \"1\",\n      \"src\" : \"./assets/form-x/1.html\"\n    },\n    {\n      \"id\": \"2\",\n      \"src\" : \"./assets/form-x/2.html\"\n    }\n  ]\n}\n</code></pre> <p><code>./assets/form-x/form.html</code>: <pre><code>&lt;tangy-form id=\"form-x\" title=\"Form X\"&gt;\n  &lt;tangy-input label=\"Question A\" name=\"a\"&gt;&lt;/tangy-input&gt;\n&lt;/tangy-form&gt;\n</code></pre></p> <p><code>./assets/form-x/1.html</code>: <pre><code>&lt;tangy-form id=\"form-x\" title=\"Form X\"&gt;\n  &lt;tangy-input label=\"Question A\" name=\"a\"&gt;&lt;/tangy-input&gt;\n  &lt;tangy-input label=\"Question B\" name=\"b\"&gt;&lt;/tangy-input&gt;\n&lt;/tangy-form&gt;\n</code></pre></p> <p><code>./assets/form-x/2.html</code>: <pre><code>&lt;tangy-form id=\"form-x\" title=\"Form X\"&gt;\n  &lt;tangy-input label=\"Question A\" name=\"a\"&gt;&lt;/tangy-input&gt;\n&lt;/tangy-form&gt;\n</code></pre></p>"},{"location":"editor/advanced-form-programming/form-versions/#third-release","title":"Third Release","text":"<pre><code>{\n  \"id\" : \"form-x\",\n  \"title\" : \"Form X\",\n  \"src\" : \"./assets/form-x/form.html\",\n  \"formVersionId\": \"3\",\n  \"formVersions\": [\n    {\n      \"id\": \"1\",\n      \"src\" : \"./assets/form-x/1.html\"\n    },\n    {\n      \"id\": \"2\",\n      \"src\" : \"./assets/form-x/2.html\"\n    },\n    {\n      \"id\": \"3\",\n      \"src\" : \"./assets/form-x/3.html\"\n    }\n  ]\n}\n</code></pre> <p><code>./assets/form-x/form.html</code>: <pre><code>&lt;tangy-form id=\"form-x\" title=\"Form X\"&gt;\n  &lt;tangy-input label=\"Question A\" name=\"a\"&gt;&lt;/tangy-input&gt;\n  &lt;tangy-input label=\"Question C\" name=\"c\"&gt;&lt;/tangy-input&gt;\n&lt;/tangy-form&gt;\n</code></pre></p> <p><code>./assets/form-x/1.html</code>: <pre><code>&lt;tangy-form id=\"form-x\" title=\"Form X\"&gt;\n  &lt;tangy-input label=\"Question A\" name=\"a\"&gt;&lt;/tangy-input&gt;\n  &lt;tangy-input label=\"Question B\" name=\"b\"&gt;&lt;/tangy-input&gt;\n&lt;/tangy-form&gt;\n</code></pre></p> <p><code>./assets/form-x/2.html</code>: <pre><code>&lt;tangy-form id=\"form-x\" title=\"Form X\"&gt;\n  &lt;tangy-input label=\"Question A\" name=\"a\"&gt;&lt;/tangy-input&gt;\n&lt;/tangy-form&gt;\n</code></pre></p> <p><code>./assets/form-x/3.html</code>: <pre><code>&lt;tangy-form id=\"form-x\" title=\"Form X\"&gt;\n  &lt;tangy-input label=\"Question A\" name=\"a\"&gt;&lt;/tangy-input&gt;\n  &lt;tangy-input label=\"Question C\" name=\"c\"&gt;&lt;/tangy-input&gt;\n&lt;/tangy-form&gt;\n</code></pre></p>"},{"location":"editor/advanced-form-programming/form-versions/#when-should-i-create-a-new-form-version","title":"When should I create a new Form Version?","text":"<p>Situations when a new Form Version should be created include:</p> <ol> <li>New question</li> <li>Removed question</li> <li>Options for a question added or removed.</li> <li>New page</li> <li>Removed page</li> <li>Reordered pages</li> </ol> <p>Situations when a new Form Version can be skipped: 1. Label of a question has changed. 2. Variable marked as required.</p>"},{"location":"editor/advanced-form-programming/form-versions/#future-tooling-proposals","title":"Future Tooling proposals","text":"<p>Proposals for tools to help in managing form versions:</p> <ul> <li>Linter idea - cli that checks if 2 form versions share the same path - makes sure there are no duplicate revision src paths. Check for dupes in formVersion.id and formVersion.src.</li> <li>start new dir in tangerine dir called <code>cli</code> - this would be the first subcommand of a new cli. This is different from the server cli. tangerine-preview is another command that could be integrated into this new cli. Example - <code>generate-new-form</code> creates the scaffolding for a new form and could implement/facilitate the revisions feature.</li> <li>Version incrementor - used for releases</li> </ul> <p>Proposed Testing version support:</p> <p>What are the different use-cases that the software must implement to fully support versions? The following list will list each case and the correct source for the form:</p> <ul> <li>Using the tangerine-preview app and must use the most recent version: formInfo.src</li> <li>Viewing a record created in a legacy group with no formVersionId and no formVersions: formInfo.src</li> <li>viewing a record created in a legacy group with no formVersionId but does have formVersions using the legacyOriginal flag: legacyVersion.src</li> <li>viewing a record created in a legacy group with no formVersionId but does have formVersions without legacyOriginal flag: lawd have mercy! formInfo.src</li> <li>viewing a record created in a new group using formVersionId and has formVersions: formVersion.src</li> <li>viewing a record created in a new group using formVersionId and does not have formVersions     : formInfo.src</li> </ul>"},{"location":"editor/advanced-form-programming/globals/","title":"Global Variables","text":"<p>Tangerine-specific variables are available in the <code>T</code> global variable. These are exposed in app.component.ts. Example:</p> <pre><code>this.window.T = {\n      form: {\n        Get: Get\n      },\n      router,\n      http,\n      user: userService,\n      lockBox: lockBoxService,\n      syncing: syncingService,\n      syncCouchdbService: syncCouchdbService, \n      sync: syncService,\n      appConfig: appConfigService,\n      update: updateService,\n      search: searchService,\n      device: deviceService,\n      tangyFormsInfo: tangyFormsInfoService,\n      tangyForms: tangyFormService,\n      formTypes: formTypesService,\n      case: caseService,\n      cases: casesService,\n      caseDefinition: caseDefinitionsService,\n      languages: languagesService,\n      variable: variableService,\n      classForm: classFormService,\n      classDashboard: dashboardService,\n      translate: window['t']\n    }\n</code></pre> <p>Additional T properties may be added in other parts of the Tangerine codebase. </p>"},{"location":"editor/advanced-form-programming/globals/#usage","title":"Usage","text":"<p>Examples of T global usage are throughout these docs, but here are a few:</p> <p>To load and query the client database with options to get a specific revision:</p> <pre><code>const db = await T.user.getUserDatabase()\ndb.get('foo',{rev:'4-uuid', latest:false})\n</code></pre> <p>When writing queries or organizing the javascript logic to fetch the results, use the globally-exposed T.form.Get function to get the value of inputs; this will save you from having to wrote deeply nested code (<code>doc.items[0].inputs[3].value[0].value</code>)</p> <p><code>T.form.Get(doc, 'consent')</code></p> <pre><code>// 3 ingredients are needed to set an Event Variable.\nconst eventId = '123'\nconst variableName = 'foo'\nconst variableValue = 'bar'\n\n// Set Event Variable.\nT.case.setVariable(`${eventId}-${variableName}`, variableValue)\n\n// Get Event Variable.\nconst shouldBeValueOfBar = T.case.getVariable(`${eventId}-${variableName}`)\n</code></pre> <p>There is an older document, Tangerine globals, that describes some of the functions that are now attached to the <code>T</code> global.</p>"},{"location":"editor/advanced-form-programming/kiosk-or-fullscreen-modes/","title":"Kiosk or Fullscreen modes","text":""},{"location":"editor/advanced-form-programming/kiosk-or-fullscreen-modes/#kiosk","title":"Kiosk","text":"<p>Kiosk mode is enabled app-wide by adding <code>\"kioskMode\": true</code> to the group's app-config.json file. This enables the 'Kiosk Mode' item in the menu.  Clicking this item sets kioskModeEnabled to true and removes the top toolbar. </p> <p>The app-config.json property - <code>exitClicks</code> - enables admin to set number of clicks to exit kioskMode. Default is 5. User must click the top of the screen 5 times within 2 seconds.</p>"},{"location":"editor/advanced-form-programming/kiosk-or-fullscreen-modes/#fullscreen-mode","title":"Fullscreen mode","text":"<p>Fullscreen mode is activated at the form level by setting <code>\"fullscreen\": true</code> in tangy-form editor. The current code employs a workaround to deal with a bug in APK's that prevents exit fullscreen from working  by using a listener for 'enter-fullscreen' or 'exit-fullscreen' to set this.kioskModeEnabled = true or false, which removes the top bar.</p>"},{"location":"editor/advanced-form-programming/local-content-development/","title":"Local content development","text":""},{"location":"editor/advanced-form-programming/local-content-development/#local-content-development-with-tangerine-preview","title":"Local content development with Tangerine Preview","text":"<p>Tangerine Preview is a command line tool for previewing the Tangerine content you are working on your local computer. It work on Windows, Mac, and Linux. </p>"},{"location":"editor/advanced-form-programming/local-content-development/#install","title":"Install","text":"<p>Before you install <code>tangerine-preview</code>, make sure to install node.js. </p> <p>If you are on macOS, you will need to set permissions to allow for global installs by running the following command. <pre><code>sudo chown -R `whoami` /usr/local/lib/node_modules\n</code></pre></p> <p>For all platforms, open a command line terminal and run Tangerine Preview install command. <pre><code>npm install -g tangerine-preview\n</code></pre></p>"},{"location":"editor/advanced-form-programming/local-content-development/#preview-your-content","title":"Preview your content","text":"<p>Open a command prompt, change directory to your content that you would like to preview, then run the <code>tangerine-preview</code> command.</p> <pre><code>cd your-project\ntangerine-preview\n</code></pre> <p>Lastly, open Google Chrome to http://localhost:3000</p> <p>As you make content changes, they will be synced to the app. Reload your web browser and you'll see the changes.</p>"},{"location":"editor/advanced-form-programming/local-content-development/#update-tangerine-preview","title":"Update <code>tangerine-preview</code>","text":"<p>When new releases come out for tangerine, <code>tangerine-preview</code> will also be updated. To update, open a command prompt and run the install command again.</p> <p>If you have installed <code>tangerine-preview</code> in the past, you'll need to uninstall it first.</p> <pre><code>npm install -g tangerine-preview\n</code></pre> <p>The following will install tangerine-preview at the most recent version.</p> <pre><code>npm install -g tangerine-preview\n</code></pre> <p>If you need a specific version of tangerine-preview, you can specify the version when installing. For example...</p> <pre><code>npm install -g tangerine-preview@3.18.5\n</code></pre>"},{"location":"editor/advanced-form-programming/local-content-development/#check-your-currently-install-version","title":"Check your currently install version","text":"<pre><code>npm list -g tangerine-preview\n</code></pre>"},{"location":"editor/advanced-form-programming/local-content-development/#set-up-vs-code-with-syntax-highlighting-for-on-open-on-change-etc","title":"Set up VS Code with Syntax Highlighting for <code>on-open</code>, <code>on-change</code>, etc.","text":"<p>Ideally we would have a VS Code plugin for you to install. Until then, this is our workaround. If you are interested in helping with the development of a VS Code plugin, feel free to reach out to us via the issue queue.</p>"},{"location":"editor/advanced-form-programming/local-content-development/#step-1","title":"Step 1","text":"<p>Open Visual Studio configuration file. If you have the VS Code CLI installed, run the following in a terminal. <pre><code>code /Applications/Visual\\ Studio\\ Code.app/Contents/Resources/app/extensions/html/syntaxes/html.tmLanguage.json\n</code></pre></p>"},{"location":"editor/advanced-form-programming/local-content-development/#step-2","title":"Step 2","text":"<p>Find <code>on(s(c</code> and replace with <code>on-open|on-change|on-submit|skip-if|hide-if|dont-skip-if|disable-if|valid-if|discrepancy-if|warn-if|on(s(c</code>.</p> <p></p>"},{"location":"editor/advanced-form-programming/local-content-development/#step-3","title":"Step 3","text":"<p>Restart Visual Studio.</p>"},{"location":"editor/advanced-form-programming/password-policy/","title":"Password Policy","text":"<p>The default password policy is in config.defaults.sh. Although you can change it, it is recommended that you have a strong password policy. </p> <p>Relevant variables: - T_PASSWORD_POLICY - The policy, coded in the form of a regular expression. - T_PASSWORD_RECIPE - Description of the policy, to enable user to create a password that will pass the policy. </p> <p>Ideally a password policy should include the following specifications: - 8 characters or more - at least one upper case letters - at least one lower case letter - at least one special character - at least one numeral</p> <p>Each group can have a unique password policy. When a group is created, the default policy and recipe from config.sh are copied over to the passwordPolicy and passwordRecipe variables in app-config.json.</p> <p>For some groups, it may be more useful to have a simpler password policy on client than on editor. Here is an example:</p> <ul> <li>\"passwordPolicy\": \"(?=.\\d)(?=.[a-z])(?=.*[A-Z]).{8,}\",</li> <li>\"passwordRecipe\": \"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\",</li> </ul> <p>Editor on the server uses the T_PASSWORD_POLICY and T_PASSWORD_RECIPE variables.</p>"},{"location":"editor/advanced-form-programming/password-policy/#tips","title":"Tips","text":"<p>If the server's shell has problems interpreting any of the special characters when loading T_PASSWORD_POLICY from config.sh, you may need to add an escape <code>\\</code> before the special character.</p> <p>The site https://www.regextester.com/ has been very helpful in testing out password policies. </p>"},{"location":"editor/advanced-form-programming/rename-section-ids/","title":"Renaming Section Ids","text":""},{"location":"editor/advanced-form-programming/rename-section-ids/#custom-section-ids","title":"Custom section IDs","text":"<p>Sometimes skip logic on form level (when skipping entire sections) becomes unreadable and difficult to maintain. This is because we use section IDs in skip logic statements. To make this easier to read for all users, there's the option to rename a section ID. </p> <p>Warning</p> <p>An incorrect modification of the HTML or a non-compliant section ID may results in loss of your form. Always create a copy of your form before you start doing this. </p> <p>To make skip logic more readable, it is better to use custom section IDs - those IDs are used in skip logic.</p> <p>Rename a section ID in Tangerine is done by going into the HTML Editor and searching for tangy-form-item id=\".....\" the part in quotations is the ID of the section </p> <p></p> <p>Use only standard Latin characters, no accented words or special characters. We recommend to always start the section with \"section_\" and add some short descriptive words to it. For example, \u201csection_orf_g1\u201d or \u201csection_reading_comp_g5\u201d Section ids cannot start with a number</p> <p>Here's a list of rules to follow when renaming section IDs. </p> <p>Rules</p> <ul> <li>Letters A-Z, and a-z, Digits from 0-9,  the underscore \"_\" character</li> <li>No digits at the beginning of the ID</li> <li>No spaces or special characters</li> <li>Always start with \"section_\"</li> </ul> <p>Some example section IDs </p> <ul> <li>section_subtraction_1</li> <li>section_subtraction_1</li> <li>section_interview_ht</li> <li>section_location</li> </ul>"},{"location":"editor/advanced-form-programming/rename-section-ids/#renaming-a-section-id-video","title":"Renaming a section ID video","text":""},{"location":"editor/advanced-form-programming/reserved-words/","title":"Reserved words in Tangerine","text":"<p>The following words should not be used as field names in Tangerine because they will cause clashes with mysql export and other features: - buildChannel - buildId - caseDefinitionId - caseId - caseRoleId - caseEventId - collection - complete - dbRevision - deviceId - estimate - eventformid - formID_sanitized - groupId - inactive - participantId - required - startDate - startUnixtime - type - uploadDatetime</p>"},{"location":"editor/advanced-form-programming/translations/","title":"Translations","text":"<p>There are two types of translations in Tangerine, Application Translations and Content Translations. Applications Translations are translations on Tangerine User Interface such as the \"next\" button on a form, or the \"Sync\" menu item in the top level tablet menu. Content Translations are the translations on forms such as the \"label\" and \"hint text\" of a question. The method of providing translations are different for the two.</p>"},{"location":"editor/advanced-form-programming/translations/#content-translations","title":"Content Translations","text":"<p>Translations for specific languages are embedded in content, thus portable and specific to that content. The <code>&lt;t-lang&gt;</code> component (https://github.com/ICTatRTI/translation-web-component) is used to detect the language assigned to the HTML doc. In the following example, the label on the <code>hello</code> input will be \"Hello\" if English is set as the language, \"Bonjour\" if French is selected as the language.</p> <pre><code>    &lt;tangy-input \n        name=\"hello\"\n        label=\"\n            &lt;t-lang en&gt;Hello&lt;/t-lang&gt;\n            &lt;t-lang fr&gt;Bonjour&lt;/t-lang&gt;\n        \"\n    &gt;\n    &lt;/tangy-input&gt;\n</code></pre>"},{"location":"editor/advanced-form-programming/translations/#application-translations","title":"Application Translations","text":"<p>By default, when you create a new Group in Tangerine, a set of default Application Translations are provided. Currently that includes English, French, Jordanian, Khmer, and Russian. When deploying, these languages are selectable on a per tablet basis under the Tangerine Settings menu.</p> <p>If you would like to add or modify translations for your group, currently we would recommend setting up your group with a Github Integration to allow editing of the content of your group's content. In your group's content folder you will find two types of files, the list of translations in <code>translations.json</code>, and then a file per translation such as <code>translation.fr.json</code> for French, <code>translations.ru.json</code> for Russian, etc. By adding to, or removing, or modifying entries in <code>translations.json</code>, this will modify what translations are available for a tablet user to select in settings. </p> <p>See the default <code>translations.json</code> file here and find the other default translation files here.</p> <p>If you want to include a new language in your installation create the language file and add the entry for this language in the translations.json file. Place those in the translations folder of your installation and then execute translations-update command from within the container to copy the new files in all groups</p>"},{"location":"editor/case-module/","title":"Case Module","text":"<p>Case Module allows us to define Case Definitions for different purposes such as following a participant in a drug trial over the course of many events, where each event may require many forms to be filled out. In order to create and find cases, you will need to configure the <code>\"case-home\"</code> as the <code>\"homeUrl\"</code> value in <code>app-config.json</code>.</p>"},{"location":"editor/case-module/#case-structure-in-tangerine","title":"Case Structure in Tangerine","text":"<p>Case Management in Tangerine can be used to model highly complex workflows for longitudinal data collection. </p> <ul> <li>Case: The highest-level subject of your study (e.g., School, Teacher, or box of textbooks).</li> <li>Event: Touchpoints in your study. Used to organize forms and model business processes (e.g., Annual Census or Classroom Observation)</li> <li>Form: Data to be collected within a touchpoint OR a business process that executes actions on the case)</li> <li>Participant: Individual subjects within your case that you want to collect data for. (e.g., Teacher, Classroom, or School)</li> </ul> <p></p>"},{"location":"editor/case-module/#case-interface","title":"Case Interface","text":"<p>The case home screen shows a listing of cases. Allows for search based on pre-defined varaibles. Gives access to the Schedule and Custom Reports</p> <p></p>"},{"location":"editor/case-module/#case-re-identification-and-events","title":"Case Re-Identification and Events","text":"<p>After selecting a case from search, it\u2019s important to confirm that you have correctly identified the case. This is an intentional manual step to avoid data entry mistakes. </p> <p></p> <p>The event structure can be created dynamically, or new events can be manually added to the case to appropriately model the case workflow</p> <p></p>"},{"location":"editor/case-module/#case-event-participants","title":"Case Event Participants","text":"<p>All data collected in forms is explicitly connected to the case, the event, and the participant on the case. This allows for ease of tracking multiple case participants over time through multiple events.</p> <p></p>"},{"location":"editor/case-module/#configuring-cases","title":"Configuring Cases","text":"<p>Case Module allows us to define Case Definitions for different purposes such as following a participant in a drug trial over the course of many events, where each event may require many forms to be filled out.</p> <p>To configure cases, there are four files to modify.</p> <p>First add a reference to the new Case Definition in the <code>case-definitions.json</code>. Here is an example of a <code>case-definitions.json</code> file that references two Case Definitions.</p> <p>File: <code>case-definitions.json</code> <pre><code>[\n  {\n    \"id\": \"case-definition-1\",\n    \"name\": \"Case Definition 1\",\n    \"src\": \"./assets/case-definition-1.json\"\n  },\n  {\n    \"id\": \"case-definition-2\",\n    \"name\": \"Case Definition 2\",\n    \"src\": \"./assets/case-definition-2.json\"\n  }\n]\n</code></pre></p> <p>Then create the corresponding Case Definition file...</p> <p>File: <code>case-definition-1.json</code> <pre><code>{\n  \"id\": \"case-definition-1\",\n  \"formId\": \"case-definition-1-manifest\",\n  \"name\": \"Case Definition 1\",\n  \"description\": \"Description...\",\n  \"startFormOnOpen\": {\n    \"eventId\": \"event-definition-1\",\n    \"eventFormId\": \"event-form-1\"\n  },\n  \"eventDefinitions\": [\n   {\n      \"id\": \"event-definition-1\",\n      \"name\": \"Event Definition 1\",\n      \"description\": \"Description...\",\n      \"repeatable\": false,\n      \"required\": true,\n      \"eventFormDefinitions\": [\n        {\n          \"id\": \"event-form-definition-1\",\n          \"formId\": \"form-1\",\n          \"name\": \"Form 1\",\n          \"required\": true,\n          \"repeatable\": false\n        }\n      ]\n    }\n  ]\n}\n</code></pre></p>"},{"location":"editor/case-module/#case-definition-templates","title":"Case Definition Templates","text":"<p>As a Data Collector uses the Client App, they navigate a Case's hierarchy of Events and Forms. Almost every piece of information they see can be overriden to display custom variables and logic by using the Case Definition's templates. This section describes the templates available and what variables are available. Note that all templates are evaluated as Javascript Template Literals. There are many good tutorials online about how to use Javascipt Template Literals, here are a couple of Javascript Template Literals examples that we reference often for things like doing conditionals and loops.</p>"},{"location":"editor/case-module/#schedule","title":"Schedule","text":"<p><code>templateScheduleListItemIcon</code> default: <pre><code>\"templateScheduleListItemIcon\": \"${caseEvent.status === 'CASE_EVENT_STATUS_COMPLETED' ? 'event_note' : 'event_available'}\"\n</code></pre></p> <p><code>templateScheduleListItemPrimary</code> default: <pre><code>\"templateScheduleListItemPrimary\": \"&lt;span&gt;${caseEventDefinition.name}&lt;/span&gt; in Case ${caseService.case._id.substr(0,5)}\"\n</code></pre></p> <p><code>templateScheduleListItemSecondary</code> default:  <pre><code>\"templateScheduleListItemSecondary\": \"&lt;span&gt;${caseInstance.label}&lt;/span&gt;\"\n</code></pre></p> <p>Variables available: - <code>caseService</code>: CaseService - <code>caseDefinition</code>: CaseDefinition - <code>caseEventDefinition</code>: CaseEventDefinition - <code>caseInstance</code>: Case - <code>caseEvent</code>: CaseEvent</p>"},{"location":"editor/case-module/#debugging-case-definition-templates","title":"Debugging Case Definition Templates","text":""},{"location":"editor/case-module/#configuring-formsjson","title":"Configuring forms.json","text":"<p>The case references a Form in the <code>formId</code> property of the Case Definition. Make sure there is a form with that corresponding Form ID listed in <code>forms.json</code> with additional configuration for search.</p> <p>File: <code>forms.json</code> <pre><code>[\n  {\n    \"id\" : \"case-definition-1-manifest\",\n    \"type\" : \"case\",\n    \"title\" : \"Case Definition 1 Manifest\",\n    \"description\" : \"Description...\",\n    \"listed\" : true,\n    \"src\" : \"./assets/case-definition-1-manifest/form.html\",\n    \"searchSettings\" : {\n      \"primaryTemplate\" : \"${searchDoc.variables.status === 'Enrolled' ? `Participant ID: ${searchDoc.variables.participant_id} &amp;nbsp; &amp;nbsp; &amp;nbsp; Enrollment Date: ${(searchDoc.variables.enrollment_date).substring(8,10) + '-' + (searchDoc.variables.enrollment_date).substring(5,7)+ '-' + (searchDoc.variables.enrollment_date).substring(0,4)}` : `Screening ID: ${searchDoc._id.substr(0,6)}  &amp;nbsp; &amp;nbsp; &amp;nbsp; Screening Date: ${searchDoc.variables.screening_date ? searchDoc.variables.screening_date : 'N/A' }` }\",\n      \"shouldIndex\" : true,\n      \"secondaryTemplate\" : \"${searchDoc.variables.status === 'Enrolled' ? `Name: ${searchDoc.variables.first_name} ${searchDoc.variables.last_name}  &amp;nbsp; &amp;nbsp; &amp;nbsp; Location: ${searchDoc.variables.location}  &amp;nbsp; &amp;nbsp; &amp;nbsp; Status: Enrolled &amp;nbsp; &amp;nbsp; &amp;nbsp;` : `Status: Not enrolled  &amp;nbsp; &amp;nbsp; &amp;nbsp;` }\",\n      \"variablesToIndex\" : [\n        \"first_name\",\n        \"last_name\",\n        \"status\",\n        \"location\",\n        \"participant_id\",\n        \"enrollment_date\",\n        \"screening_date\"\n      ]\n    },\n  }\n]\n</code></pre></p> <p>The properties in forms.json often change; check the Content Sets for current examples.</p>"},{"location":"editor/case-module/#configuring-text-search","title":"Configuring Text Search","text":"<p>The variables listed in <code>variablesToIndex</code> will be available for searching on with the Tablet level search as well as in Editor. You also must set <code>\"shouldIndex\" : true</code>. </p> <p>All forms that should not be searched must also have the <code>searchSettings</code> configured. Here is an example that must be implemented:</p> <pre><code>    \"searchSettings\" : {\n      \"shouldIndex\" : false,\n      \"primaryTemplate\" : \"\",\n      \"secondaryTemplate\" : \"\",\n      \"variablesToIndex\" : [\n      ]\n    },\n</code></pre>"},{"location":"editor/case-module/#configuring-qr-code-search","title":"Configuring QR code search","text":"<p>To configure the QR code search on Tablets, in your <code>app-config.json</code>, there is a <code>\"barcodeSearchMapFunction\"</code> property. This is a map function for receiving the value of the Search Scan for you to parse out and return the value that should be used for search. A <code>data</code> variable is passed in for you to parse, and the return value is what ends up in the search bar as a text search.</p> <p>Example: <pre><code>if ((JSON.parse(data)).participant_id) { \n  return (JSON.parse(data)).participant_id\n} else { \n  throw 'Incorrect format'\n} \n</code></pre></p>"},{"location":"editor/case-module/#configuring-two-way-sync","title":"Configuring two-way sync","text":"<p>Because you may need to share cases across devices, configuring two-way sync may be necessary. See the Two-way Sync Documentation for more details. Note that you sync Form Responses, and it's the IDs of that you'll want to sync in the <code>\"formId\"</code> of the Case Definition in order to sync cases.</p>"},{"location":"editor/case-module/#configuring-the-schedule","title":"Configuring the Schedule","text":"<p>One of the two tabs that Data Collectors see when they log into Tangerine is a \"Schedule\" tab. This schedule will show Case Event's on days where they are have an estimated day, scheduled day, and/or occurred on day. You can set these three dates on an event using the following APIs.</p> <pre><code>caseService.setEventEstimatedDay(idOfEvent, timeInUnixMilliseconds)\ncaseService.setEventOccurredOn(idOfEvent, timeInUnixMilliseconds)\ncaseService.setEventScheduledDay(idOfEvent, timeInUnixMilliseconds)\n</code></pre>"},{"location":"editor/case-module/case-archive/","title":"Case, Event and Form Archive and Unarchive","text":""},{"location":"editor/case-module/case-archive/#introduction","title":"Introduction","text":"<p>We have released an update to Tangerine which allows for the archiving and un-archiving of both events, and forms within events. This is an extension of the already existing functionality by which an entire case can be archived. The purpose of this is to empower data management teams using Tangerine to \"clean up\" messy cases where extraneous data has been added to a case in error, or by a conflict situation. The purpose of this document is to summarize both the configuration to enable this, and to demonstrate the use of these functions. This functionality will only apply to the web-based version of Tangerine, and will not be available on tablets.</p>"},{"location":"editor/case-module/case-archive/#enabling-access-to-archive-functions","title":"Enabling access to archive functions:","text":"<p>Under \"Users and Roles\", either a new role needs to be created, or additional rights will need to be granted to an existing role to provide access to the archive and unarchive functionality. To access this, login to Tangerine, and go to configure for the specific group that you are working with.</p> <p></p> <p></p> <p>By default, the admin role will NOT have this functionality. You can either update the role, or create a new role as needed. Note that the USER1 account will have already have access to this functionality. We suggest that all users of the web interface be given their own accounts for better tracking of activity within Tangerine, and that you do not normally use the USER1 account. Under roles, you can either modify the admin account to add this access, or create a new role with access, and assign that role to users. Note that a single user can be assigned to more than one role. By clicking on the configure icon () next to the trash can icon, you can edit an existing role (such as the admin role above).</p> <p>You will see that there are 4 separate permissions related to archiving. You can actively apply these as needed for your project team. There are 2 archive permissions to add (can_archive_events, and can_archive_forms), and two additional unarchive permissions (can_unarchive_events, and can_unarchive_forms). These are in addition to the can_archive_cases and can_unarchive_cases permissions which previously existed. For each site, there may be reasons to manage these each independently.</p> <p></p>"},{"location":"editor/case-module/case-archive/#archiving-and-unarchiving-of-forms-and-events","title":"Archiving and unarchiving of forms and events:","text":"<p>Once the correct roles have been applied to a user, they will be able to use the archiving/un-archiving functionality.</p> <p></p> <p>In the upper right corner, there is a kabob menu (  ) that can access the archive and delete functions at the case level. Note that we suggest NEVER using the delete function, as it is much harder to restore a deleted case.</p> <p></p> <p>Select the \"Archive\" option, and then click \"OK\" to confirm the archiving of a case.</p> <p></p> <p>If you need to review an archived case, you can select the \"View Archived Cases\" checkbox on the cases screen.</p> <p></p> <p>When you re-open an archived case, it shows with an indication that it is archived, and the menu will provide you with the option to un-archive it.</p> <p></p> <p>Selecting Unarchive will restore the case and all forms back to a normal (unarchived) status.</p> <p></p> <p>Additionally, this functionality will cascade down to the event and form level. If you have a duplicate event, or an event that was added in error. You can archive the event, and all the forms within the event by clicking on the \"archive\" icon (    ) to the right of the event.</p> <p></p> <p>Click the icon and then confirm that you wish to archive the event by clicking \"OK.\" </p> <p></p> <p>If you need to visualize an archived event, you can check the checkbox for \"Show Archived Events.\" The archived event will show as greyed out, with an \"Unarchive\" icon next to it (  ). If you select an archived event, the forms within it will also be archived, but similarly are viewable by checking the \"Show Archived Forms\" box. The forms will be greyed out and show the unarchive button to the right.</p> <p></p> <p>Clicking on the unarchive button for an event will prompt you to confirm if you want to unarchive the event.</p> <p></p> <p></p> <p>Unarchiving an event will cascade down, and automatically unarchive any associated forms for that event. If you need to unarchive an event, and archive SOME forms within that event, you can unarchive, and then go into the event to archive individual forms within that event as needed.</p>"},{"location":"editor/case-module/case-data-model/","title":"Case Management Data Model","text":""},{"location":"editor/case-module/case-data-model/#case-entities-and-relationships","title":"Case Entities and Relationships:","text":"<p>Entities: Participant, Case, CaseEvent, EventForm, FormResponse</p> <p>Relationships:</p> <ul> <li>A Case is related to many Participants. </li> <li>A Case is related to many CaseEvents. </li> <li>A CaseEvent is related to many EventForms. </li> <li>An EventForm is related to one FormResponse. </li> <li>An EventForm is related to one Participant.</li> </ul> <p>Then there are definition Entities that are not in the data:</p> <p>Entities: ParticipantDefinition, CaseDefinition, CaseEventDefinition, EventFormDefinition, FormDefinition</p>"},{"location":"editor/case-module/case-data-model/#how-the-case-entities-and-relationships-are-expressed-in-tangerine","title":"How the Case Entities and Relationships are expressed in Tangerine","text":"<p>A typical Tangerine Case will feature: - one document (type = case) that has all of the Case-related meta-data mentioned below, and  - multiple documents with forms data. These forms are linked by formResponseId in the case's eventForms array. </p> <p>There is not a 1-to-1 mapping between Tangerine entities and data persisted to the server. Records are saved in Tangerine as a TangyFormResponse doc, identified by <code>\"collection\": \"TangyFormResponse\"</code> in the Couchdb document. </p> <p>A TangyFormResponse is a very generic container for data; it does not by default manage any of its relationships. Most of the Case-related entities are saved in a single TangyFormResponse as  <code>\"type\": \"case\"</code> and explicitly manages these relationships inside the eventForms array:</p> <p><pre><code>{\n  \"_id\": \"8744ff38-4c3e-487d-814d-ddcb916a41d5\",\n  \"collection\": \"TangyFormResponse\",\n  \"type\": \"case\",\n  \"eventForms\": [\n    {\n      \"id\": \"c7b6ee21-793a-11ea-9144-710703689c79\",\n      \"complete\": true,\n      \"caseId\": \"c7b23330-793a-11ea-9144-710703689c79\",\n      \"participantId\": \"\",\n      \"caseEventId\": \"c7b6ee20-793a-11ea-9144-710703689c79\",\n      \"eventFormDefinitionId\": \"enrollment-screening-form\",\n      \"formResponseId\": \"c7b6ee22-793a-11ea-9144-710703689c79\"\n    },\n    {\n      \"id\": \"c7b6ee23-793a-11ea-9144-710703689c79\",\n      \"complete\": true,\n      \"caseId\": \"c7b23330-793a-11ea-9144-710703689c79\",\n      \"participantId\": \"8a46e841-d80c-4038-857c-7ae43c1d42cf\",\n      \"caseEventId\": \"c7b6ee20-793a-11ea-9144-710703689c79\",\n      \"eventFormDefinitionId\": \"mnh-sociodemographic-form\",\n      \"formResponseId\": \"c7b6ee24-793a-11ea-9144-710703689c79\"\n    }\n  ]\n}\n</code></pre> Any other documents related to a case save only form data and a small amount of meta-data.</p>"},{"location":"editor/case-module/case-data-model/#how-relationships-are-mapped-in-an-eventform","title":"How relationships are mapped in an EventForm","text":"<p>Let's first look at the Case hierarchy: A Case has a collection of CaseEvents. </p> <p>A CaseEvent has a collection of EventForms, which manage the relationship between : - the CaseEvent (stored as _id in the CaseEvent and caseId in the CaseEvent eventForms array ) - Participant (stored in the CaseEvent's particiaptns array and also linked via participantId in the CaseEvent's eventForms's array) - CaseEvent (stored as caseEventId in the CaseEvent's events array) - TangyFormResponse (stored as formResponseId and available externally in a separate document)</p> <pre><code>class EventForm {\n  id:string;\n  participantId:string\n  complete:boolean = false\n  caseId:string; \n  caseEventId:string;\n  eventFormDefinitionId:string;\n  formResponseId:string;\n  data?:any;\n  constructor() {\n\n  }\n}\n</code></pre> <p>The formResponseId links to a TangyFormResponse, which contains the data filled out in a form. </p>"},{"location":"editor/case-module/case-management-group/","title":"Case Management Group","text":"<p>Case Management allows us to define Case Definitions for different purposes such as following a participant in a drug trial over the course of many events, where each event may require many forms to be filled out. In order to create and find cases, you will need to configure the <code>\"case-home\"</code> as the <code>\"homeUrl\"</code> value in <code>app-config.json</code>.</p>"},{"location":"editor/case-module/case-management-group/#configuring-cases","title":"Configuring Cases","text":"<p>Case Management allows us to define Case Definitions for different purposes such as following a participant in a drug trial over the course of many events, where each event may require many forms to be filled out.</p> <p>To configure cases, there are four files to modify.</p> <p>First add a reference to the new Case Definition in the <code>case-definitions.json</code>. Here is an example of a <code>case-definitions.json</code> file that references two Case Definitions.</p> <p>File: <code>case-definitions.json</code> <pre><code>[\n  {\n    \"id\": \"case-definition-1\",\n    \"name\": \"Case Definition 1\",\n    \"src\": \"./assets/case-definition-1.json\"\n  },\n  {\n    \"id\": \"case-definition-2\",\n    \"name\": \"Case Definition 2\",\n    \"src\": \"./assets/case-definition-2.json\"\n  }\n]\n</code></pre></p> <p>Then create the corresponding Case Definition file...</p> <p>File: <code>case-definition-1.json</code> <pre><code>{\n  \"id\": \"case-definition-1\",\n  \"formId\": \"case-definition-1-manifest\",\n  \"name\": \"Case Definition 1\",\n  \"description\": \"Description...\",\n  \"startFormOnOpen\": {\n    \"eventId\": \"event-definition-1\",\n    \"eventFormId\": \"event-form-1\"\n  },\n  \"eventDefinitions\": [\n   {\n      \"id\": \"event-definition-1\",\n      \"name\": \"Event Definition 1\",\n      \"description\": \"Description...\",\n      \"repeatable\": false,\n      \"required\": true,\n      \"eventFormDefinitions\": [\n        {\n          \"id\": \"event-form-definition-1\",\n          \"formId\": \"form-1\",\n          \"name\": \"Form 1\",\n          \"required\": true,\n          \"repeatable\": false\n        }\n      ]\n    }\n  ]\n}\n</code></pre></p>"},{"location":"editor/case-module/case-management-group/#case-definition-templates","title":"Case Definition Templates","text":"<p>As a Data Collector uses the Client App, they navigate a Case's hierarchy of Events and Forms. Almost every piece of information they see can be overriden to display custom variables and logic by using the Case Definition's templates. This section describes the templates available and what variables are available. Note that all templates are evaluated as Javascript Template Literals. There are many good tutorials online about how to use Javascipt Template Literals, here are a couple of Javascript Template Literals examples that we reference often for things like doing conditionals and loops.</p>"},{"location":"editor/case-module/case-management-group/#schedule","title":"Schedule","text":"<p><code>templateScheduleListItemIcon</code> default: <pre><code>\"templateScheduleListItemIcon\": \"${caseEvent.status === 'CASE_EVENT_STATUS_COMPLETED' ? 'event_note' : 'event_available'}\"\n</code></pre></p> <p><code>templateScheduleListItemPrimary</code> default: <pre><code>\"templateScheduleListItemPrimary\": \"&lt;span&gt;${caseEventDefinition.name}&lt;/span&gt; in Case ${caseService.case._id.substr(0,5)}\"\n</code></pre></p> <p><code>templateScheduleListItemSecondary</code> default:  <pre><code>\"templateScheduleListItemSecondary\": \"&lt;span&gt;${caseInstance.label}&lt;/span&gt;\"\n</code></pre></p> <p>Variables available: - <code>caseService</code>: CaseService - <code>caseDefinition</code>: CaseDefinition - <code>caseEventDefinition</code>: CaseEventDefinition - <code>caseInstance</code>: Case - <code>caseEvent</code>: CaseEvent</p>"},{"location":"editor/case-module/case-management-group/#debugging-case-definition-templates","title":"Debugging Case Definition Templates","text":""},{"location":"editor/case-module/case-management-group/#configuring-search","title":"Configuring search","text":"<p>The case references a Form in the <code>formId</code> property of the Case Definition. Make sure there is a form with that corresponding Form ID listed in <code>forms.json</code> with additional configuration for search.</p> <p>File: <code>forms.json</code> <pre><code>[\n  {\n     \"id\" : \"case-definition-1-manifest\",\n     \"type\" : \"case\",\n     \"title\" : \"Case Definition 1 Manifest\",\n     \"description\" : \"Description...\",\n     \"listed\" : true,\n     \"src\" : \"./assets/case-definition-1-manifest/form.html\",\n     \"searchSettings\" : {\n        \"primaryTemplate\" : \"Participant ID: ${searchDoc.variables.participant_id}\",\n        \"shouldIndex\" : true,\n        \"secondaryTemplate\" : \"Enrollment Date: ${searchDoc.variables.enrollment_date}, Case ID: ${searchDoc._id}\",\n        \"variablesToIndex\" : [\n           \"participant_id\",\n           \"enrollment_date\"\n        ]\n     }\n  }\n]\n</code></pre></p>"},{"location":"editor/case-module/case-management-group/#configuring-two-way-sync","title":"Configuring two-way sync","text":"<p>Because you may need to share cases across devices, configuring two-way sync may be necessary. See the Two-way Sync Documentation for more details. Note that you sync Form Responses, and it's the IDs of that you'll want to sync in the <code>\"formId\"</code> of the Case Definition in order to sync cases.</p>"},{"location":"editor/case-module/case-management-group/#configuring-the-schedule","title":"Configuring the Schedule","text":"<p>One of the two tabs that Data Collectors see when they log into Tangerine is a \"Schedule\" tab. This schedule will show Case Event's on days where they are have an estimated day, scheduled day, and/or occurred on day. You can set these three dates on an event using the following APIs.</p> <pre><code>caseService.setEventEstimatedDay(idOfEvent, timeInUnixMilliseconds)\ncaseService.setEventOccurredOn(idOfEvent, timeInUnixMilliseconds)\ncaseService.setEventScheduledDay(idOfEvent, timeInUnixMilliseconds)\n</code></pre>"},{"location":"editor/case-module/case-module-cookbook/","title":"Case Module Cookbook","text":""},{"location":"editor/case-module/case-module-cookbook/#get-data-from-participant-related-to-current-event-form","title":"Get data from participant related to current Event Form","text":"<p>In the following example, from an <code>on-change</code> hook or <code>on-open</code>, we can look up the corresponding participant for the current form, then look the <code>age</code> variable that has been previously set on that participant.  <pre><code>const currentEventId = window.location.hash.split('/')[5]\nconst currentFormId = window.location.hash.split('/')[6]\nconst participantId = caseService\n  .case\n  .events\n  .find(event =&gt; event.id === currentEventId)\n  .eventForms\n  .find(eventForm =&gt; eventForm.id === currentFormId)\n  .participantId\nconst age = caseService.getParticipantData(participantId, 'age')\n</code></pre></p>"},{"location":"editor/case-module/case-service-api/","title":"API: caseService","text":"<p>Warning</p> <p>Use of the caseService Class is only available when the case module is enabled on the server.</p> <p>TODO: Link to the page that describes how to enable the case service</p> <p>The caseService class allows the form developer to programmatically interact with the case from within the form. The Case Service is activated in Tangerine when the user opens a view associated with a Case. Given a case's unique identifier, the Case Service loads into memory both the case document and the case definition document associated with the case. The Case Service also sets some reference variables for easy access to the most used case items like the participants, events and event forms.</p> <p>Unless otherwise noted, the Case Service APIs that operate on the version of the case in memory.  When programming within forms, any changes to the case document are saved to couchdb when the <code>on-submit</code> logic completes.  In more advanced programming workflows, the <code>load()</code> and <code>save()</code> APIs can be used to specify when case documents are loaded into memory or saved to couchdb.</p>"},{"location":"editor/case-module/case-service-api/#case-apis","title":"Case APIs","text":""},{"location":"editor/case-module/case-service-api/#id","title":"id","text":"<p>Returns the unique identifier of the currently loaded case.</p>"},{"location":"editor/case-module/case-service-api/#participants","title":"participants","text":"<p>Returns the list of participants associated with the case or an empty array if none exist.</p>"},{"location":"editor/case-module/case-service-api/#events","title":"events","text":"<p>Returns the list of events associated with the case or an empty array if none exist.</p>"},{"location":"editor/case-module/case-service-api/#forms","title":"forms","text":"<p>Returns the list of forms for all Case Events associated with the case or an empty array if none exist.</p>"},{"location":"editor/case-module/case-service-api/#roledefinitions","title":"roleDefinitions","text":"<p>Returns the list of Case Roles associated with this case from the Case Definition.</p>"},{"location":"editor/case-module/case-service-api/#eventformdefinitions","title":"eventFormDefinitions","text":"<p>Returns the list of Event Form Definitions associated with this case type form the Case Definition.</p>"},{"location":"editor/case-module/case-service-api/#caseeventdefinitions","title":"caseEventDefinitions","text":"<p>Returns the list of Case Event Definitions associated with this case type form the Case Definition.</p>"},{"location":"editor/case-module/case-service-api/#changelocation","title":"changeLocation","text":"<p>Change the location of a Case. This also changes the location information on all related Form Responses.</p>"},{"location":"editor/case-module/case-service-api/#parameters","title":"Parameters","text":"Param Type Description location <code>object</code> An object where the properties are the levels and the values are the location node IDs"},{"location":"editor/case-module/case-service-api/#example","title":"Example","text":"<ul> <li>video</li> <li>example code</li> </ul>"},{"location":"editor/case-module/case-service-api/#setvariable","title":"setVariable","text":"<p>Set a Case level variable in a Case. </p>"},{"location":"editor/case-module/case-service-api/#parameters_1","title":"Parameters","text":"Param Type Description variableName <code>string</code> The variable name. value <code>any</code> The value for the variable."},{"location":"editor/case-module/case-service-api/#example_1","title":"Example","text":"<p><pre><code>caseService.setVariable('participant_id', getValue('participant_id'))\ncaseService.setVariable('first_name', getValue('first_name'))\ncaseService.setVariable('last_name', getValue('last_name'))\n</code></pre> - example code</p>"},{"location":"editor/case-module/case-service-api/#getvariable","title":"getVariable","text":"<p>Get a Case level variable in a Case. </p>"},{"location":"editor/case-module/case-service-api/#parameters_2","title":"Parameters","text":"Param Type Description variableName <code>string</code> The variable name."},{"location":"editor/case-module/case-service-api/#returns","title":"Returns","text":"<p>The value requested. May be any data type that was set.</p>"},{"location":"editor/case-module/case-service-api/#example_2","title":"Example","text":"<p><pre><code>if (!caseService.getVariable('status')) {\n  caseService.setVariable('status', 'screening')\n}\n</code></pre> - example code</p>"},{"location":"editor/case-module/case-service-api/#getcurrentcaseeventid","title":"getCurrentCaseEventId","text":"<p>Returns the unique identifier for the Case Event currently loaded in memory. This is a useful function for safely getting the Case Event Id for use in other APIs that take caseEventId as a parameter.</p>"},{"location":"editor/case-module/case-service-api/#parameters_3","title":"Parameters","text":"<p>None</p>"},{"location":"editor/case-module/case-service-api/#returns_1","title":"Returns","text":"<p>The unique identifier for the currently loaded Case Event. Returns <code>undefined</code> if a Case Event is not currently in view.</p>"},{"location":"editor/case-module/case-service-api/#example_3","title":"Example","text":"<pre><code>if (caseService.getCurrentCaseEventId()) {\n  caseService.setEventEstimatedDay(caseService.getCurrentCaseEventId(), moment())\n}\n</code></pre>"},{"location":"editor/case-module/case-service-api/#getcurrenteventformid","title":"getCurrentEventFormId","text":"<p>Returns the unique identifier for the Case Event currently loaded in memory. This is a useful function for safely getting the Event Form Id for use in other APIs that take eventFormId as a parameter.</p>"},{"location":"editor/case-module/case-service-api/#parameters_4","title":"Parameters","text":"<p>None</p>"},{"location":"editor/case-module/case-service-api/#returns_2","title":"Returns","text":"<p>The unique identifier for the currently loaded Event Form. Returns <code>undefined</code> if an Event Form is not currently in view.</p>"},{"location":"editor/case-module/case-service-api/#example_4","title":"Example","text":"<pre><code>if (caseService.getCurrentCaseEventId() &amp;&amp; caseService.getCurrentEventFormId()) {\n  caseService.markEventFormRequired(caseService.getCurrentCaseEventId(), caseService.getCurrentEventFormId())\n}\n</code></pre>"},{"location":"editor/case-module/case-service-api/#case-event-api","title":"Case Event API","text":""},{"location":"editor/case-module/case-service-api/#createevent","title":"createEvent","text":"<p>Dynamically create an instance of an event (defined in the case json) and add it to the current case</p>"},{"location":"editor/case-module/case-service-api/#parameters_5","title":"Parameters","text":"Param Type Description eventDefinitionId <code>string</code> Event Definition ID from the Case Definition Document createRequiredEventForms (Optional) <code>boolean</code> (Default: False) Instantiate any required forms within the Event"},{"location":"editor/case-module/case-service-api/#returns_3","title":"Returns","text":"<p>CaseEvent <code>object</code></p>"},{"location":"editor/case-module/case-service-api/#example_5","title":"Example","text":"<pre><code>const event1 = caseService.createEvent('event-definition-cf58ca')\nconst event2 = caseService.createEvent('event-definition-682ca6', true)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#seteventname","title":"setEventName","text":"<p>Set a custom name for the Case Event to be displayed in the Case Event list for the current case. The string value passed as the name parameter can be resolved from any javascript that returns a string.</p>"},{"location":"editor/case-module/case-service-api/#parameters_6","title":"Parameters","text":"Param Type Description eventId <code>string</code> (UUID) Event Instance ID from the Case name <code>string</code> Name for the event"},{"location":"editor/case-module/case-service-api/#example_6","title":"Example","text":"<pre><code>caseService.setEventEstimatedDay(caseService.getCurrentCaseEventId(), \"First Visit\")\n</code></pre>"},{"location":"editor/case-module/case-service-api/#seteventestimatedday","title":"setEventEstimatedDay","text":"<p>Set the estimated day of expected date completion. This is used by the calendar for displaying events.  TODO: Improve Description</p>"},{"location":"editor/case-module/case-service-api/#parameters_7","title":"Parameters","text":"Param Type Description eventId <code>string</code> (UUID) Event Instance ID from the Case timeInMs <code>number</code> Unix timestamp for the event date/time"},{"location":"editor/case-module/case-service-api/#example_7","title":"Example","text":"<pre><code>caseService.setEventEstimatedDay(event1.id, now)\ncaseService.setEventEstimatedDay(caseService.getCurrentCaseEventId(), 1592359411)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#seteventscheduledday","title":"setEventScheduledDay","text":"<p>Set the scheduled day of expected date completion. This is used by the calendar for displaying events.  TODO: Improve Description</p>"},{"location":"editor/case-module/case-service-api/#parameters_8","title":"Parameters","text":"Param Type Description eventId <code>string</code> (UUID) Event Instance ID from the Case timeInMs <code>number</code> Unix timestamp for the event date/time"},{"location":"editor/case-module/case-service-api/#example_8","title":"Example","text":"<pre><code>caseService.setEventScheduledDay(event1.id, now)\ncaseService.setEventScheduledDay(caseService.getCurrentCaseEventId(), 1592359411)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#seteventwindow","title":"setEventWindow","text":"<p>Set the expected event completion.  TODO: Improve Description</p>"},{"location":"editor/case-module/case-service-api/#parameters_9","title":"Parameters","text":"Param Type Description eventId <code>string</code> (UUID) Event Instance ID from the Case windowStartDayTimeInMs <code>number</code> Unix timestamp for the event start date/time windowEndDayTimeInMs <code>number</code> Unix timestamp for the event end date/time"},{"location":"editor/case-module/case-service-api/#example_9","title":"Example","text":"<pre><code>caseService.setEventWindow(event1.id, 1592359411, 1592618611)\ncaseService.setEventWindow(caseService.getCurrentCaseEventId(), 1592359411, 1592618611)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#seteventoccurredon","title":"setEventOccurredOn","text":"<p>Set the date in which the event occurred  TODO: Improve Description</p>"},{"location":"editor/case-module/case-service-api/#parameters_10","title":"Parameters","text":"Param Type Description eventId <code>string</code> (UUID) Event Instance ID from the Case timeInMs <code>number</code> Unix timestamp for the event completion date/time"},{"location":"editor/case-module/case-service-api/#example_10","title":"Example","text":"<pre><code>caseService.setEventOccurredOn(event1.id, now)\ncaseService.setEventOccurredOn(caseService.getCurrentCaseEventId(), 1592359411)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#disableeventdefinition","title":"disableEventDefinition","text":"<p>Prevent creation of an via the new event menu.</p>"},{"location":"editor/case-module/case-service-api/#parameters_11","title":"Parameters","text":"Param Type Description eventDefinitionId <code>string</code> (UUID) Event Definition ID from the Case Definition"},{"location":"editor/case-module/case-service-api/#example_11","title":"Example","text":"<pre><code>caseService.disableEventDefinition('event-definition-1')\n</code></pre>"},{"location":"editor/case-module/case-service-api/#activatecaseevent","title":"activateCaseEvent","text":"<p>The <code>inactive</code> flag on Case Event controls its appearance in the Case Event list. When a Case Event is created, the <code>inactive</code> flag is not set on the Case Event. This API adds the <code>inactive</code> flag to the Case Event and marks the flag as <code>false</code>. The inverse API <code>deactivateCaseEvent</code> sets the flag to <code>true</code>. Case Event with no <code>inactive</code> flag or having the flag set to <code>false</code> will appear in the Case Event list.</p>"},{"location":"editor/case-module/case-service-api/#parameters_12","title":"Parameters","text":"Param Type Description eventId <code>string</code> (UUID) Event Instance ID from the Case"},{"location":"editor/case-module/case-service-api/#example_12","title":"Example","text":"<pre><code>// All currently hidden (inactive) case events in the case with the event-definition of 'optional-event-dev' will be shown in the Case Event list\nfor (let caseEvent in caseService.case.caseEvents.filter(event =&gt; event.caseEventDefinitionId === 'optional-event-def')) {\n  if (caseEvent.inactive) {\n    caseService.activateCaseEvent(caseEvent.id)\n  }\n}\n</code></pre>"},{"location":"editor/case-module/case-service-api/#deactivatecaseevent","title":"deactivateCaseEvent","text":"<p>The <code>inactive</code> flag on Case Event controls its appearance in the Case Event list. When a Case Event is created, the <code>inactive</code> flag is not set on the Case Event. This API adds the <code>inactive</code> flag to the Case Event and marks the flag as <code>true</code>. The inverse API <code>activateCaseEvent</code> sets the flag to <code>false</code>. Case Event with the flag set to <code>true</code> will appear in the Case Event list.</p>"},{"location":"editor/case-module/case-service-api/#parameters_13","title":"Parameters","text":"Param Type Description eventId <code>string</code> (UUID) Event Instance ID from the Case"},{"location":"editor/case-module/case-service-api/#example_13","title":"Example","text":"<pre><code>// All case events in the case with the event-definition of 'optional-event-dev' will be hidden in the Case Event list\nfor (let caseEvent in caseService.case.caseEvents.filter(event =&gt; event.caseEventDefinitionId === 'optional-event-def')) {\n  caseService.deactivateCaseEvent(caseEvent.id)\n}\n</code></pre>"},{"location":"editor/case-module/case-service-api/#event-form-api","title":"Event Form API","text":""},{"location":"editor/case-module/case-service-api/#createeventform","title":"createEventForm","text":"<p>Dynamically create an instance of an event form (defined in the case json) and add it to the current Case.</p>"},{"location":"editor/case-module/case-service-api/#parameters_14","title":"Parameters","text":"Param Type Description caseEventId <code>string</code> Event ID of the Event you want to add this Form to eventFormDefinitionId <code>string</code> Event Form Definition ID of the Event Form ou want to create participantId (optional) <code>string</code> ID of the Participant this Event Form is for."},{"location":"editor/case-module/case-service-api/#returns_4","title":"Returns","text":"<p>EventForm <code>object</code></p>"},{"location":"editor/case-module/case-service-api/#example_14","title":"Example","text":"<pre><code>const eventForm = caseService.startEventForm(caseEvent.id, 'event-form-definition-fdkai3', participant.id)\n</code></pre> <ul> <li>code example</li> <li>video demo</li> </ul>"},{"location":"editor/case-module/case-service-api/#deleteeventform","title":"deleteEventForm","text":"<p>Dynamically delete an instance of an event form.</p>"},{"location":"editor/case-module/case-service-api/#parameters_15","title":"Parameters","text":"Param Type Description caseEventId <code>string</code> Event ID of the Event you want to add this Form to eventFormId <code>string</code> Event Form ID of the Event Form you want to delete"},{"location":"editor/case-module/case-service-api/#example_15","title":"Example","text":"<pre><code>// Find a Case Event and corresponding Event Form instance to delete.\nconst caseEvent = caseService\n  .case\n  .events\n  .find(event =&gt; event.eventDefinitionId === 'event-definition-1')\nconst eventForm = caseEvent\n  .eventForms\n  .find(eventForm =&gt; eventForm.eventFormDefinitionId === 'event-form-definition-1')\n// Delete the EventForm.\ncaseService.deleteEventForm(caseEvent.id, eventForm.id)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#seteventformdata","title":"setEventFormData","text":"<p>Set a custom piece of data for an event form. Note this is a separate data collection than the data on the Form Response related to the Event Form.</p>"},{"location":"editor/case-module/case-service-api/#parameters_16","title":"Parameters","text":"Param Type Description caseEventId <code>string</code> Event ID of the Event the Event Form lives in eventFormId <code>string</code> Event Form ID of the Event Form you want to set data on variableName <code>string</code> Variable name you are setting value <code>any</code> Value you want to set"},{"location":"editor/case-module/case-service-api/#example_16","title":"Example","text":"<pre><code>caseService.setEventFormData(caseEvent.id, eventForm.id, 'foo', 'bar')\n</code></pre>"},{"location":"editor/case-module/case-service-api/#geteventformdata","title":"getEventFormData","text":"<p>Get a custom piece of data for an event form. Note this is a separate data collection than the data on the Form Response related to the Event Form.</p>"},{"location":"editor/case-module/case-service-api/#parameters_17","title":"Parameters","text":"Param Type Description caseEventId <code>string</code> Event ID of the Event the Event Form lives in eventFormId <code>string</code> Event Form ID of the Event Form you want to get data of variableName <code>string</code> Variable name you are getting"},{"location":"editor/case-module/case-service-api/#example_17","title":"Example","text":"<pre><code>const fooData = caseService.getEventFormData(caseEvent.id, eventForm.id, 'foo')\n</code></pre>"},{"location":"editor/case-module/case-service-api/#markeventformrequired","title":"markEventFormRequired","text":"<p>Mark an Even Form instance as being required. You might do this on a form that was optional, but it has come to lite that it must be filled out before the event is marked as complete.</p>"},{"location":"editor/case-module/case-service-api/#parameters_18","title":"Parameters","text":"Param Type Description caseEventId <code>string</code> Event ID of the Event the Event Form lives in eventFormId <code>string</code> Event Form ID of the Event Form you want to mark required"},{"location":"editor/case-module/case-service-api/#example_18","title":"Example","text":"<pre><code>// Create an EventForm in the current event. You could also find one.\nconst form2 = caseService.createEventForm(caseEvent.id, 'event-form--mark-form-as-required-example-2', participant.id)\n// Mark EventForm as required.\ncaseService.markEventFormRequired(caseEvent.id, form2.id)\n</code></pre> <ul> <li>example code</li> <li>video</li> </ul>"},{"location":"editor/case-module/case-service-api/#markeventformnotrequired","title":"markEventFormNotRequired","text":"<p>Mark and event form as not required.</p>"},{"location":"editor/case-module/case-service-api/#parameters_19","title":"Parameters","text":"Param Type Description caseEventId <code>string</code> Event ID of the Event the Event Form lives in eventFormId <code>string</code> Event Form ID of the Event Form you want to mark not required"},{"location":"editor/case-module/case-service-api/#example_19","title":"Example","text":"<pre><code>// Mark EventForm as required.\ncaseService.markEventFormRequired(caseEvent.id, eventForm.id)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#markeventformcomplete","title":"markEventFormComplete","text":"<p>Mark an event form as complete. In some case workflows a form may no longer need to be filled. This API marks an Event Form as <code>complete</code> so that the data collector does does not attempt to complete the form.</p>"},{"location":"editor/case-module/case-service-api/#parameters_20","title":"Parameters","text":"Param Type Description caseEventId <code>string</code> Event ID of the Event the Event Form lives in eventFormId <code>string</code> Event Form ID of the Event Form you want to mark not required"},{"location":"editor/case-module/case-service-api/#example_20","title":"Example","text":"<pre><code>// Mark EventForm as required.\ncaseService.markEventFormRequired(caseEvent.id, eventForm.id)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#activateeventform","title":"activateEventForm","text":"<p>The <code>inactive</code> flag on Event Form controls its appearance in the Event Form list. When a Event Form is created, the <code>inactive</code> flag is not set on the Event Form. This API adds the <code>inactive</code> flag to the Event Form and marks the flag as <code>false</code>. The inverse API <code>deactivateEventForm</code> sets the flag to <code>true</code>. Event Form with no <code>inactive</code> flag or having the flag set to <code>false</code> will appear in the Event Form list.</p>"},{"location":"editor/case-module/case-service-api/#parameters_21","title":"Parameters","text":"Param Type Description caseEventId <code>string</code> Event ID of the Event the Event Form lives in eventFormId <code>string</code> Event Form ID of the Event Form you want to mark active"},{"location":"editor/case-module/case-service-api/#example_21","title":"Example","text":"<pre><code>caseService.activateEventForm(caseEventId, eventFormId)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#deactivateeventform","title":"deactivateEventForm","text":"<p>The <code>inactive</code> flag on Event Form controls its appearance in the Event Form list. When a Event Form is created, the <code>inactive</code> flag is not set on the Event Form. This API adds the <code>inactive</code> flag to the Event Form and marks the flag as <code>true</code>. The inverse API <code>activateEventForm</code> sets the flag to <code>false</code>. Event Form with the flag set to <code>true</code> will appear in the Event Form list.</p>"},{"location":"editor/case-module/case-service-api/#parameters_22","title":"Parameters","text":"Param Type Description caseEventId <code>string</code> Event ID of the Event the Event Form lives in eventFormId <code>string</code> Event Form ID of the Event Form you want to mark inactive"},{"location":"editor/case-module/case-service-api/#example_22","title":"Example","text":"<pre><code>caseService.deactivateEventForm(caseEventId, eventFormId)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#participant-api","title":"Participant API","text":""},{"location":"editor/case-module/case-service-api/#createparticipant","title":"createParticipant","text":"<p>Create a participant in a Case.</p>"},{"location":"editor/case-module/case-service-api/#parameters_23","title":"Parameters","text":"Param Type Description caseRoleId <code>string</code> A Case Role ID as defined in the Case Role Definitions"},{"location":"editor/case-module/case-service-api/#returns_5","title":"Returns","text":"<p>Participant <code>object</code></p>"},{"location":"editor/case-module/case-service-api/#example_23","title":"Example","text":"<pre><code>const participantRole1 = caseService.createParticipant('role-1')\n</code></pre> <ul> <li>example code</li> </ul>"},{"location":"editor/case-module/case-service-api/#setparticipantdata","title":"setParticipantData","text":"<p>Set some data for a specific Participant.</p>"},{"location":"editor/case-module/case-service-api/#parameters_24","title":"Parameters","text":"Param Type Description participantId <code>string</code> ID of the participant variableName <code>string</code> Variable name you are setting value <code>any</code> Value you want to set"},{"location":"editor/case-module/case-service-api/#example_24","title":"Example","text":"<p>Create a participant and set some data from the current form... <pre><code>const participantRole1 = caseService.createParticipant('role-1')\ncaseService.setParticipantData(participantRole1.id, 'participant_id', getValue('participant_id'))\ncaseService.setParticipantData(participantRole1.id, 'first_name', getValue('first_name'))\ncaseService.setParticipantData(participantRole1.id, 'last_name', getValue('last_name'))\n</code></pre></p> <ul> <li>example code</li> </ul> <p>Set data on participant whom this Event Form is assigned to using the global <code>participant</code> object that is active when an EventForm is open that has an assigned Participant... <pre><code>caseService.setParticipantData(participant.id, 'first_name', getValue('first_name'))\ncaseService.setParticipantData(participant.id, 'last_name', getValue('last_name'))\n</code></pre></p> <ul> <li>example code</li> </ul> <p>Find a participant by role and set some data from the current form... <pre><code>const participantRole1 = caseService.case.participants.find(participant =&gt; paritipcant.caseRoleId === 'role-1')\ncaseService.setParticipantData(participantRole1.id, 'participant_id', getValue('participant_id'))\ncaseService.setParticipantData(participantRole1.id, 'first_name', getValue('first_name'))\ncaseService.setParticipantData(participantRole1.id, 'last_name', getValue('last_name'))\n</code></pre></p>"},{"location":"editor/case-module/case-service-api/#getparticipantdata","title":"getParticipantData","text":"<p>Get some data for a specific Participant.</p>"},{"location":"editor/case-module/case-service-api/#parameters_25","title":"Parameters","text":"Param Type Description participantId <code>string</code> ID of the participant variableName <code>string</code> Variable name you are getting"},{"location":"editor/case-module/case-service-api/#returns_6","title":"Returns","text":"<p>This function returns the value of the variable you requested which may consist of any data type you set it to.</p>"},{"location":"editor/case-module/case-service-api/#example_25","title":"Example","text":"<p>Get participant data of the form whom is assigned to the current form... <pre><code>caseService.getParticipantData(participant.id, 'first_name')\n</code></pre></p> <ul> <li>example code</li> </ul>"},{"location":"editor/case-module/case-service-api/#notification-api","title":"Notification API","text":"<p>Notifications appear in the Case view to provide instructions or extra information to the users who are filling out forms. The programmer uses the following APIs to create notifications in teh Case interface. Notifications can be persistant or dismisable depending on the use case.</p>"},{"location":"editor/case-module/case-service-api/#createnotification","title":"createNotification","text":"<p>Create a notificaiton and display it in the Case view</p>"},{"location":"editor/case-module/case-service-api/#parameters_26","title":"Parameters","text":"Param Type Description label <code>string</code> Short text used for the title description <code>string</code> Longer text description link <code>string</code> Url link internal or external icon <code>string</code> Text name of a system icon color <code>string</code> Hexadecimal value of a color (e.g. #CCC) enforceAttention <code>boolean</code> If true, change focus to the notification when it is displayed persist <code>boolean</code> If true, notification can only be dismissed programatically"},{"location":"editor/case-module/case-service-api/#example_26","title":"Example","text":"<pre><code>caseService.createNotification('Alert: Case Needs you attention', 'The Case needs review with a supervisor.', '', 'notification_important', '#CCC', true, false)\n</code></pre>"},{"location":"editor/case-module/case-service-api/#opennotification","title":"openNotification","text":"<p>Sets the status of a notificaiton to <code>Open</code> so it will display to the user.</p>"},{"location":"editor/case-module/case-service-api/#parameters_27","title":"Parameters","text":"Param Type Description notificationId <code>string</code> Short text used for the title"},{"location":"editor/case-module/case-service-api/#example_27","title":"Example","text":"<p>This code re-opens any Closed notifications that have a label that starts with 'Alert'. <pre><code>if (case.notifications) {\n  const notifications = case.notifications.filter(n =&gt; n.label.startsWith('Alert') &amp;&amp; n.status === NotificationStatus.Closed)\n  for (let notification in notifications) {\n    caseService.openNotificaiton(notification.id)\n  }\n}\n</code></pre></p>"},{"location":"editor/case-module/case-service-api/#closenotification","title":"closeNotification","text":"<p>Sets the status of a notificaiton to <code>Closed</code> so it will be hidden from the user.</p>"},{"location":"editor/case-module/case-service-api/#parameters_28","title":"Parameters","text":"Param Type Description notificationId <code>string</code> Short text used for the title"},{"location":"editor/case-module/case-service-api/#example_28","title":"Example","text":"<p>This code closes notifications that have a label that starts with 'Alert'. <pre><code>if (case.notifications) {\n  const notifications = case.notifications.filter(n =&gt; n.label.startsWith('Alert') &amp;&amp; n.status === NotificationStatus.Open)\n  for (let notification in notifications) {\n    caseService.closeNotificaiton(notification.id)\n  }\n}\n</code></pre></p>"},{"location":"editor/case-module/custom-case-reports/","title":"Custom Case Reports","text":"<p>The Custom Case Reports features enables the developer to create custom reports or a dashboard. This feature is accessible using a tab when viewing a case. To enable this feature, add <code>showCaseReports: true</code> to the group's app-config.json. </p>"},{"location":"editor/case-module/custom-case-reports/#develop-custom-reports-for-client","title":"Develop custom reports for Client","text":"<ul> <li>LitElement Documentation</li> <li>LitElement Examples</li> <li>Web Components</li> </ul>"},{"location":"editor/case-module/custom-case-reports/#demo-and-description-of-this-features-assets","title":"Demo and description of this feature's assets","text":"<p>This demo is based on the case module content set; therefore, you might want to install that in order to follow the demo.</p> <p>There are three files used for custom reports, which must be placed in the group directory. </p> <ol> <li>queries.js - has the map/reduce queries used to index the docs. Note that the sample queries.js file has a function called registrationResults with a map and a reduce query. The map function is explained above; the reduce uses Couchdb's built-in _sum keyword. </li> </ol> <p>The queries in this doc are installed when the app is installed. Support for updating these queries is not yet implemented. </p> <ol> <li> <p>reports.js - runs the queries and fills out the content for reports.html. The reduce function is used to provide the counts in report2. The options in report2 <code>options = {reduce: true}</code> activate the reduce function. </p> </li> <li> <p>reports.html - provides a basic html frame for the data. </p> </li> </ol>"},{"location":"editor/case-module/custom-case-reports/#helper-functions","title":"Helper functions","text":"<p>When writing queries or organizing the javascript logic to fetch the results, use the globally-exposed T.form.Get function to get the value of inputs; this will save you from having to wrote deeply nested code (<code>doc.items[0].inputs[3].value[0].value</code>)</p> <p><code>T.form.Get(doc, 'consent')</code></p> <p>Other helper function are available:</p> <ul> <li>T.user: userService</li> <li>T.case: caseService</li> </ul>"},{"location":"editor/case-module/custom-case-reports/#development-in-tangerine-preview","title":"Development in Tangerine Preview","text":"<p>Developers can use Tangerine-Preview as a test environment when developing custom case reports.  When updating the version of a query in the queries.js file, run the following commands in the Chrome Dev Console to make Tangerine-Preview run the documents through the new version of the query:</p> <pre><code>var userdb = await T.user.getUserDatabase()\nawait T.update.updateCustomViews(userDb)\n</code></pre>"},{"location":"editor/case-module/data-structure/","title":"Data Structure","text":"<p>A Case is a Document in a CouchDB database. A Case consists of 4 other Entities: CaseEvent, EventForm, and Participant. A Case is described by its CaseDefinition. A CaseDefinition also contains CaseEvetnDefinition(s) that describe what CaseEvents can exist in a Case, EventFormDefinition(s) that define what EventForms can exist in what CaseEvents, and Roles that describe what kind of Participants can exist in a Case. Lastly, all EventForms relate to separate FormResponse Documents in the database.</p>"},{"location":"editor/case-module/data-structure/#formresponse-schema","title":"FormResponse Schema","text":""},{"location":"editor/case-module/data-structure/#casedefinition-schema","title":"CaseDefinition Schema","text":"<pre><code>{\n  // A unique string that will be used to refer to the CaseDefinition.\n  \"id\": \"case-type-1\",\n  // An ID of a Form listed in forms.json that will be used to store Case level variables. \n  \"formId\": \"case-type-1-manifest\",\n  ...\n}\n</code></pre>"},{"location":"editor/case-module/data-structure/#case-schema","title":"Case Schema","text":"<pre><code>{\n  // A UUID generated by Tangerine to refer to the Case internal to Tangerine. Useful if Study IDs have collisions.\n  \"id\": \"00673b47-8452-4b4c-9597-5a56fe8a059c\",\n  // Because every Case is also a FormResponse, a Case includes top level form info you would find on a FormResponse.\n  \"form\": {\n    // The ID of the FormResponse this Case relates to. Shoudl be the same as the related CaseDefinition's formId.\n    \"id\": \"case-type-1-manifest\",\n    ...\n  },\n  // The related CaseDefinition's id property. \n  \"caseDefinitionId\": \"case-type-1\",\n  ...\n}\n</code></pre>"},{"location":"editor/case-module/data-structure/#caseeventdefinition-schema","title":"CaseEventDefinition Schema","text":""},{"location":"editor/case-module/data-structure/#caseevent-schema","title":"CaseEvent Schema","text":""},{"location":"editor/case-module/data-structure/#eventformdefinition-schema","title":"EventFormDefinition Schema","text":""},{"location":"editor/case-module/data-structure/#eventform-schema","title":"EventForm Schema","text":""},{"location":"editor/case-module/data-structure/#mysql","title":"MySQL","text":""},{"location":"editor/case-module/get-and-set-event-data/","title":"Get and set event data","text":"<p>For lack of a T.case.setEventData()/T.case.getEventData() API, use T.case.setVariable and T.case.getVariable with variable names that are namespaced using the Event ID.</p> <pre><code>// 3 ingredients are needed to set an Event Variable.\nconst eventId = '123'\nconst variableName = 'foo'\nconst variableValue = 'bar'\n\n// Set Event Variable.\nT.case.setVariable(`${eventId}-${variableName}`, variableValue)\n\n// Get Event Variable.\nconst shouldBeValueOfBar = T.case.getVariable(`${eventId}-${variableName}`)\n</code></pre> <p>There is an example in the <code>case-module</code> Content Set which consists of three parts:</p> <ul> <li>Event Definition with Event Form Definition referencing a Form that sets Event Data: https://github.com/Tangerine-Community/Tangerine/blob/master/content-sets/case-module/case-type-1.json#L159</li> <li>Form that sets Event Data: https://github.com/Tangerine-Community/Tangerine/blob/master/content-sets/case-module/template-event-listing/form.html#L5</li> <li>Template using Event Data: https://github.com/Tangerine-Community/Tangerine/blob/master/content-sets/case-module/case-type-1.json#L21</li> </ul>"},{"location":"editor/case-module/how-to-create-a-workflow-for-changing-case-location/","title":"How to create a workflow for changing a Case's location","text":"<p>Using a combination of a <code>&lt;tangy-location&gt;</code> input on a form and some logic in the same form's <code>on-submit</code> hook, you can empower users to reassign a Case to a new location. In the Case Module's Content Set we have a \"Change Location of Case\" Case Event Definition, a \"Change Location of Case\" Event Form, and corresponding \"Change Location of Case\" Form. We'll use that Content Set as our example. </p> <p>The form could be in any event, or even it's own event as it is in the Case Module content set. The important part is in the form you place the <code>&lt;tangy-location&gt;</code> for selecting a new locatoin to assign the case to. The following shows the markup of a form that uses the <code>caseService.changeLocation()</code> API to change the location of a Case given the value selected in the <code>&lt;tangy-location&gt;</code> input.</p> <pre><code>&lt;tangy-form title=\"Change location of case\" id=\"change-location-of-case\"\n  on-submit=\"\n    caseService.changeLocation(inputs.new_location_assignment.value)\n  \"\n&gt;\n  &lt;tangy-form-item id=\"item1\"&gt;\n    &lt;tangy-location label=\"Choose a location to assign this case to.\" name=\"new_location_assignment\" required&gt;&lt;/tangy-location&gt;\n  &lt;/tangy-form-item&gt;\n&lt;/tangy-form&gt;\n</code></pre>"},{"location":"editor/case-module/how-to-pass-data-between-forms-in-a-case/","title":"How to pass data between Forms in a Case","text":"<p>Let's say you had two forms in a Case, Form X and Form Y. In Form X, you collect the respondent's first name and last name, meanwhile in Form Y you want to confirm the data they entered on Form X.</p>"},{"location":"editor/case-module/how-to-pass-data-between-forms-in-a-case/#form-x","title":"Form X","text":"<p>In Form X, we bubble up the <code>first_name</code> and <code>last_name</code> variables on Form X to the <code>first_name</code> and <code>last_name</code> variables at the Case level.</p> <pre><code>&lt;tangy-form\n  id=\"form-x\"\n  title=\"Form X\"\n  on-submit=\"\n    T.case.setVariable('first_name', getValue('first_name'))\n    T.case.setVariable('last_name', getValue('last_name'))\n  \"\n&gt;\n  &lt;tangy-form-item id=\"item1\"&gt;\n    &lt;tangy-input name=\"first_name\" label=\"First name\" required&gt;\n    &lt;tangy-input name=\"last_name\" label=\"Last name\" required&gt;\n  &lt;/tangy-form-item&gt;\n&lt;/tangy-form&gt;\n</code></pre>"},{"location":"editor/case-module/how-to-pass-data-between-forms-in-a-case/#form-y","title":"Form Y","text":"<p>In Form Y, we get the Case level variables of <code>first_name</code> and <code>last_name</code> and set them on the <code>first_name</code> and <code>last_name</code> inputs. This results in the form loading with the previously entered first and last names already filled out.</p> <pre><code>&lt;tangy-form id=\"form-y\" title=\"Form Y\"&gt;\n  &lt;tangy-form-item\n    id=\"item1\"\n    on-open=\"\n      inputs.first_name.value = T.case.getVariable('first_name')\n      inputs.last_name.value = T.case.getVariable('last_name')\n    \"\n  &gt;\n    &lt;tangy-input name=\"first_name\" label=\"Confirm your first name\" required&gt;\n    &lt;tangy-input name=\"last_name\" label=\"Confirm your last name\" required&gt;\n  &lt;/tangy-form-item&gt;\n&lt;/tangy-form&gt;\n</code></pre>"},{"location":"editor/case-module/how-to-use-form-response-data-in-an-event-form-listing/","title":"How to use Form Response data in an Event Form Listing","text":"<p>The following tutorial uses content from the <code>case-module</code> Content Set found here. </p> <p></p>"},{"location":"editor/case-module/how-to-use-form-response-data-in-an-event-form-listing/#step-1-on-submit-of-a-form-capture-data-as-a-case-level-variable","title":"Step 1: On submit of a Form, capture data as a Case Level variable","text":"<p>In Step 2, we'll template out data for the Event Form listing, but before we can do that we need to transfer some data from a form up to the Event Form data in the Case using the <code>T.case.setEventFormData</code> API.</p> <p>File: <code>./template-event-form-listing/form.html</code> <pre><code>&lt;tangy-form\n  id=\"template-event-form-listing\"\n  title=\"Template Event Form Listing\"\n  on-submit=\"\n    T.case.setEventFormData(caseEvent.id, eventForm.id, 'title', getValue('title'))\n  \"\n&gt;\n  &lt;tangy-form-item id=\"item-1\"&gt;\n    &lt;tangy-input type=\"text\" name=\"title\" label=\"Set the custom title for this Event Form.\"&gt;&lt;/tangy-input&gt;\n  &lt;/tangy-form-item&gt;\n&lt;/tangy-form&gt;\n</code></pre></p>"},{"location":"editor/case-module/how-to-use-form-response-data-in-an-event-form-listing/#step-2-use-templatecaseeventlistitemprimary-property-in-the-case-definition-to-print-the-case-variable-in-the-event-listing","title":"Step 2: Use <code>templateCaseEventListItemPrimary</code> property in the Case Definition to print the Case variable in the Event Listing","text":"<p>After a user has submitted the Event Form mentioned above, we can now use the Event Form data for templating out Event listings. In the Case Definition, we add ternary to check if the variable exists, if it does then print it out in the listing, else show the name of the Event Form Definition. </p> <p>Section of File: <code>./case-definition-1.json</code> <pre><code>  \"templateEventFormListItemPrimary\": \"&lt;span&gt;${eventForm?.data?.title ? eventForm.data.title : eventFormDefinition.name}&lt;/span&gt;\",\n</code></pre></p>"},{"location":"editor/case-module/how-to-use-form-response-data-in-an-event-listing/","title":"How to use Form Response data in an Event Listing","text":"<p>The following tutorial uses content from the <code>case-module</code> Content Set found here. </p> <p></p>"},{"location":"editor/case-module/how-to-use-form-response-data-in-an-event-listing/#step-1-on-submit-of-a-form-capture-data-as-a-case-level-variable","title":"Step 1: On submit of a Form, capture data as a Case Level variable","text":"<p>In Step 2, we'll template out data for the event listing, but before we can do that we need to transfer some data from a form up to the Case level variable. In the example below, we bubble up the <code>title</code> variable in the form to a <code>title</code> variable on the Case. However, note how we prepend the current Event ID on the case level title variable. This is important to do if you are going to bubble up variables that may have the same name across events. By prepending the current Event ID, we guarantee that any other Event that bubbles up a <code>title</code> variable will not overwrite the <code>title</code> variable for this Event.</p> <p>File: <code>./template-event-listing/form.html</code> <pre><code>&lt;tangy-form\n  id=\"template-event-listing\"\n  title=\"Template Event Listing\"\n  on-submit=\"\n    T.case.setVariable(`${caseEvent.id}-title`, getValue('title'))\n  \"\n&gt;\n  &lt;tangy-form-item id=\"item-1\"&gt;\n    &lt;tangy-input type=\"text\" name=\"title\" label=\"Set the custom title for this event.\"&gt;&lt;/tangy-input&gt;\n  &lt;/tangy-form-item&gt;\n&lt;/tangy-form&gt;\n</code></pre></p>"},{"location":"editor/case-module/how-to-use-form-response-data-in-an-event-listing/#step-2-use-templatecaseeventlistitemprimary-property-in-the-case-definition-to-print-the-case-variable-in-the-event-listing","title":"Step 2: Use <code>templateCaseEventListItemPrimary</code> property in the Case Definition to print the Case variable in the Event Listing","text":"<p>After a user has submitted the Event Form mentioned above, we can now get that Case level variable when templating out Event listings. In the Case Definition, we add ternary to check if the variable exists, if it does then print it out in the listing, else show the name of the Event Definition. Note how we are again referencing the variable name by preprending the Event ID on the variable name. This ensures we are getting the <code>title</code> variable for that specific event and not accidentally overriding other/all event listings.</p> <p>Section of File: <code>./case-definition-1.json</code> <pre><code>  \"templateCaseEventListItemPrimary\": \"&lt;span&gt;${T.case.getVariable(`${caseEvent.id}-title`) ? T.case.getVariable(`${caseEvent.id}-title`) : caseEventDefinition.name}&lt;/span&gt;\",\n</code></pre></p>"},{"location":"editor/case-module/on-device-data-corrections-using-issues/","title":"On Device Data Corrections using Issues","text":""},{"location":"editor/case-module/on-device-data-corrections-using-issues/#setup","title":"Setup","text":""},{"location":"editor/case-module/on-device-data-corrections-using-issues/#app-configuration","title":"App Configuration","text":"<p>In your group's <code>app-config.json</code> (and <code>app-config.defaults.json</code>) add the following JSON settings. The first will make the list of Issues appear as a tab on the homescreen, the second will make a \"New Issue\" button appear when viewing submitted Event Forms.</p> <pre><code>{\n  \"showIssues\": true,\n  \"allowCreationOfIssues\": true\n}\n</code></pre>"},{"location":"editor/case-module/on-device-data-corrections-using-issues/#template-the-issue-title-and-description","title":"Template the Issue Title and Description","text":"<p>When creating an Issue on a Device, users are not allowed the opportunity to add define a Title and Description for the Issue they are creating. For this reason, you will find it helpful to develop templates for the Issue Title and Descriptions to give them context. These templates are built on a per Case Definition basis and are top level properties in any Case Definition.</p> <pre><code>{\n  \"templateIssueTitle\": \"Issue for ${caseDefinition.name} with Participant ID of ${T.case.getVariable('participant_id')}, by ${userName}\",\n  \"templateIssueDescription\": \"\"\n}\n</code></pre>"},{"location":"editor/case-module/on-device-data-corrections-using-issues/#usage","title":"Usage","text":"<p>When configured, Data Collectors will have the opportunity to create Issues where they propose changes to forms. After clicking \"New Issue\", they will fill out the form with any changes they see fit. When submitting the form will save the proposed changes in the Issue. The Issue will then be synced up to the server for a Data Manager to review. If the Data Manager approves, they may merge the proposed changes from the server. When proposed changes are merged, the status of the Issue will change to closed and that status change of the Issue will replicate down to the Device on that Device's next sync. Note however the merged changes to the form will not be replicated down to the Device unless two-way sync is set up for that form. </p>"},{"location":"editor/case-module/on-device-data-corrections/","title":"On Device Data Corrections","text":"<p>Enable \"Allow Creation of Issues\" in your App Config for Devices and Data Collectors will be able to propose changes to data that has already been submitted. After the Data Collector syncs, Data Managers may view those proposals in the Issues UI in their corresponding group, then comment or choose to merge the issue. </p> <ul> <li>Video Demo of configuration and usage</li> </ul> <p></p>"},{"location":"editor/case-module/on-device-data-corrections/#configuration","title":"Configuration","text":"<ul> <li>To enable Devices to create Issues, add <code>\"allowCreationOfIssues\": true</code> to the group's <code>client/app-config.json</code> and release to Devices.</li> <li>To allow Devices to see Issues that have been created on the Device or been synced down to the Device, add <code>\"showIssues\": true</code>to the group's <code>client/app-config.json</code> and release to Devices.</li> <li>To template out the resulting Issue title and descriptions, add <code>templateIssueTitle</code> and <code>templateIssueDescription</code> to Case Definitions.</li> <li>Example template for Issue Title: <code>Issue for ${caseService.getVariable('study_id')} (${caseService.getVariable('firstname')} ${caseService.getVariable('surname')}, ${caseService.getVariable('village')}) by ${userId}</code></li> </ul>"},{"location":"editor/case-module/on-device-data-corrections/#on-device-data-merge-using-issues","title":"On Device Data Merge using Issues","text":"<p>Optionally, enable \"Allow Merge of Issues\" in your App Config for Data Collectors on Devices to see the \"Commit\" button on Issues. Clicking the \"Commit\" button will take the form and case changes in the proposal and make them the current version that appears in the case and form response. </p> <p>Although the \"Merge\" setting can be available for all Data Collectors, it is best practice to require some oversite for data collectors to merge issues. The Data Manager can set User Roles to control.</p> <p>To allow merge on tablet by user role, add user role (defined in user-profile.html) the \"update\" permissions section for event definitions or form definitions in the case definition file. For example, the case definition file excerpt below would allow all users except the \"data_collector_role\" to merge cases. </p> <pre><code>{\n    \"id\": \"hosehold-case\",\n    \"formId\": \"household-case-manifest\",\n    ...\n    \"eventDefinitions\": [\n      {\n        \"id\": \"enrollment-event\",\n        \"name\": \"Household Baseline Visit\",\n        \"description\": \"\",\n        \"repeatable\": false,\n        \"estimatedTimeFromCaseOpening\": 0,\n        \"estimatedTimeWindow\": 0,\n        \"required\": true,\n        \"permissions\": {\n          \"create\": [\"admin\"],\n          \"read\":   [\"admin\", \"data_manager_role\", \"data_collector_role\"],\n          \"update\": [\"admin\", \"data_manager_role\"],\n          \"delete\": [\"admin\"]\n        },\n</code></pre>"},{"location":"editor/case-module/on-device-data-corrections/#configuration_1","title":"Configuration","text":"<ol> <li>Consider which strategy best allows data collectors to merge corrections while providing oversight to Issues.</li> <li>To enable Devices to Merge Issues, add <code>\"allowMergeOfIssues\": true</code> to the group's <code>client/app-config.json</code> and release to Devices.</li> <li>Add User Role permissions to the case definitions file</li> </ol>"},{"location":"editor/case-module/prepare-form-logic-for-issues/","title":"Preparing form logic for compatibility with Issues","text":"<p>Issues is a server level feature in Tangerine that allows privileged users to make proposals on changes to Form Responses. When a user is proposing changes, the system unlocks an already completed form. Form Developers must be careful when writing logic they only expect to be ran once in a form.</p> <p>For example, setting a \"caseOpenedOn\" variable in the <code>on-open</code> of a form. When a form is reopened in an Issue, the logic could potentially overwrite the \"caseOpenedOn\" variable using the current date of the proposed change.  </p> <pre><code>&lt;tangy-form\n    on-open=\"\n        T.case.setVariable('caseOpenedOn', moment.now())\n    \"\n&gt;\n</code></pre> <p>This can be remedied by using the <code>T.case.isIssueContext()</code> helper function to ensure our variable setting does not happen in a reopen in the issue context.</p> <pre><code>&lt;tangy-form\n    on-open=\"\n        if (!T.case.isIssueContext()) {\n            T.case.setVariable('caseOpenedOn', moment.now())\n        }\n    \"\n&gt;\n</code></pre> <p>The same is true if you have any <code>&lt;tangy-form-item&gt;</code> level <code>on-open</code> or <code>on-change</code> logic that should not run in when being modified in an Issue. However, writing <code>&lt;tangy-form&gt;</code> logic for <code>on-submit</code> is a little different because <code>on-submit</code> code will not run when in the Issue context. Instead, if some code does need to run, place it in the <code>on-resubmit</code> code for a <code>&lt;tangy-form&gt;</code>.</p> <p>Note in the following example how we only set <code>caseOpenedOn</code> in <code>on-submit</code>. This ensure this variable will only be set once. However, note how put the setting of <code>firstName</code> and <code>lastName</code> in the <code>on-resubmit</code>. This ensures that if the proposed change to this Form Response changes the <code>firstName</code> or <code>lastName</code> values, the Case will be updated to reflect this proposed change.</p> <pre><code>&lt;tangy-form\n    on-submit=\"\n        T.case.setVariable('caseOpenedOn', moment.now())\n        T.case.setVariable('firstName', getValue('firstName'))\n        T.case.setVariable('lastName', getValue('firstName'))\n    \"\n    on-resubmit=\"\n        T.case.setVariable('firstName', getValue('firstName'))\n        T.case.setVariable('lastName', getValue('firstName'))\n    \"\n&gt;\n</code></pre> <p>There are also many input types such as GPS and Signature where it often does not make sense to recollect data upon submitting a proposal on an Issue. Consider adding <code>disable-if=\"T.case.isIssueContext()\"</code> to these inputs.</p> <pre><code>&lt;tangy-gps name=\"gps\" disable-if=\"T.case.isIssueContext()\"&gt;&lt;/tangy-gps&gt;\n&lt;tangy-signature name=\"signature\" disable-if=\"T.case.isIssueContext()\"&gt;&lt;/tangy-signature&gt;\n</code></pre>"},{"location":"editor/case-module/role-base-access/","title":"Role Based Access","text":"<p>A Device Users' Role can be used restrict access to specific Case Events, Event Forms, and inputs on Forms.</p> <ul> <li>Getting started with using Device User Roles</li> <li>Demo: Device User role based access to Event Forms</li> <li>Demo: Device user role based permissions for Case Events</li> </ul> <p>To retrict access to an input on a form by role, use the <code>T.user.getRoles()</code> function to get the roles of the currently logged in user.</p> <pre><code>&lt;tangy-input\n  name=\"example\"\n  label=\"Example\"\n  show-if=\"T.user.getRoles().includes('admin')\"\n&gt;\n&lt;/tangy-input&gt;\n</code></pre>"},{"location":"editor/form-developers-cookbook/","title":"The Tangerine Form Developers' Cookbook","text":"<p>Examples of various recipes for Tangerine Forms collected throughout the years. To create your own example, remix the example on glitch.com.</p>"},{"location":"editor/form-developers-cookbook/#skip-a-question-based-on-input-in-another-question","title":"Skip a question based on input in another question","text":"<p>In the following example we ask an additional question about tangerines if the user indicates that they do like tangerines.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#skip-sections-based-on-input","title":"Skip sections based on input","text":"<p>In the following example, wether or not you answer yes or no to the question, you will end up on a different item.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#valid-by-number-of-decimal-points","title":"Valid by number of decimal points","text":"<p>In the following example, we validate user input by number of decimal points.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#valid-if-greater-or-less-than-other-input","title":"Valid if greater or less than other input","text":"<p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#allowed-date-range-based-on-today","title":"Allowed date range based on today","text":"<p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#flag-choice-as-discrepancy-andor-warning-and-show-or-hide-content-depending","title":"Flag choice as discrepancy and/or warning and show or hide content depending","text":"<p>Run example</p> <p></p>"},{"location":"editor/form-developers-cookbook/#indicate-a-mutually-exclusive-option-in-a-checkboxes-group-such-as-none-of-the-above","title":"Indicate a mutually exclusive option in a checkboxes group such as \"None of the above\"","text":"<p>In the following example when you make a selection of a fruit and then choose one of the mutually exclusive options, your prior selections will be deselected.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#capture-and-show-local-date-and-time","title":"Capture and show local date and time","text":"<p>Sometimes we want to show the user the local date and time to ensure their time settings are correct. </p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#show-a-timer-in-an-item","title":"Show a timer in an item","text":"<p>Let's say you want to show a timer of how long someone has been on a single item. This calculates the time since item open and displays number of seconds since then in a tangy-box.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#capture-the-time-between-two-items","title":"Capture the time between two items","text":"<p>Sometimes we want to know how much time passed between two points in a form. This example captures, the <code>start_time</code> variable on the first item, then <code>end_time</code> on the last item. Lastly it calculates the length of time.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#hard-checks-vs-soft-checks","title":"Hard checks vs. soft checks","text":"<p>A \"hard check\" using \"valid if\" will not allow you to proceed. However a \"soft check\" using \"warn if\" will allow you to proceed after confirming.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#set-selected-value-in-radio-buttons","title":"Set selected value in radio buttons","text":"<p>In the following example we set the value of a <code>&lt;tangy-radio-buttons&gt;</code>.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#dynamically-prevent-proceeding-to-next-section","title":"Dynamically prevent proceeding to next section","text":"<p>In the following example hide the next button given the value of some user input.</p> <p>Run example</p> <p></p>"},{"location":"editor/form-developers-cookbook/#proactive-input-validation","title":"Proactive input validation","text":"<p>In the following example we validate an input after focusing on the next input. This approach is more proactive than running the validation logic when clicking next or submit. </p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#content-box-with-tabs","title":"Content Box with Tabs","text":"<p>In the following example we display content in a set of tabs.  </p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#dynamic-changing-of-text-color","title":"Dynamic Changing of Text Color","text":"<p>In the following example we change the color of text depending on a user's selection.  </p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#use-skip-if-to-reference-variable-inside-tangy-inputs-group","title":"Use skip-if to reference variable inside tangy-inputs-group","text":"<p>In the following example a <code>skip-if</code> refers to an other variable local to the group itself is in. The trick is using backticks around the variable name (not quotes) you are referencing and prepending the variable name you are referencing with <code>${context.split('.')[0]}.${context.split('.')[1]}.</code>.  </p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#use-valid-if-to-reference-variable-inside-tangy-inputs-group","title":"Use valid-if to reference variable inside tangy-inputs-group","text":"<p>In the following example a <code>valid-if</code> refers to an other variable local to the group itself is in. The trick is using backticks around the variable name (not quotes) you are referencing and prepending the variable name you are referencing with <code>${input.name.split('.')[0]}.${input.name.split('.')[1]}.</code>.  Watch out for the gotcha of not using <code>input.name</code> instead of <code>context</code> like we do in a <code>skip-if</code>.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#dynamic-location-level","title":"Dynamic Location Level","text":"<p>In the following example we empower the Data Collector to select which Location Level at which they will provide their answer. This example can also be used in a more advanced way to base the level of location required for entry given some other set of inputs.</p> <p>Run example </p> <p></p>"},{"location":"editor/form-developers-cookbook/#prevent-user-from-proceeding-during-asynchronous-logic","title":"Prevent user from proceeding during asynchronous logic","text":"<p>Sometimes in a form the logic calls for running some code that is asynchronous such as database saves and HTTP calls. As this logic runs, we would like to prevent the user from proceeding in the form. This is a job for a <code>&lt;tangy-gate&gt;</code>. Tangy Gate is an input that by default will not allow a user to proceed in a form. The gate can only be \"opened\" by some form logic that set's that Tangy Gate's variable name's value to <code>true</code>. This gives your logic in your forms an opportunity to run asynchronously, blocking the user from proceeding, then when async code is done your code sets the the gate to open.</p> <p>Run example </p> <p></p>"},{"location":"editor/getting-started-editor/","title":"Overview","text":"<p>Tangerine contains an extremely extensible foundational framework that allows the form developer to highly customize the core functioanlity, actions, and progression. The following section provides guidance and common examples for extending Tangerine.</p>"},{"location":"editor/getting-started-editor/#tangerine-editor","title":"Tangerine Editor","text":"<p>In Tangerine, you start by building your forms (evaluations, tools, or surveys) using the platform\u2019s Editor interface. It is user-friendly and lets you set up the structure of your form and add all your questions using a variety of question types. Once you\u2019re happy with the setup, you can preview your form to see how it looks and make any tweaks if needed. Next, you deploy your app and install it on a mobile device or use it in the Chrome browser. Now, data collection begins. Tablet users can start filling out forms by selecting any of the ones created for their group. Data collectors sync their devices and make the data available on the platform\u2019s backend. A data manager can export it as CSV file ready for reporting integration or direct analysis in Excel.</p> <ul> <li>Create a New Group</li> <li>Create New Form </li> <li>Editing the Form</li> <li>Adding Sections and Questions</li> <li>Different Input Types</li> <li>Location list import</li> <li>Skip Logic</li> <li>Validation</li> <li>Calculated Inputs</li> <li>Deployment</li> <li>Downloading your data</li> <li>User Management</li> </ul>"},{"location":"editor/getting-started-editor/#tangerine-preview","title":"Tangerine Preview","text":"<ul> <li>Tangerine Preview</li> </ul>"},{"location":"editor/getting-started-editor/add-sections/","title":"Adding Sections and Question to a Form","text":"<p>To add a new section to your instrument, hit \"ADD SECTION\".</p> <p></p> <p>The interface allows a drag-and-drop feature which enables reordering of the sections already created. The order in which the sections are listed, is the same as the sequence of screens that will be shown on the tablet when the tablet user is filling in the form.</p>"},{"location":"editor/getting-started-editor/add-sections/#section-editor","title":"Section Editor","text":"<p>Upon adding a new section, or selecting to \"EDIT\" your instrument section, you will see the section editor screen below.</p> <p></p> <p>If this is a new section, you might give it a new name from the section header. Click the pen icon on the right of the blue bar and overwrite the \"title\". Or any other of the configuration options. Then hit SUBMIT to save your edits.</p> <p></p>"},{"location":"editor/getting-started-editor/add-sections/#section-options","title":"Section Options","text":"<p>Each one of the sections has some options that you can control:</p> <p>Show this section in the summary at the end -- mark only if this section is the last one, and if you have coded some summary/feedback otherwise leave unchecked.</p> <p>Hide the back button -- checking this option will remove the Back button from the section when rendered on the tablet.</p> <p>Hide the next button -- hides the Next button on a section. Sometimes advancing the page may depend on the selection of an item, just like it is on some EF inputs. Generally, you keep this unchecked.</p> <p>right-to-left orientation -- switches the position of the Back and Next buttons for RTL languages.</p> <p>Hide navigation labels -- Hides the label from the Back and Next buttons so that it becomes an arrow.</p> <p>Hide navigation icons -- Hides the arrow from the back and Next buttons. If both this and the above are checked you will only see an orange button without labels and text.</p> <p>The on-open and on-change events allow you to insert complex skip logic or other custom code</p> <p>Threshold: Number of incorrect answers before disabling remaining questions -- This option is used in conjunction with radio button questions only. Set it to the number of consecutive incorrect replies before the test is discontinued. You must mark an option in the radio button group as Correct for this to work. Only one correct option per question can be defined.</p> <p></p> <p>To add an item to your instrument section, click</p> <p>This opens the item type selection interface.</p> <p></p> <p>These elements are subdivided into groups of item types (e.g., inputs, location, lists, misc):</p>"},{"location":"editor/getting-started-editor/add-sections/#inputs","title":"Inputs","text":"<p><code>TEXT</code>: This item type is a standard numbers and letters field</p> <p><code>NUMBER</code>: This item type opens up the number keyboard on the tablet and doesn't allow any other non-number characters to be inserted here</p> <p><code>EMAIL</code>: This item type includes automtaic validation for email entry</p> <p><code>ON-SCREEE-KEYBOARD</code>: This item type opens a keyboard with custom keys, that is the only source for data entry for this input. The keyboard is shown on the screen above the display of the text</p>"},{"location":"editor/getting-started-editor/add-sections/#date-and-time","title":"Date and time","text":"<p><code>DATE</code>: This item type renders a calendar widget on the tablet</p> <p><code>TIME</code>: This item type displays a clock hour selection on the tablet</p> <p><code>PARTIAL DATE</code>: This item type displays a partial date input where parts of the date can be left empty.</p> <p><code>EHTIOPIAN DATE</code>: This item type displays a partial date input, with the Ethiopian calendar,  where parts of the date can be left empty.</p>"},{"location":"editor/getting-started-editor/add-sections/#lists","title":"Lists","text":"<p><code>CHECKBOX</code>: This item type allows for multiple answers to be selected from a list of options</p> <p><code>CHECKBOX GROUP</code>: Allows for multiple answer options to be selected from a group of options</p> <p><code>DROPDOWN (select)</code>: This item type allows for a single answer selection for longer lists</p> <p><code>RADIO BUTTONS</code>: This item type only allows for a single answer selection from a list of answer options</p> <p><code>RADIO BLOCKS</code>: This item type only allows for a single answer selection from a list of answer options. It shows the input with larger buttons, including text, image, or even audio attached to them</p>"},{"location":"editor/getting-started-editor/add-sections/#toggles","title":"Toggles","text":"<p><code>CHECKBOX</code>: This item type only allows for the answer to be on or off</p> <p><code>TOGGLE BUTTON</code>: This item type only allows for the answer to be on or off</p>"},{"location":"editor/getting-started-editor/add-sections/#location","title":"Location","text":"<p><code>GPS</code>: This item type automatically collects GPS coordinates of the tablet</p> <p><code>LOCATION</code>: The location item type requires a list of locations, e.g. school names by district and region to be imported to the Tangerine editor. Check out the location list section</p>"},{"location":"editor/getting-started-editor/add-sections/#content-display","title":"Content Display","text":"<p>`IMAGE: The item allows you to select an image already uploaded by the media library and present it to the user on a particular section.</p> <p><code>PHOTO CAPTURE</code>: This item type allows the user to take a photograph and attach it to the form.</p> <p><code>VIDEO CAPTURE</code>: This item type allows the user to take a video and attach it to the form.</p> <p><code>HTML CONTENT CONTAINER</code>: This item type allows for flexible integration of headers, help text, or transition messages that do not require any user input or response. We use this item type in Tangerine:Teach to insert instructions for each assessment for the teacher.</p> <p><code>HTML TEMPLATE</code>: This item type allows you to enter HTML code and variable value replacement code. Use ${} to enclose any code.</p> <p><code>REPEATABLE HTML GROUP</code>: This item type allows you to create a repeatable group of questions. Think of this as adding another row to a table. When the user clicks Add Another the same variables are duplicated, and the user can continue data entry. We use this item for an unknow number of variables. </p>"},{"location":"editor/getting-started-editor/add-sections/#miscellaneous","title":"Miscellaneous","text":"<p><code>SIGNATURE</code>: this input type allows you to capture a signature by the assessor.</p> <p><code>CONSENT</code>: This item is a special function for participant consent. If the participants responds that no consent is given, the form will be closed, and data saved accordingly.</p> <p><code>QR CODE SCANNER</code>: This item allows scanning of a QR and Data Matrix codes. Tangerine will capture and save the target info (e.g., URL).</p> <p><code>EF TOUCH</code>: This item type is to assess children's executive functions, including working memory, inhibitory control, and cognitive flexibility (requires RTI manual support to upload your images and sounds).</p> <p><code>ACASI</code>: This item type allows the use of audio and image files in the assessment. It was designed to be used for self-evaluation.</p> <p><code>TIMED GRID</code>: This item type facilitates timed assessment approaches, e.g., to assess letter sound knowledge, oral reading fluency or math operations.</p> <p><code>UNTIMED GRID</code>: This item type facilitates assessment approaches that are not timed, but require many items, e.g., oral counting, untimed reading comprehension tasks, etc.</p> <p><code>CONDITIONAL GATE</code>: This item type of item is highly technical and can be used to confirm that a condition evaluated to true before continuing. At this moment this is only used in the case module implementation of Tangerine.  </p> <p>Depending on the element chosen, an interface for providing more detail on the item being rendered/created is presented in the Item Editor.</p>"},{"location":"editor/getting-started-editor/calculated-inputs/","title":"Calculated inputs","text":""},{"location":"editor/getting-started-editor/calculated-inputs/#calculated-inputs","title":"Calculated inputs","text":"<p>Calculated inputs can be created in two steps:</p> <ul> <li>Create a hidden input to hold the calculation. It should be on the same section as the source inputs or a next section.</li> <li>Create formula in the on-change event, of the section containing the calculated input, so that you populate its input.</li> </ul>"},{"location":"editor/getting-started-editor/calculated-inputs/#steps","title":"Steps","text":"<ul> <li>Create a hidden input on the same section as the source, or any of the following section. Use the on-change event to do the calculation</li> </ul> <pre><code>inputs.calculated.value = parseInt(getValue('Variabel1')) + parseInt(getValue('Variabel2')) + parseInt(getValue('Variabel3'))\n</code></pre> <ul> <li>Add the calculation logic to the on-change event of the section</li> </ul> <p>In this example my hidden input variable is calculated, and I am summing up 3 other inputs with variables Variable1, Variable2, and Variable3.</p> <p></p> <p>Every time the value of any of the three variables changes, the hidden input will update the calculation. This calculated input will be stored in the data and visible in the CSV.</p> <p>## Examples</p> <p>You can use similar logic to sum up the number of responses in a radio button group, on the condition that all values for the radio/checkboxes buttons must be numeric. </p> <pre><code>inputs.calculated.value = parseInt(getValue('Variabel1')) + parseInt(getValue('Variabel2')) + parseInt(getValue('Variabel3'))\n</code></pre> <p>To sum up a all answers for one checkbox group, you can use similar logic Variabel1:</p> <pre><code>inputs.calculated.value = document.querySelector('tangy-checkboxes[name=Variabel1]').value.reduce((acc, item) =&gt; acc + (item?.value === 'on' ? parseInt(item.name, 10) || 0 : 0), 0)\n</code></pre> <p>To sum up multiple checkbox groups Variabel1 + Variabel2:</p> <pre><code>inputs.calculated.value = document.querySelector('tangy-checkboxes[name=Variabel1]').value.reduce((acc, item) =&gt; acc + (item?.value === 'on' ? parseInt(item.name, 10) || 0 : 0), 0) + document.querySelector('tangy-checkboxes[name=Variabel2]').value.reduce((acc, item) =&gt; acc + (item?.value === 'on' ? parseInt(item.name, 10) || 0 : 0), 0)\n</code></pre>"},{"location":"editor/getting-started-editor/create-new-form/","title":"Creating a New Instrument/Form","text":""},{"location":"editor/getting-started-editor/create-new-form/#prerequisite-existing-group-or-create-a-new-group","title":"Prerequisite: Existing group or create a new Group","text":"<p>After creating a group or opening an existing one, you will be presented with various options. The first action that you may wish to take is to create a new Form</p> <p></p> <p>From the main menu options, select Author and then click Forms. This will bring up a listing of all forms for this group.</p> <p>You will notice that there is also a User Profile form. This form represents the profile each user must fill in on the tablet, after they create their user login details. All information that you require in the user profile is attached to each record in the CSV export file. The user profile represents your assessor's information.</p> <p>Click the plus icon  to create a new form. A new form with a default name is created and a default section is placed into this form. To change the form's name, type in the new text and click Save.</p> <p>On this page we see the form's name and beside it there are 4 buttons:</p> <p>Edit HTML - this action button allows us to edit the code for the form. Use this only if you are an advanced user with knowledge of HTML</p> <p>Preview - this button allows us to preview our work. Note that when we use the preview function, no data is saved to the database.</p> <p>Save - this action button allows us to save the order of sections or their deletion. This button has another hidden function. When you press it, Tangerine also checks if there are duplicated variables on the form and will alert you if such are found.</p> <p>Advanced - same as clicking the \"advanced settings\" link below the form title - here we have access to configure: the Cycle Sequences and the form's on-open, on-change, and on-submit events. We mostly use the on-change event to insert skip logic to hide or show entire sections. All other events can be used to insert custom coding into your form.</p>"},{"location":"editor/getting-started-editor/create-new-form/#form-actions","title":"Form Actions","text":"<p>Beside each of the forms you will see some action available. From here you can Edit, Print, Copy, Delete, or Archive a form. We recommend that you archive your forms instead of removing them. This will ensure that you can export the data of a form that is no longer in use.</p> <p></p> <p>Click on the pen icon to modify the form. Each form contains several sections that represent your form's pages</p> <p>Click on the print icon to open a new printable menu where you can select two of the print details. This printable view we often use to quality assure (QA) the instrument or to get a list of variables and their definition. You can also use the print screen to save paper copy of your form.</p> <p></p> <p>Click on the copy icon to create a copy of the current instrument. You can copy an instrument to a different group or to the current one.</p> <p>Click on the trash icon to delete this form.</p> <p></p> <p>Click on the archive icon to archive an assessment. All archived forms are moved to the bottom of the page</p> <p></p> <p>If a form is archived, click the un-archive button to activate a form. Only active forms are displayed in tablet listing of forms to the assessor.</p>"},{"location":"editor/getting-started-editor/create-new-group/","title":"Creating a New Group","text":"<p>Upon logging into your Tangerine instance, you will see a screen listing your Tangerine groups. You might think of groups as discrete data collection efforts that might contain several instruments or forms. If you have, e.g., a baseline data collection and an endline data collection for the same project, you might make these two different groups. When packaging your instruments into the apk (.apk is the application installation file format for Android devices) for installation on an Android device, Tangerine packages all instruments in a group. Thus, you should set up groups and categorize instruments accordingly.</p> <p></p> <p>On the main group listing page, click \"+\" button in the bottom right corner to create a new group</p> <p></p> <p>A group can be configured to display a drop-down  to display available content-sets for which to configure the new group.</p> <p></p> <p>Enter a name for your group and click Submit</p> <p></p> <p>Warning</p> <p>If you are using the free service you are not able to create new groups.</p> <p>If you are a Tangerine subscriber, or run Tangerine on your own server, the user1 account can be configured to be the only account with permissions to create new groups. If this is desired, please send a request for this configuration to support@tangerinehelp.zendesk.com Any Admin user can create a new group unless configured for the user1 account only</p>"},{"location":"editor/getting-started-editor/downloading-your-data/","title":"Downloading your data (Download CSV)","text":"<p>All collected and synced data is available for you to download in a CSV format from the server. Each file downloaded contains some metadata output plus all of you variables. To find out how your variables map to the values in the csv file, please inspect your meta data export first (accessible from the form printing action under the Author tab)</p> <p>To access the csv generation and download screen go to your group and then select Data. Depending on the permissions you have for your group, you will see Dashboard, Download Data/Export, and Uploads tabs available for selection. Under the Download Data tab there are 3 options:</p> <p>Request spreadsheet - here you can create a download link for your csv of bundle multiple export files in a zip Spreadsheet Requests - here you will find a historical of generated requests that contain the exported data for the selected forms, at the time of the request. Note that we delete this links after one month, meaning that here you will see active links for only the past month Manage Spreadsheet templates - this links allows you to name and create a template with only selected columns for your csv export</p> <p></p> <p>Let's see how to generate a spreadsheet. Click the Request Spreadsheet button. On the next page you will see a header filter, where you can select the month and year for the export, or leave as is to export all data. You will also see a filter for \"Exclude PII\" - marking this option allows you to exclude personal information from the export (Note that only variables that have been configured as PII will be excluded). If you want you can also give an optional description to your Request.</p> <p>Under the form selection area, you will see that you can select multiple form results to be exported or all forms. If you have created a data template you can slo select it from the drop down list, otherwise leave as \"All data\"</p> <p>In the below example, we have 3 forms selected and no filters for month/year. Click the Submit Request button to start the export generation. Note that while the generation of the file is in progress you can mouse away and do other actions in Tangerine. We will see how to get to a previously generated request further down.</p> <p></p> <p>While the files are being generated you will see their status updated.Below I see that there are 3 forms in the queue, the first one is starting, and the other two are queued. You can also see. on the top right the \"download all\" button is greyed out</p> <p></p> <p>Once the files are generated and the request completed you can download them. On the below screenshot we see:</p> <p>We can download each of the files individually by clicking Download file link on the right side of each form name We can download all files in a zip but clicking the Download all button on the top right.</p> <p></p> <p>Now let's go back to the Data tab. This time under the Data Download option click the Spreadsheet Request button. This will bring you to all historically generated spreadsheet requests. On the below screenshot I see that there are 12 pages of previous/historical requests. On the most recent page, which is the one that loads by default, I see that the top file is with status Available, meaning that I can download it and the rest of the requests on this page have already been removed, since they are older than 1 month. The status for those is File removed and there is no link. From this screen, you can hit the download button beside the request to get the zip file containing all form results. Or, you can click the More info link to go to the same screen that we saw earlier during the file generation and download the files individually. </p> <p>Warning</p> <p>To make use of the Exclude PII function, all of your  personally identifiable inputs must be marked like such on the input edit page, or when inserting a new input/question on the insert new input page. All data must be collected prior to this configuration</p> <p>To correctly interpret your data you need to know each variable and the corresponding values for the answer option. Please use the form's metadata print function under the form listing (go to Author-&gt;Forms). Access the metadata by clicking the print icon next to the form name and then select metadata.</p> <p></p> <p>Each CSV file includes all data from the form responses. We can think of these data as data and metadata. Each line of the data file represents one data entry for your instrument.  The values displayed under each variable correspond to the values you have assigned to each response option when designing your instrument.</p> <p>For each variable in Tangerine you will see a column or columns in the csv file. Some outputs like checkboxes and grids spread across multiple columns. For checkboxes you will see a column named using a this pattern \"VariableName_Value\". This means that for each option value pair for the checkbox group there will be a column . Similarly grids provide columns named \"\"GridVariableName_ItemPosition\" meaning that for each item in the grid you will see a column with the item position.</p> <p>If the CSV generation was successful, the following screen will present the group name, Form id , Start time and progress of the CSV download.  Click Download to download the file.</p> <p></p> <p>Once the CSV has been downloaded, you can find it in your Downloads folder.</p>"},{"location":"editor/getting-started-editor/downloading-your-data/#metadata-included-in-csv","title":"Metadata included in CSV","text":"<p>To correctly interpret your data you need to know each variable and the corresponding values for the answer option. Please use the form's metadata print function under the form listing (go to Author-&gt;Forms). Access the metadata by clicking the print icon next to the form name and then select metadata.</p> <p></p> <p>Each CSV file includes all data from the form responses. We can think of these data as data and metadata. Each line of the data file represents one data entry for your instrument.  The values displayed under each variable correspond to the values you have assigned to each response option when designing your instrument.</p> <p>For each variable in Tangerine you will see a column or columns in the csv file. Some outputs like checkboxes and grids spread across multiple columns. For checkboxes you will see a column named using a this pattern \"VariableName_Value\". This means that for each option value pair for the checkbox group there will be a column . Similarly grids provide columns named \"\"GridVariableName_ItemPosition\" meaning that for each item in the grid you will see a column with the item position.</p> <p>Each csv output from data collected by Tangerine has a set of metadata variables that are automatically output. Here is the current list:</p> Variable Name Meaning _id 32-digit uuid identifying the unique form taken formId text name of the form startUnixtime unix timestamp that the form was first opened endUnixtime unix timestamp that the form was completed lastSaveUnixtime unix timestamp that the form was last opened and saved buildId 32-digit uuid identifying the app version buildChannel type of build: will be either build or production deviceId 32-digit uuid identifying the registered device groupId identifyer of the Tangerine group to which this device is registered complete TRUE or FALSE, whether the form is complete tangerineModifiedByUserId 3 2-digit uuid identifying the registered user who filled the form caseId Only for Case module configuration,32-digit uuid identifying the Case the form is associated with eventId Only for Case module configuration, 32-digit uuid identifying the Event within the Case that the form is associated with eventFormId Only for Case module configuration, 32-digit uuid identifying the Form within the Event within the Case that the form is associated with participantId Only for Case module configuration, 32-digit uuid identifying the participant for whom the form was filled GridVar.duration For a grid variable GridVar, this indicates the time limit/duration for the grid GridVar.time_remaining For a grid variable GridVar, this indicates the time remaining on the grid GridVar.gridAutoStopped For a grid variable GridVar, this indicates if the grid stopped using the auto stop rule GridVar.autoStop For a grid variable GridVar, this indicates the number of items that trigger the auto stop GridVar.item_at_time For a grid variable GridVar, this indicates the item at the Xth second GridVar. time_intermediate_captured For a grid variable GridVar, indicates the time time of the intermediate capture. GridVar.number_of_items_correct For a grid variable GridVar, indicates the number of correct items on the grid GridVar.number_of_items_attempted For a grid variable GridVar, indicates the number of items attempted on the grid GridVar.items_per_minute For a grid variable GridVar, indicates the number of items per minute read by the child. SectionId_firstOpenTime For a section with ID \"sectionId\" this it eh time stamp when it was first opened. sr_classId For Teach module configuration, the Id of the class for this student sr_studentId For Teach module configuration, the Id of the student"},{"location":"editor/getting-started-editor/downloading-your-data/#user-profile-metadata","title":"User Profile Metadata","text":"<p>The information for the user logged in to the Tangerine app is also included in the CSV outputs. This includes the metadata below. The location metadata is based on the location defined in the location list. The table below includes three location levels as an example. </p> Variable Name Meaning user-profile._id 32-digit uuid identifying the registered user who filled the form user-profile.item-1_firstOpenTime unix timestamp of when the form was opened user-profile.item-1.first_name user's first name user-profile.item-1.last_name user's last name user-profile.item-1.gender user's gender user-profile.item-1.phone user's phone number user-profile.item-1.location.Region user's assigned Region user-profile.item-1.location.District user's assigned District user-profile.item-1.location.Village user's assigned Village"},{"location":"editor/getting-started-editor/downloading-your-data/#unix-timestamps-conversion","title":"UNIX Timestamps conversion","text":"<p>To convert any of the unix timestamp inputs to readable dates, use this formula in Excel in a new column: =A2/(60*60*24000) +\"1/1/1970\" Replace the A column with the corresponding column containing the timestamp.  Now select the entire column and format it as Date or date + time. This will give you the human readable date and time.</p> <p>What can I do with Tangerine\u2019s timestamps?</p> <p>Check precise duration of an assessment or subtests.  If you notice your overall assessment time (per assessor or per group) is lengthy, you may wish to use the timestamps to provide data on which subtests are the most time consuming. Confirm when data was collected.  If you have suspicions that your data collector may have manually changed the values on your Date/Time screen against your instructions, you can check for inconsistencies between the Date/Time subtest data and the timestamps, as these cannot be altered by the user unless s/he also alters the date and time settings on the device.</p>"},{"location":"editor/getting-started-editor/downloading-your-data/#downlaoding-data-video","title":"Downlaoding data video","text":""},{"location":"editor/getting-started-editor/edit-form/","title":"Editing the Form","text":"<p>Once you have selected to edit your new or existing instrument/form, you will see a screen like the one below. This view lists the different sections of your instrument. Each section can contain one or more items.</p> <p>On the tablet, items in any one section can be seen on a single screen. The user moves through items by \"scrolling\" down the screen. The user moves through sections by hitting \"Next\" or \"Back\" on the tablet.</p> <p></p> <p>The form editor provides the interface for adding and editing instrument sections and items. This interface provides controls that make the following actions possible:</p> <p>EDIT HTML - Clicking this button shows you the HTML code behind the form. Please edit the HTML with care.</p> <p>PREVIEW -- This control enables you to have a preview of your form in the current state</p> <p>SAVE -- This control allows you to save the form in its current state</p> <p>ADVANCED -- This Control enables you to access the on-open logic and on-change logic. This logic is used for skipping an entire instrument section.</p> <p>ADD SECTION -- This allows you to add a section of items to your instrument.</p> <p>For each section there are two actions available.</p> <p>COPY SECTION   -- This icon copies the section and autmatically renames all variables. </p> <p>EDIT  -- This icon opens the interface to edit an instrument section (e.g., add items)</p> <p>DELETE   -- This icon deletes this instrument section</p> <p>In this view, you can drag sections to reorder them.</p>"},{"location":"editor/getting-started-editor/input-types/","title":"Different Input Types","text":"<p>After clicking the Insert Here button when inside your section, you will see a list of all question types available to you:</p> <p> </p> <p>All questions come in 7 groups</p> <ul> <li>Inputs - used for text or number inputs</li> <li>Date/Time - used for date and time inputs</li> <li>Lists - used for multiple/single answer selection question</li> <li>Boolean - used to indicate that something was checked</li> <li>Location - used to collect GPS location and provide Location dropdown based on the location list</li> <li>Content Display - used to display formatted HTML text or images to the screen</li> <li>Speciality - used in various settings to collect signatures, consent forms, grids, and other types of inputs.</li> </ul>"},{"location":"editor/getting-started-editor/input-types/#section-item-editor","title":"Section item Editor","text":"<p>The section item editor screen is similar for many of the item types. It usually contains the following common elements:</p> <p> </p> <ul> <li> <p>Variable name: This name has to be unique for any instrument/form, as this will be used for the CSV data output as column header with each observation/child assessed/interview being a row. Avoid special characters and spaces, use lowercase only (e.g., \"age\").</p> </li> <li> <p>Label: This will be the item label/name that will be displayed to the user (e.g. \"How old are you?\")</p> </li> <li> <p>Question number: If you input a number in here, you will see that the entire questions is moved to the right and the question number stands out when looking at the page. Use this if you are looking for a visual effect like this.</p> </li> <li> <p>Hint Text: This field allows you to add text that acts as a hint for the user (e.g., \"Enter child's age or year of birth, if known\")</p> </li> </ul> <p>Toggle (On/Off) settings per question</p> <ul> <li> <p>Required: Selecting this checkbox marks the element as a required field. This ensures that users will enter a value before proceeding to other instrument sections or finalizing the instrument/form.</p> </li> <li> <p>Disabled: Selecting this checkbox marks the element as inactive. The item is visible to the user on the tablet, but its value cannot be changed.</p> </li> <li> <p>Hidden: Selecting this checkbox makes the element inactive AND invisible on the tablet.</p> </li> <li> <p>PII - Personally Identifiable Information. This setting marks the input as PII which lets you remove this field from the CSV export file when this option is selected. Easily share data by de-identifying it whn using this option.</p> </li> </ul> <p>You will have access to two more tabs allowing you to add Skip Logic and Validation to your questions.</p> <p>Conditional Display tab</p> <ul> <li> <p>Skip if -  Use this field to define logic for the input to be omitted if the condition is true.</p> </li> <li> <p>Show if - Use this field to define logic for the input to be displayed when the condition is true.</p> </li> </ul> <p>Find examples of skip logic here </p> <p>Validation tab</p> <ul> <li> <p>Warn if - fail the user submission with a warning only once. This is to alert the user that perhaps they are entering something out of the defined boundaries. The warn if logic will allow the user to proceed if they click the Next/Submit button a second time.</p> </li> <li> <p>Warning Text - The warning text to be displayed to the user when the condition is triggered.</p> </li> <li> <p>Valid if - define logic to contain a valid definition of the input</p> </li> <li> <p>Error text -  the text to be displayed when the above condition is not met.</p> </li> </ul> <p>Find examples of validation logic here </p>"},{"location":"editor/getting-started-editor/input-types/#inputs","title":"Inputs","text":"<ul> <li> <p>Text - use this input to ask the user to type in some text. Here the user can type in anything. Check out this input's configuration options Text, Email, Date, Time Inputs Configuration</p> </li> <li> <p>Number - use this input to ask the user to type in some number. Note that this input doesn't allow text to be inserted into the field. On tablets the number keyboard will open automatically. This input also allows us to specify a minimum and maximum numbers under the Validation tab Check out this input's configuration options under Number Input Configuration</p> </li> <li> <p>Email - use this input to allow the user to only enter email addresses.</p> </li> </ul> <p> </p> <ul> <li>Date and Time</li> </ul> <p>Date - The date input allows us to select a date from a calendar input.  </p> <p>Partial Date - is a special date that allows us to collect the date with some missing elements. We can mark the day as Unknown, or the year as Unknown.   </p> <p>Time - this input allows us to select the time. </p> <p> </p>"},{"location":"editor/getting-started-editor/input-types/#gps-item","title":"GPS Item","text":"<p>Use the GPS item to record the location (longitude &amp; latitude) of the user while filling in the instrument/form.</p> <p>We suggest placing a GPS item always in its own section. Do not combine with other items.</p> <p>When selecting to add an item of the GPS type, Tangerine presents the below item editor screen.</p> <p> </p> <p>The following might be a way to configure this item:</p> <p>Variable name: Enter \"gps\".</p> <p>Hint Text: Leave blank</p> <p>Hit \"SUBMIT\" to see the below item added to the section editor.</p> <p> </p> <p>On the tablet this item will look like this:</p> <p> </p>"},{"location":"editor/getting-started-editor/input-types/#location","title":"Location","text":"<p>This item type offers a dropdown listing of predefined location information such as, e.g., region, district, and school name. Before you add this item to your form, you need to upload a location list and configure Tangerine:</p> <p>To see a video of how to do this Watch the video</p> <p>First, decide what levels you would like to show and prepare a CSV file that contains your locations and ids. Each column header will present a location level (e.g. column A header might be region; column B header might be district, etc.). Make sure each level/column header contains only a single word and no spaces.</p> <p>Second, define the location levels for Tangerine. Click Configure/Location Lists and add the desired levels using the '+' sign</p> <p>Click \"Create a New Location Level\".</p> <p>Enter the name of the \"highest\" location level under \"Label\" (e.g. region). Repeat this process for all other location levels, however, for each \"child\" level, select which is the parent level. E.g. in the case of district, the \"Parent Level\" would be \"region\", and so forth. Hit \"Submit\" to save.</p> <p>Warning</p> <p>You cannot delete location levels. Be careful and deliberate as you define them for your group. If you made a mistake or need to make changes, contact the Tangerine helpdesk.</p> <p>Next, click the Import tab and select \"Import CSV\". Double check that your CSV file contains only those columns that you have defined as levels and spelled exactly the same!</p> <p>Download a sample location list file with IDs:(https://drive.google.com/file/d/1y3X0aMJKRYx51--jPC_3OUkMpmkhyEn-/view) </p> <p>Once you selected the CSV, Tangerine will ask you to map the location levels you already defined to the column headers found in your csv file.</p> <p> </p> <p>Click on the small arrows to select the matching column header. For each ID field, select \"Map a column to a level and select \"AutoGeneratedID\" for the ID as shown in the example below.</p> <p> </p> <p>Then click \"Process CSV\" as shown in the screen above. Once processing is completed, you will receive a notification like this:</p> <p> </p> <p>Once you have successfully uploaded a location list and prepared Tangerine, you can add the location input item to your form. The following might be a way to configure this item, once you completed the above steps.</p> <p>If you think that your location list may change significantly, and you'd like to re-upload it at some point thus not implementing any changes manually, consider adding manual IDs to your location file. In the instruction above, you saw how to add the Autogenerated ID that Tangerine inserts. These IDs, however, are not persisted when you re-upload your location file. In such cases, where you know that you'd rather re-upload the entire file, we recommend that you insert an ID column and you preserve those IDs across versions of your location list. By doing that you ensure that any matching on location IDs (and not on Location labels) will be persisted.</p> <p>To upload a location file with IDs, first create those IDS in the Excel file. Then, on the Map location field instead of selecting Autogenerated ID, select the column representing the ID for the corresponding level.</p> <p>Warning</p> <p>We highly recommend that you create a location list export before importing any new data. Click the Export tab and export your current location list. ALways work with this export file to make sure your list is up-to-date</p> <p>Warning</p> <p>Upon upload you are wiping out the location list. All previous results collected will be missing the labels for those location and will contain only the old IDs; all data on the tablets under the Visits tab will show the ID rather than the label. This is why we highly recommend altering the location list manually or maintaining the IDs across different version of the location list in your Excel file.</p> <p>Check out this Excel file to see a location list with IDs that you can import in Tangerine. The formula for generating the IDs can be copied to your own file: Download a sample location list file with IDs: (https://drive.google.com/file/d/1y3X0aMJKRYx51--jPC_3OUkMpmkhyEn-/view) </p> <p> </p> <p>Variable name: Enter \"location\".</p> <p>Hint Text: Leave blank</p> <p>Show levels (ex. county,subcounty): Enter \"province,district,school\"</p> <p>Show meta-data: Leave blank</p> <p>Hit \"SUBMIT\" to see the below item added to the section editor.</p> <p>On the tablet this item will look like this:</p> <p> </p> <p>Warning</p> <p>Without a location list, no location will be displayed, and the item will be seen as \"loading\".</p>"},{"location":"editor/getting-started-editor/input-types/#checkbox-group-checkbox-radio-buttons-or-dropdowns","title":"Checkbox group (Checkbox, Radio Buttons, or Dropdowns)","text":"<p>This item type lets you define a checkbox item that lets a user pick one or more options.</p> <p>The following might be a way to configure this item:</p> <p> </p> <p>Variable name: Enter \"books\".</p> <p>Label: Enter \"What kind of books do you like to read?\"</p> <p>Hint Text: Enter \"Tick all that apply\"</p> <p>Value (answer option): Enter the data value for the first answer option, e.g., \"0\"</p> <p>Label (answer option): Enter the label for the first answer option, e.g., \"None\"</p> <p>Hit \"ADD ANOTHER\" to add additional answer options, e.g.:</p> <p>Value (answer option): \"1\"</p> <p>Label (answer option): \"Storybooks (fiction)\"</p> <p>Hit \"ADD ANOTHER\" to add additional answer options, e.g.:</p> <p>Value (answer option): \"2\"</p> <p>Label (answer option): \"Books about real things (non-fiction)</p> <p>When done adding all answer options, hit \"SUBMIT\".</p> <p>Warning</p> <p>The item type \"CHECKBOX\" only adds a single checkbox to the form, with the item label being the answer option label.</p> <p> </p> <p>On the tablet this single checkbox item will look like this:</p> <p> </p>"},{"location":"editor/getting-started-editor/input-types/#radio-buttons","title":"Radio Buttons","text":"<p>Radio buttons are an item type used for items that allow for only one answer. The configuration for radio buttons is the same as for checkbox group with one exception. You will see that radio button options have a check mark to indicate which answer is correct. This is used in conjunction with the Threshold defined in the section header.</p> <p> </p> <p>When you have a threshold defined as 4, and for each question there is only one question option defined as correct, Tangerine will discontinue (hide the questions) after 4 consecutive replies are given as not correct. You can use this in EGMA tasks or in any other scenario where this makes sense</p> <p>On the tablet the radio button item will look like this:</p> <p> </p>"},{"location":"editor/getting-started-editor/input-types/#dropdown","title":"Dropdown","text":"<p>Dropdown is an item type used for items that allow for only one answer to be picked from a dropdown list of items. This item type is convenient when there are many options to choose from. The configuration for a dropdown item is the same as for checkbox group.</p> <p>On the tablet the dropdown item will look like this:</p> <p> </p>"},{"location":"editor/getting-started-editor/input-types/#timed-grid","title":"Timed Grid","text":"<p>This item type facilitates timed assessment approaches, e.g., to assess letter sound knowledge, oral reading fluency or math operations. The following might be a way to configure this item:</p> <p>Variable name: Enter \"letter_sound\".</p> <p>Number of columns: Enter the number of columns by which you'd like to organize the items. Enter, e.g. \"4\" (Tip: choose less columns for larger items, like words or operation problems)</p> <p>Hint Text: Leave blank</p> <p>Auto Stop: The autostop field defines the number of consecutive incorrect items, starting from the first one, after which the test stops automatically. For example, with an autostop value of 10, if a child has the first 10 items all incorrect, the test will stop. If a child has the first 4 items correct and then the following 10 items incorrect, the test will not autostop.</p> <p> </p> <p>Mark entire rows: This option allows the user to mark and entire row of items as incorrect (e.g. if a child skipped an entire row of sounds in a letter sound assessment)</p> <p>Duration in seconds: Enter the time allowed to complete this assessment, e.g. \"60\" for 60 seconds or one minute.</p> <p>Options (each option separated by a space): Enter all grid items here. Separate each item by a space from the next; if you have extra spaces please remove them!</p> <p>When done adding all answer options, hit \"SUBMIT\".</p> <p>Warning</p> <p>For these kids of assessments there are usually instructions preceding the assessment items. Insert those instructions as a \"HTML CONTENT CONTAINER\" item first, as shown below, followed by the \"TIMED GRID\" in the same section. We recommend to only feature the instructions (HTML Content) and Timed Grid in any one section of your instrument/form</p> <p>On the tablet the timed grid item will look like this:</p> <p> </p>"},{"location":"editor/getting-started-editor/input-types/#html-content-container","title":"HTML Content Container","text":"<p>This item type allows for flexible integration of headers, help text, or transition messages that do not require any user input or response. You can treat this container as a variable and hide or show different instructional text upon the selection of different options.</p> <p>The following might be a way to configure this item:</p> <p>Variable name: Enter \"Assessor instructions\".</p> <p>Mark entire rows: This option allows the user to mark an entire row of items as incorrect (e.g. if a child skipped an entire row of sounds in a letter sound assessment)</p> <p>Rows 1-X: Insert assessor instructions, use html tags to insert line breaks or formatting (e.g.  for a line break; text for bolding a piece of text, etc.).</p> <p>When done adding all answer options, hit \"SUBMIT\".</p> <p> </p> <p>On the tablet this HTML container item will look like this:</p> <p> </p>"},{"location":"editor/getting-started-editor/input-types/#repeatable-group","title":"Repeatable Group","text":"<p>The repeatable group is very useful when you don't know how many times you'd need to ask the same questions. </p> <p> </p>"},{"location":"editor/getting-started-editor/input-types/#speciality-inputs","title":"Speciality Inputs","text":"<p>Signature - this input allows the data assessor to collect a signature. This can be a signature for consent or delivery of materials. </p> <p>Consent - this input allows a consent form to be included in your survey. Consent forms should be on single page. Clicking No on a consent form terminates the current form. </p> <p>QR Code scanner - this input allows you to scan QR codes, Data matrix codes, or barcodes like ISBN numbers. We use this for student number or to collect book inventory.  </p> <p>EF Touch - this is the Executive Function input. It allows to perform tests measure EF. Please contact us if you'd like a demo of this function. Check out this input's configuration options under EF Touch Configuration</p> <p>ACASI - this is the audio computer assisted self interview input. It includes sounds and images, allowing the assessor to hand over the tablet to the participant. The participant then listens to the audio and answers the questions in a private setting.  </p> <p>Timed Grid - Timed grids are very specific to the EGRA/EGMA subtest. Timed grids can be used for word, invented works, paragraph reading and other tests where the time is of importance. The grid contains a time expiration in seconds, but we can also track an intermediate number to see where the student was reading at the Xth second.  </p> <p>Untimed Grid - similar to display as timed grids, the untimed grid doesn't provide a stopwatch. </p>"},{"location":"editor/getting-started-editor/input-types/#copying-items","title":"Copying Items","text":"<p>If you have an element and/or content which is the same as a previous element (e.g., radio buttons) that you would like to insert into your instrument quickly, without having to click \"INSERT HERE\" again, there is a COPY feature that you can use to do this. First, enter your original content (e.g., variable name, labels, and values) and then click SUBMIT. Once the first step is complete, next you click on the  icon. Doing so automatically creates a duplicate of all your original content, except the variable name, which you will need to edit, if desired. In the image below, you can see that all duplicates are auto-populated with the name \"widget,\" followed by an underscore, and a mix of letters and numbers (always different from the previous copy). If you would like to, you can edit all the content of the copy to fit your needs.</p> <p> </p>"},{"location":"editor/getting-started-editor/skip-logic/","title":"Skip Logic","text":"<p>Every instrument/form, section, and individual item provides an interface for adding logic, e.g. skip logic, that controls the interactivity and presentation of the instrument, section, or item.</p> <p>There are two types of skip logic that can be applied:</p> <ul> <li>On form level - used to skip an entire section and implement logic that is applicable to the entire form</li> <li>On section/page level<ul> <li>Most common case: You can implement those in the item's 'Skip If' field, or</li> <li>Used for more complex conditions Implement the skip in the section's on-change logic</li> </ul> </li> </ul> <p>The functions that we use for skip logic are:</p> <ul> <li>getValue('name') - to check the value of input 'name'<ul> <li>Use this for Text, Number, Dates, Time, Radio buttons, or Drop down lists</li> </ul> </li> <li>getValue('name').includes('value') - to check if 'value' is in the selected items of 'name'<ul> <li>Use this call to check if a value is in the list of selected values of a checkbox group input.</li> </ul> </li> <li>grid specific functions - look at the end of this page for more information.</li> </ul> <p>Join skip logic conditions using the &amp;&amp; (AND) and || (OR) operators  getValue('repeatedgrade') == '1' &amp;&amp; getValue('age') &gt;= 1 <p>Negate a condition using the ! (NOT) operator getValue('repeatedgrade') != '1' Or !getValue('grades_taught').includes('1') </p>"},{"location":"editor/getting-started-editor/skip-logic/#logic-at-question-input-level","title":"Logic at Question/ Input level","text":"<p>When we tap the Conditional Display tab, we see that here we can enter logic to hide or show a question based on previous input on that or other previous sections. </p> <p></p> <p>In the above screenshot we see that there is a \"Skip if\" input a \"Show if\" input. The skip if condition will skip the question if the condition is true. The show if condition will show the question if the condition is true. For example:</p> <p>To skip a question when the value of a previous question is not equal to 777, use the skip if condition To show a question when the value of a previous question is equal to 777, use the show if condition You can see how the two possible ways of skipping are opposites of one another. We can use either logic for each scenario but sometimes it is easier to think in a positive condition and other times it is easier to think in a negative condition. </p> <p>In all skip logic conditions, except for those based on grids (timed input), we use the getValue() function. To write the conditions from above in terms of skip logic we need:</p> <p>The value(s) to be used in the condition The variable name Here is how the above condition looks in skip logic:</p> <p>To skip a question when the value of question with variable homework is not equal 777 To show a question when the value of question with variable homework is equal 777</p> <p>This logic can be used to compare the values of Text, Number, Email, Radio Buttons, Dropdown select input types. </p> <p>Here is the actual skip logic. </p> <p>Skip if: getValue('homework') != '777' Show if: getValue('homework') == '777' You can see how similar the logic is. The == sign above means \"equal\" and the != sign means \"not equal\"</p> <p>You can enter only one Show-if or Skip-if condition per question. You can also use the &amp;&amp; (AND) and || (OR) logical operators to combine conditions. We will not look into that here. </p> <p>The above use of the function applies to all input types except for Checkbox group, Timed Grid, Untimed Grid, and Location</p> <p>To build logic based on the answers of a Checkbox group question, we use the getValue function but in a different way. Here we check if one of the selected options is the desired one. To skip a question when ONE of the values of a Checkbox question with variable homework is not equal 777 To show a question when ONE of the values of a Checkbox question with variable homework is equal 777 Here is how this condition will look</p> <p>Skip if: !getValue('homework').includes('777') Show if: getValue('homework').includes('777') Note how above we are asking if one of the selected options is 777 or if it isn't 777 - this is done with the ! (NOT) operator in front of the function. </p> <p>Take a look at how these examples look in Tangerine:</p> <p>For radio button question similar to below, where we want to show up the Other Specify input only when Other is selected:</p> <p></p> <p>Use this logic in the homework_other question</p> <p></p> <p>For a checkbox group question similar to the one below</p> <p></p> <p>Use this logic to show to show a question in the stu_language_other</p> <p></p> <p>Warning</p> <p>The skip logic commands used in Tangerine are case-sensitive and space-sensitive. You must type precisely the name of the variables which you want to reference.</p> <p>Warning</p> <p>Use single straight quotation marks to demarcate variables names ', do NOT use single slanted quotation marks ' or double quotation marks \".</p>"},{"location":"editor/getting-started-editor/skip-logic/#logic-at-instrumentform-level","title":"Logic at instrument/form level","text":"<p>At the instrument/form level, accessing this logic editor is via advanced settings in the section editor.</p> <p></p> <p>Click on ADVANCED to see the screen below with \"on-open\" and \"on-change\" entries.</p> <p></p> <p>As outlined earlier, at the item level, such logic can be added in the \"Show if\" field in the item editor.</p> <p></p> <p>On-open and on-change</p> <p></p> <p>As the name suggest, on-open logic is only executed when the form is opened whereas on-change logic is always executed whenever a change happens in the whole form. When selecting on-open logic either at the instrument/form level or in the section editor, the following screen appears. The interface allows JavaScript logic to be incorporated into the instrument.</p>"},{"location":"editor/getting-started-editor/skip-logic/#skip-logic-examples","title":"(Skip) Logic Examples","text":"<p>You want to skip an entire section:</p> <p>Navigate to and select the \"on-change\" at the instrument/form level. This logic will not work if you insert it in a section (it must be defined on form level)</p> <p>In this example, the section gets skipped based on responses from a previous item, e.g., if the respondent answered negatively to a previous question \"Do you have children?\". Note that the sectionID is provided in Tangerine in the section details as shown below. Form level skip logic is used to present or hide an entire section page to the user. This is very useful when managing a workflow and you need to display some sections but hide others according to the selected option for a question. For example, you can show a certain section only for grade 1 and hide it if grade 2 is selected.</p> <p></p> <pre><code>if(getValue('children') == '1')\n{sectionEnable('item_1')}\nelse\n{sectionDisable('item_1')}\n</code></pre> <p>You want to hide a set of items based on responses to an item in a previous section:</p> <p>Navigate to and select the \"on-open\" at the section level.</p> <p>In this example several items in this section are hidden based on the participant's response to the item about the child's schooling experience in a previous section.</p> <pre><code>if(getValue('school') == '1')\n{itemShow('grade')\nitemShow('repeatedgrade')\nitemShow('dropout')}\nelse\n{itemHide('grade')\nitemHide('repeatedgrade')\nitemHide('dropout')}\n</code></pre> <p>You want to hide a set of items based on responses to two items in a previous section:</p> <p>Navigate to and select the \"on-open\" at the section level.</p> <p>In this example the item \"teachers_name\" should only be shown if the participant's previous response to \"teacher_available\" was yes = 1 AND if the participant' previous response to \"class_selected\" was \"1\".</p> <pre><code>if(getValue(' teacher_available') === '1' &amp;&amp; getValue('class_selected') === '1' )\n{itemShow('teachers_name')}\nelse\n{itemHide('teachers_name')}\n</code></pre> <p>The Logic interface offer syntax highlighting. This is handy when you have errors in your code. Below is an example of an error and sample message.</p> <p></p>"},{"location":"editor/getting-started-editor/skip-logic/#logic-at-section-level","title":"Logic at section level","text":"<p>At the section level, the logic editor can be accessed by editing the Section Details clicking the pen icon on the right of the blue bar (where one can also rename the section).</p> <p></p>"},{"location":"editor/getting-started-editor/skip-logic/#skip-logic-with-grid-specific-functions","title":"Skip logic with grid specific functions","text":"<p>You may be in the situation where you are required to perform a skip based on some results from a grid. We provide four functions that you can use in your skip logic to show or hide questions or sections based on the results of a grid.</p> <p>Showing a question based on the number of attempted items on a grid</p> <p>If you'd like to hide a question when the number of attempted items on a particular grid is over a certain threshold you can make use of the 'numberOfItemsAttempted(input)' function. If your grid variable is 'letter_sound' and the question you want to skip is 'Q_1' then in the question Q_1 I can insert the below skip logic(under Show If) to show it only when the number of attempted items on the grid is greater than 10</p> <pre><code>numberOfItemsAttempted(inputs.letter_sound) &gt; 10\n</code></pre> <p>Showing a question based on the number of correct items of a grid</p> <p>Sometimes it may be the case where you want to show a question only if there are a certain N items on the grid answered correctly. In those cases, we make use of the 'numberOfCorrectItems(input)' function. If your grid variable is 'letter_sound' and the question you want to skip is 'Q_1' then in the question Q_1 I can insert the below skip logic(under Show If) to show this question only when the number of correct items on the grid is greater than 0</p> <pre><code>numberOfCorrectItems(inputs.letter_sound) &gt; 0\n</code></pre> <p>Show a question only if the grid did not auto stop</p> <p>If you have set the autostop value of a grid with variable name 'letter_sound' and you want to show a question only when the grid did not discontinue due to a triggered auto stop, then you can insert the below logic into the question's Show If field:</p> <pre><code>typeof inputs.letter_sound != 'undefined' &amp;&amp; inputs.letter_sound.gridAutoStopped\n</code></pre> <p>The use of the '!' gives us the opposite of the result returned by the function. If the grid stopped the result will be true. When we use the '!' in front of the function, it means that, when the grid did not stop we want a positive answer hence show the question.</p> <p>Show a question based on the words per minute read on a grid</p> <p>It may happen that you need to show a question only to advanced students. In those cases, we make use of the function 'itemsPerMinute(input)' This function returns the number of items per minute read by the student. We can use it, just as before, in the Show If input field of a question, like so:</p> <pre><code>itemsPerMinute(inputs.letter_sound) &gt; 35\n</code></pre> <p>This call will force a question to be displayed only when the rate of reading was higher than 35 workds per minute.</p> <p>Note</p> <p>All of the above functions can also be used to show or a hide an entire section page.</p>"},{"location":"editor/getting-started-editor/user-management/","title":"User management","text":"<p>Tangerine offers comprehensive, role-based access management features. By default, the user1 account can do everything but this access can be delegated to other users. The User menu can be accessed by going to the main group listing page and the selecting the Users menu on the left side. </p>"},{"location":"editor/getting-started-editor/user-management/#add-user","title":"Add user","text":"<p>To add a user press the \"+\" button at the bottom and enter this user's details.</p> <p></p>"},{"location":"editor/getting-started-editor/user-management/#delegate-user1admin-roles-to-other-users","title":"Delegate user1/admin roles to other users","text":"<p>The main Admin user, namely user1, has access to the full Tangerine backend functionality by default. Some of this user\u2019s responsibilities can be shared with other users through the user management interface. To assign responsibilities to other users click the Shield icon next to the username. </p> <p>It will bring up the site-wide permissions screen: </p> <p></p> <p>We recommends taking great care in assigning such sitewide permissions to other users, including to ensure data privacy and security. Roles that can be assigned sitewide, include: </p> <p>Can create groups \u2013 users with this role can create new groups on the site </p> <p>Can view users list \u2013 user can access the listing of all users on the site </p> <p>Can create users \u2013 allows new users to be created </p> <p>Can edit users \u2013 users with this permission can update other users\u2019 details and passwords </p> <p>Can manage site wide permissions \u2013 users with this role can grant those site wide permissions on other users.  </p>"},{"location":"editor/getting-started-editor/user-management/#user-roles","title":"User roles","text":"<p>The role-based access in Tangerine can be refined and adjusted on a per group basis. By default, Tangerine comes with two user roles:</p> <ul> <li>Admin, who can access everything in that group</li> <li>Member, who has access to the data but cannot modify the forms. </li> </ul> <p>The Admin role can be assigned to more advanced users, and those who need to update forms or other content. The Member role is, e.g., often given to data analysts. This user can generate a data export file and can access the metadata for each form in the group but cannot edit forms or change other users\u2019 permissions. </p>"},{"location":"editor/getting-started-editor/user-management/#assign-a-user-to-a-group","title":"Assign a user to a group","text":"<p>Assigning a user to a group is done for each group independently in Tangerine. This function is under the Configure tap, by selecting Users and Roles, and using the \u201c+\u201d button at the bottom right to assign a user to the group. Type the username and select the role before clicking Add user to Group.  </p> <p></p> <p>All additional users are created using the User Management screen. If only creating a user under the User Management section, this user has no access to the site\u2019s content (groups). The user must first be assigned to a group. This is to ensure that the correct access is given to each user. Custom user roles are created when necessary and assigned to some users. The default two roles have their group permissions pre-configured upon group creation.  </p>"},{"location":"editor/getting-started-editor/user-management/#add-a-new-role","title":"Add a new role","text":"<p>Warning</p> <p>Roles in Tangerine exist on per group bases. You have to add roles to each group if using custom roles</p> <p>To add a new role in Tangerine, press the \u201c+\u201d button at the bottom right corner and check the required permissions. Here\u2019s a list of possible permissions: </p> <p></p> <p>Can access author \u2013 gives access to the Author tab where the forms listing is  </p> <p>Can access cases \u2013 not use in this setup \u2013 allows access to the case browser </p> <p>Can access configure \u2013 gives access to this very screen </p> <p>Can access configure location list \u2013 can modify the location screen for that group  </p> <p>Can access configure sync \u2013 not used in this setup \u2013 can access sync 2 protocol settings </p> <p>Can access dashboard \u2013 can access the dashboard tab </p> <p>Can access data \u2013 can access the data tab </p> <p>Can access database conflicts \u2013 not used in this setup \u2013 can access case conflicts and resolve them  </p> <p>Can access deploy \u2013 can access deployments tab </p> <p>Can access device users \u2013 can access the listing of device users \u2013 these are the user profiles linked to each device/tablet </p> <p>Can access devices \u2013 not used in this setup \u2013 can manage device setup </p> <p>Can access download csv \u2013 can access the csv export </p> <p>Can access forms \u2013 can access the forms tap </p> <p>Can access issues \u2013 not used in this setup \u2013 can access and create issues on case forms </p> <p>Can access media \u2013 can access the media upload under the Author tab </p> <p>Can access releases \u2013 can create new releases </p> <p>Can access security \u2013 can access the security/users and roles screen </p> <p>Can access uploads \u2013 can access the uploads screen under data  </p> <p>Can administer couchdb server \u2013 not used in this setup \u2013 can access backeneddb for case </p> <p>Can archive cases \u2013 not used in this setup \u2013 can archive cases  </p> <p>Can archive events - not used in this setup \u2013 can archive events </p> <p>Can archive forms - not used in this setup \u2013 can archive case forms </p> <p>Can delete cases - not used in this setup \u2013 can delete cases </p> <p>Can manage forms \u2013 can modify forms </p> <p>Can manage group roles \u2013 can update group roles </p> <p>Can manage group users \u2013 can update group users </p> <p>Can restore conflict event - not used in this setup \u2013 can resolve event conflicts </p> <p>Can unarchive cases - not used in this setup \u2013 can unarchive cases </p> <p>Can unarchive events - not used in this setup \u2013 can unarchive events </p> <p>Can unarchive forms - can forms cases </p>"},{"location":"editor/getting-started-editor/validation/","title":"Validation","text":"<p>Tangerine provides the option to check the validity of an input field. Navigate to the \"Valid if\" field in the Item Editor.</p> <p>When we tap the Validation tab, we see that here we can enter logic to validate a question based on previous or current input. For the number input type we can also directly enter min and max values. For all validation we also have the option to specify a default error message. </p> <p>Inputs that are common for all validation screens are:</p> <p>Warn-if: this input allows you to define logic to issue a warning if the condition is true. A warning validation means that clicking Next or Submit will fail the first time the user clicks it but will allow the user to continue on the second trial</p> <p>Warning Text: this is the text displayed to the user when a warning condition is triggered</p> <p>Valid if: this input allows you to define logic to issue an error if the condition is true. A valid if logic means that clicking Next or Submit will fail when the condition is met and the user is forced to correct the input</p> <p>Error text: this is the text displayed to the user when a validation error is triggered</p> <p>All warning and validation logic can make use of the getValue function but also you can access the current input's value by referring to  input.value. In many cases we also use the parseInt function to convert the text input to a number. </p> <p>In the below example you see an input defined which will trigger a validation if the value is great then 5, Between 5 and 7 it is only a warning message, meaning that the user can proceed if they click Next/Submit again but if the value is greater then 7 the user has to correct the input. </p> <p></p> <p>The easiest validation is for number type of inputs. There we can directly specify the minimum and maximum values for the number that we can accept. </p> <p>I will add an age input of type number. Then on the Validation tab i have defined min and max values, as well as error text. </p> <p></p> <p>I want to add one more validation to my stu_number variable, making sure it is exactly 6 characters long. For this I will use input.value.length == 6 </p> <p>Here is how this looks in student number input.  </p>"},{"location":"editor/getting-started-editor/validation/#question-input-validation-examples","title":"Question/ Input Validation Examples","text":"<p>If, for example, the value entered into an \"INPUT-NUMBER\" field should have 9 or more characters, enter the following into \"Valid if\" for this item:</p> <pre><code>input.value.length &gt; 9\n</code></pre> <p></p> <p>Tangerine also allow you to compare the value entered in the current item to a value entered for another, earlier item. This might be the case, e.g. for attendance when observing a classroom. That is, when recording attendance, the number of children present should not exceed the number of children enrolled. Assume that a relevant variable name of the earlier item was \"boys_enrolled\" and the current items is about the boys present, this might be the validation logic to enter under \"Valid if\" for boys_present.</p> <pre><code>parseInt(input.value) &lt;= inputs.boys_enrolled.value\n</code></pre> <p></p> <p>If you want to validate that a number input is in between a particular range but also allow a 'No Reply' answer, use the below validation rule:</p> <pre><code>input.value &gt;= 0 \n&amp;&amp; input.value &lt;= 10 \n|| input.value == 999\n</code></pre> <p>Here we make sure that the user can only enter numbers between 0 and 10 but also 999 as a reply to this question.</p> <p>You can now use the Mutually Exclusive option on the checkbox edit page to achieve the same functionality.</p> <p>Deprecated</p> <p>If you have a list of checkboxes with the option No (value 0), NA (value 888), and some other options, and you'd like to make sure that the assessor cannot select the options No or the option NA along with other available options you need to implement a rule like the one below. The variable name in the below example is TQ1</p> <pre><code>(!getValue('TQ1').includes('888') &amp;&amp; !getValue('TQ1').includes('0')) \n|| (getValue('TQ1').includes('888') \n|| getValue('TQ1').includes('0')) \n&amp;&amp; getValue('TQ1').length == 1\n</code></pre>"},{"location":"product-suite/","title":"Product Suite","text":""},{"location":"product-suite/#tangerine-product-suite","title":"Tangerine Product Suite","text":"<p>Tangerine is a diverse data collection tool that offers pre-build solutions for a variety of use cases.</p> Tangerine <p>Tangerine offers electronic data collection solution tailored for mobile devices such as netbooks, tablets, and smartphones. It helps facilitate seamless data recording for instruments such as the Early Grade Reading Assessment (EGRA), Early Grade Mathematics Assessment (EGMA), and Snapshot of School Management Effectiveness (SSME) surveys. Household surveys in Agriculture and Health, and any type of data collection in other sectors. </p> Learn More Tangerine: Case <p>Tangerine facilitates both cross-sectional and longitudinal studies using a Case-Event data model. Each study participant, whether it's a patient, household, or lab sample, receives a unique identifier for consistent and secure tracking throughout the study. Tangerine: Case places a strong emphasis on data security by equipping you with tools to safeguard against unauthorized access to sensitive protected health information (PHI) and personally identifiable information (PII).  </p> Learn More Tangerine: Teach <p>Used by teachers or support staff to conduct formative assessment and improve teaching and learning through tailored teacher feedback. Teach includes an Early Warning System module that allows the collection of attendance, behavior, and continuous evaluation scores, used to trigger alerts and identify students at risc </p> Learn More Tangerine: Coach <p>Used by coaches or mentors during a classroom observation. Using Tangerine: Coach ensures that the conversation between your coaches and the teachers, guided through comprehensive feedback, is aligned across all coaches. Support your teachers with specific and actionable feedback given after the observation session.  </p> Learn More Tangerine: Learn <p>Used in classrooms to give the tablet to the child and let them go through the assessment on their own pace. Setup group session with children to perform an EGRA or EGMA type Self-Administered Evaluation. The custom-app functionality of Tangerine allows you to present an app that is child friendly</p> Learn More Tangerine: EF Touch <p>Executive Function (EF) refers to a range of cognitive skills that are key to problem solving and a child's ability to \u201clearn how to learn.\u201d These skills experience an important growth period during early childhood </p> Learn More Tangerine: Acuity <p>Using a simple screening tool optimized for use on Android devices and in low-bandwidth settings, Tangerine: Acuity will provide vital information to educators so they can maximize learning outcomes for students who are struggling but may not yet have been diagnosed as having vision loss.</p> Learn More"},{"location":"system-administrator/","title":"System Administrator Guide","text":""},{"location":"system-administrator/#installation-and-upgrades","title":"Installation and Upgrades","text":"<ul> <li>Installation</li> <li>Configuring Nginx as SSL proxy server for Tangerine</li> <li>Upgrades</li> <li>Automatic upgrades of Tangerine</li> <li>Upgrade Checklist</li> </ul>"},{"location":"system-administrator/#databases","title":"Databases","text":"<ul> <li>MySQL-JS Module</li> <li>MySQL-Legasy</li> <li>CouchDB Password Update</li> <li>Managing Data Conflicts</li> <li>Managing Legacy Conflict Issues</li> </ul>"},{"location":"system-administrator/#group-configuration","title":"Group Configuration","text":"<ul> <li>Installing Multiple Tangerine apps on the same tablet</li> <li>Integrate groups content in git</li> <li>Configuration notes</li> </ul>"},{"location":"system-administrator/#android-devices","title":"Android Devices","text":"<p>Rescuing a Full Tangerine Tablet Restoring from backup Troubleshooting Android Devices</p>"},{"location":"system-administrator/#aws-specific","title":"AWS Specific","text":"<ul> <li>Installing Tangerine on AWS</li> <li>Configuring AWS Cloudwatch</li> </ul>"},{"location":"system-administrator/#sync-protocols","title":"Sync Protocols","text":"<ul> <li>sync-protocol-1 doc</li> <li>sync-protocol-2 doc</li> <li>Sync Strategies</li> </ul>"},{"location":"system-administrator/automating-upgrades-of-tangerine/","title":"Automating Upgrades of Tangerine","text":"<p>If you have a particularly complex upgrade of Tangerine that involves changing configurations, writing your own upgrade script and testing that on a QA server can be a way to ensure smooth upgrades when you go to production. Below you will find various tips and tricks we've discovered along the way of writing our own upgrade scripts.</p>"},{"location":"system-administrator/automating-upgrades-of-tangerine/#update-a-groups-configuration-in-the-groups-database","title":"Update a group's configuration in the groups database","text":"<p>In this example, we modify the <code>xyz</code> group's configuration to implement some csvReplacementCharacters. First we install into the container the jq utility for modifying JSON on the command line, then we modify the group's config doc in the second command. To use this example, replace the two <code>xyz</code> instances with the group's ID you want to modify.</p> <pre><code>docker exec -it tangerine apt install -y jq\ndocker exec -it tangerine bash -c 'curl -s $T_COUCHDB_ENDPOINT/groups/xyz | jq \".csvReplacementCharacters = [[\\\",\\\",\\\"|\\\"],[\\\"\\n\\\",\\\"___\\\"]]\" | curl -s -T - -H \"Content-Type: application/json\" -X PUT $T_COUCHDB_ENDPOINT/groups/xyz'\n</code></pre>"},{"location":"system-administrator/automating-upgrades-of-tangerine/#updating-a-groups-content-repository","title":"Updating a group's content repository","text":"<p>Given the upgrade of Tangerine, there may be associated content changes required. Set up an deploy key in your content repository on github and modify the following script to suit your needs.</p> <pre><code>cd /path-to-tangerine/tangerine/data/groups/some-group-id/\nGIT_SSH_COMMAND='ssh -i /root/.ssh/id_github.pub' git fetch origin\ngit checkout v2.0.0\n</code></pre>"},{"location":"system-administrator/automating-upgrades-of-tangerine/#update-a-groups-app-configjson","title":"Update a group's app-config.json","text":"<p>Best practice for ensuring that configuration in <code>client/app-config.json</code> is maintained over time is to first update the configuration you want to modify in your group's <code>client/app-config.defaults.json</code> and then retemplate the defaults to the <code>client/app-config.json</code> file. To use the following example, replace instances of <code>group-xyz</code> with the relevant Group ID and <code>GROUP XYZ</code> with the relevant Group Name.</p> <pre><code>docker exec -it tangerine apt install -y jq\ndocker exec -it tangerine bash -c 'cat /tangerine/groups/group-xyz/client/app-config.defaults.json | jq \".serverUrl = \\\"$T_PROTOCOL://$T_HOST_NAME\\\"\" | jq \".groupId = \\\"group-xyz\\\"\" | jq \".groupName = \\\"Group XYZ\\\"\" &gt; /tangerine/groups/group-xyz/client/app-config.json'\n</code></pre>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/","title":"Configuring AWS Cloudwatch","text":""},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#create-cloudwatchagentserverrole-role","title":"Create CloudWatchAgentServerRole role","text":"<p>https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/create-iam-roles-for-cloudwatch-agent.html</p> <p>Follow the directions in the section marked \"To create the IAM role necessary for each server to run the CloudWatch agent\" which are summarized here:</p>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#to-create-the-iam-role-necessary-for-each-server-to-run-the-cloudwatch-agent","title":"To create the IAM role necessary for each server to run the CloudWatch agent","text":"<ul> <li>Sign in to the AWS Management Console and open the IAM console at https://console.aws.amazon.com/iam/.</li> <li>In the navigation pane, choose Roles and then choose Create role. Under Select type of trusted entity, choose AWS service. </li> <li>Immediately under Common use cases, choose EC2,and then choose Next: Permissions.</li> <li>In the list of policies, use the search box to find the CloudWatchAgentServerPolicy and select its checkbox. </li> <li>To use Systems Manager to install or configure the CloudWatch agent, select the box next to AmazonSSMManagedInstanceCore. This AWS managed policy enables an instance to use Systems Manager service core functionality. If necessary, use the search box to find the policy. This policy isn't necessary if you start and configure the agent only through the command line.</li> <li>Choose Next: Tags. (If needed)</li> <li>Choose Next: Review. For Role name, enter a name for your new role, such as CloudWatchAgentServerRole or another name that you prefer.</li> <li>Confirm that CloudWatchAgentServerPolicy and optionally AmazonSSMManagedInstanceCore appear next to Policies.</li> <li>Choose Create role. The role is now created.</li> </ul> <p>Diregard the directions marked \"To create the IAM role for an administrator to write to Parameter Store\"</p>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#attach-iam-role-cloudwatchagentserverrole-to-instance","title":"Attach IAM role CloudWatchAgentServerRole to instance","text":"<p>https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/iam-roles-for-amazon-ec2.html#attach-iam-role</p> <p>To attach an IAM role to an instance - Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/. - In the navigation pane, choose Instances. - Select the instance, choose Actions, Security, Modify IAM role. - Select the IAM role to attach to your instance, and choose Save.</p>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#installing-or-updating-ssm-agent","title":"Installing or updating SSM Agent","text":"<p>https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-install-ssm-agent.html</p> <p>Agent is already installed in Ubuntu Server 16.04, 18.04, and 20.04 - To check status <code>sudo systemctl status snap.amazon-ssm-agent.amazon-ssm-agent.service</code> - To start agent <code>sudo snap start amazon-ssm-agent</code></p>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#download-and-configure-the-cloudwatch-agent","title":"Download and configure the CloudWatch agent","text":"<p>https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/download-CloudWatch-Agent-on-EC2-Instance-SSM-first.html</p> <ul> <li>To download the CloudWatch agent using Systems Manager, Open the Systems Manager console at https://console.aws.amazon.com/systems-manager/.</li> <li>In the navigation pane, choose Run Command. -or- If the AWS Systems Manager home page opens, scroll down and choose Explore Run Command.</li> <li>Choose Run command. In the Command document list, choose AWS-ConfigureAWSPackage.</li> <li>In the Targets area, choose the instance to install the CloudWatch agent on. If you don't see a specific instance, you probably don't have the correct Policy associated with your instance</li> <li>In the Action list, choose Install. In the Name field, enter AmazonCloudWatchAgent.</li> <li>Keep Version set to latest to install the latest version of the agent.</li> <li>Choose Run.</li> <li>Optionally, in the Targets and outputs areas, select the button next to an instance name and choose View output. Systems Manager should show that the agent was successfully installed.</li> </ul>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#configure-the-cloudwatch-agent","title":"Configure the CloudWatch agent","text":"<p>The agent configuration file is a JSON file that specifies the metrics and logs that the agent is to collect, including custom metrics. You can create it by using the wizard or by creating it yourself from scratch. You could also use the wizard to initially create the configuration file and then modify it manually.</p> <p>Create and modify the agent configuration file - You can configure the agent on your AWS EC2 instance. Run the following command: <code>/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-config-wizard</code> - When the wizard runs, choose to install statsD and CollectD (default is yes),  the 'Advanced' level of metrics.  - The defaults are usually fine, but decline when it asks \"Do you want to monitor any log files?\" and also \"Do you want to store the config in the SSM parameter store?\" - The configuration file config.json is stored in /opt/aws/amazon-cloudwatch-agent/bin/config.json </p> <p>https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/create-cloudwatch-agent-configuration-file.html</p>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#to-restart-the-cloudwatch-agent","title":"To restart the CloudWatch agent","text":"<p>https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/install-CloudWatch-Agent-on-EC2-Instance-fleet.html#start-CloudWatch-Agent-EC2-fleet</p> <p>sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json</p> <p>If you see an error about collectd, install it: <code>apt install collectd</code></p> <p>https://github.com/awsdocs/amazon-cloudwatch-user-guide/issues/54#issuecomment-696844909</p>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#modifying-the-dashboard","title":"Modifying the dashboard","text":""},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#create-a-cloudwatch-alarm-based-on-a-static-threshold","title":"Create a CloudWatch alarm based on a static threshold","text":"<p>https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ConsoleAlarms.html</p>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#custom-namespaces","title":"Custom namespaces","text":"<p>The default namespace for metrics collected by the CloudWatch agent is CWAgent, although you can specify a different namespace when you configure the agent. CWAgent provides useful data such as disk utilization which can be used on a dashboard or for an alert.</p> <p>Go to CloudWatch -&gt; Metrics -&gt; All Metrics and scroll to Custom namespaces to see the CWAgent namespace.</p> <p>List of data collected by CWAgent here: https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/metrics-collected-by-CloudWatch-agent.html</p>"},{"location":"system-administrator/configuring-aws-cloudwatch-for-logs/#sns-notifications","title":"SNS Notifications","text":"<p>To create a topic: https://eu-west-1.console.aws.amazon.com/sns/v3/home?region=eu-west-1#/topics</p>"},{"location":"system-administrator/couchdb/","title":"CouchDB","text":""},{"location":"system-administrator/couchdb/#upgrade","title":"Upgrade","text":"<p>If there has been a security update to CouchDB 2.x, all you must do is rerun the start.sh command and the new image for CouchDB will be downloaded and run.</p>"},{"location":"system-administrator/couchdb/#change-password-for-admin-user-on-couchdb","title":"Change password for admin user on CouchDB","text":"<pre><code># Shutdown tangerine and couchdb\ndocker stop tangerine couchdb\n# Remove the docker files that cached the password for CouchDB.\nrm -r data/couchdb/local.d\n# Update the T_COUCHDB_USER_ADMIN_PASS variable.\nvim config.sh\n# update the cached password in the reporting worker configuration.\nvim data/reporting-worker-state.json\n# If using the mysql module, update the passwords in each group's mysql state file.\nvim data/mysql/state/&lt;groupId&gt;.ini\n# start.sh will rebuild the couchdb and tangerine containers which will update the password in all necessary places.\n./start.sh &lt;version&gt;\n</code></pre>"},{"location":"system-administrator/install-multiple-apks-config/","title":"Installing Multiple Tangerine apps on the same tablet","text":"<p>To install more than one Tangerine app on a tablet, you must configure the packageName and appName properties in the group's app-config.json.</p> <pre><code>\"packageName\": \"org.rti.tangerine.custom\",\n\"appName\": \"Custom\"\n</code></pre> <p>Using these properties would create an APK with the package name org.rti.tangerine.custom. The icon to launch the app would display \"Custom\".</p> <p>When uninstalling the app, you would use the updated package name:</p> <p><code>shell script adb uninstall org.rti.tangerine.custom</code></p> <p>If you don't add these properties, the defaults are: - PACKAGENAME = \"org.rti.tangerine\" - APPNAME = \"Tangerine\"</p>"},{"location":"system-administrator/install-on-aws/","title":"Installing Tangerine on AWS","text":""},{"location":"system-administrator/install-on-aws/#creating-the-aws-instance","title":"Creating the AWS instance","text":"<p>Login to AWS and Launch a new instance with Ubuntu 18.04 using a t2.medium server with 4 GiB memory. </p> <p>Volume should be larger than the 8GB default. 24GB would be useful, but if you're planning to test different Tangerine images, go for 64GB.</p>"},{"location":"system-administrator/install-on-aws/#security","title":"Security","text":"<p>Make sure to assign a security group to your instance that allows you to access port 80 via a web browser and port 22 via ssh. </p> <ul> <li>HTTP: TCP 80  0.0.0.0/0</li> <li>SSH   TCP 22  0.0.0.0/0</li> </ul>"},{"location":"system-administrator/install-on-aws/#set-up-ssl","title":"Set up SSL","text":"<p>Prerequisites:</p> <ul> <li>An SSL Certificate. If you don't yet have one, we recommend using AWS's Certificate Manager (found under \"Security, Identity, and Compliance\").</li> </ul> <p>Create and Configure an Elastic Load Balancer (ELB):</p> <ul> <li>Go to EC2, click \"Load Balancers\" in the left column, click \"Create Load Balancer\", and then select \"Classic Load Balancer\". </li> <li>Step 1: Define Load Balancer </li> <li>Set a Load Balancer name to what you want.</li> <li>Set \"Load Balancer Protocol\" on the left most column to \"HTTPS\".</li> <li>Set \"Instance Protocol\" in the third column to \"HTTP\". </li> <li>Click \"Add\".</li> <li>In the new row set \"Load Balancer Protocol\" to \"HTTP\" and \"Instance Protocol\" to \"HTTP\". </li> <li>Click \"Next\".</li> <li>Step 2: Assign Security Groups</li> <li>Select \"Create a new security group\".</li> <li>Set rules for both HTTP and HTTPS. If you only do HTTPS, anyone who goes to <code>http://yourdomain.com</code> will get an Access Denied message. Allow them to access the site with HTTP, the software will forward them to HTTPS automatically.  </li> <li>Click \"Next\".</li> <li>Step 3: Configure Security Settings</li> <li>If you have an SSL certificate, you can upload that here. Otherwise select \"Choose an existing certificate from AWS Certificate Manager (ACM)\".</li> <li>If you have not requested a certificate for your domain yet, you will need to click \"Request a new certificate from ACM\" and follow those instructions before proceeding.</li> <li>Step 4: Configure Health Check</li> <li>Ping Protocol: HTTP</li> <li>Ping Port: 80</li> <li>Ping Path: /app/tangerine/index.html</li> <li>Response Timeout: 5 seconds</li> <li>Interval: 10 seconds</li> <li>Unhealthy threshold: 10</li> <li>Healthy threshold: 2</li> <li>Step 5: Add EC2 Instances</li> <li>Select the EC2 instance running Tangerine.</li> <li>Step 6: Add Tags </li> <li>No tags are required for Tangerine.</li> <li>Step 7: Review</li> <li>If everything looks good, go ahead and create it!</li> <li>Now proceed to your Load Balancers dashboard, click on your load balancer, click on the Instances tab, and now wait for your EC2 instance to be listed as \"InService\". </li> <li>Configure your domain's DNS to point to this load balancer by clicking on the load balancer's Description tab and using the \"DNS name\" given to configure your Domain's DNS. </li> </ul>"},{"location":"system-administrator/install-on-aws/#ssh-login-to-server","title":"SSH Login to Server","text":"<p>Once your server is created, login with your key: <pre><code> ssh -i ~/.ssh/iyour_key -l ubuntu\u00a0&lt;your EC2 instance's IP address&gt;\n</code></pre></p> <p>Now you may continue to step 2 in the installation instructions of Tangerine's README.md, then pick back up here.</p>"},{"location":"system-administrator/install-on-aws/#configure-logs","title":"Configure Logs","text":"<p>Send logs to AWS CloudWatch for building alarms and saving disk space.</p> <ol> <li>Create IAM user with programattic access and AWSAppSyncPushToCloudWatchLogs policy. Keep open credentials screen for reference.</li> <li>Install aws-cli with <code>sudo apt-get install awscli</code>.</li> <li><code>aws configure</code> and give the credentials for the IAM user.</li> <li>Go to <code>AWS Console -&gt; IAM -&gt; Access Management -&gt; Roles -&gt; Create Role</code>, create a role called <code>aws-cloudwatch-logs</code> with an attached policy of <code>AWSOpsWorksCloudWatchLogs</code>. </li> <li>Go to <code>AWS Console -&gt; EC2 -&gt; Instances -&gt; &lt;select your instance&gt; -&gt; Actions -&gt; Security -&gt; Modify IAM role</code> and add the <code>aws-cloudwatch-logs</code> role to the EC2 instance.</li> <li>Go to <code>AWS Console -&gt; CloudWatch -&gt; Logs -&gt; Actions -&gt; Create log group</code>.</li> <li>Create the Log Group named after the instance name (ie. example-v3). </li> <li>Write the configuration to <code>/etc/docker/daemon.json</code>. Change <code>awslogs-region</code> to the \"less specific\" region name (eu-central-1 as opposed to eu-central-1b) and replace <code>example-v3</code> in <code>tag</code> and <code>awslogs-group</code> to reflect the EC2 instance name. </li> <li>Then run <code>systemctl restart docker</code>. If containers were already running, you may need to recreate them for settings to take hold. For Tangerine, that just means running <code>./start.sh</code> again.</li> <li>After setting up Tangerine, navigate in your browser to <code>AWS Console -&gt; CloudWatch -&gt; Logs</code> and select your instance's log group. There you will find two streams, one for the tangerine container the other for couchdb container using the \"tag\" pattern you configured in <code>daemon.json</code>.</li> </ol> <pre><code>{\n    \"log-driver\": \"awslogs\",\n    \"log-opts\": {\n        \"awslogs-region\": \"eu-central-1\",\n        \"awslogs-group\": \"example-\",\n        \"tag\": \"example-{{.Name}}\"\n    }\n}\n</code></pre>"},{"location":"system-administrator/install-on-aws/#configure-alarm","title":"Configure Alarm","text":"<p>With Docker logs being sent to AWS CloudWatch, you can configure an alarm to detect if Tangerine is down. The following directions explain how to send an automated email if a Tangerine heartbeat log message is not heard for 15 minutes. </p> <ul> <li>Navigate in your browser to <code>AWS Console -&gt; CloudWatch -&gt; Logs</code>.</li> <li>Open your server's log group.</li> <li>Open the stream for Tangerine. If your tag pattern in <code>/etc/docker/daemon.json</code> is <code>example-{{.Name}}</code>, then your stream name will be <code>example-tangerine</code>.</li> <li>In the <code>Filter events</code> text box, type <code>heartbeat</code> and press enter. This will filter the logs to all heartbeat messages.</li> <li>With the filter still applied, click the \"Create Metric Filter\" button.</li> <li>Fill out \"Metric\" form as follows:<ul> <li>Filter name: heartbeat</li> <li>Filter pattern: heartbeat</li> <li>Metric namespace: tangerine</li> <li>Metric name: heartbeat</li> <li>Metric value: 1</li> <li>Default value: 0</li> <li>Unit: leave blank</li> </ul> </li> <li>Navigate to your log group and click the \"Metric filter\" tab, click the checkbox in your Metric's box, then click \"Create alarm\" button.</li> <li>Fill out the form:<ul> <li>Metric name: heartbeat</li> <li>Statistic: Sum</li> <li>Period: 15 minutes</li> <li>Threshold type: Static</li> <li>Whenever heartbeat is...: Lower</li> <li>than...: 1</li> <li>Additional configuration</li> <li>Datapoints to alarm: 1 out of 1</li> <li>Missing data treatment: Treat missing data as bad (breaching the threshold)</li> </ul> </li> <li>Fill out \"Notification\" form as follows:<ul> <li>Alarm state trigger: In alarm</li> <li>Select an SNS topic: Create new topic</li> <li>Create a new topic...: <code>&lt;server name&gt;-tangerine-heartbeat</code></li> <li>Email endpoints that will receive the notification...: <code>&lt;your email address&gt;</code></li> </ul> </li> <li>Click \"Create Topic\" button, then \"Next\" button.</li> <li>Fill out \"Name and description\" form as follows then click \"Next\" button:<ul> <li>Alarm name: <code>&lt;server name&gt;-tangerine-heartbeat</code></li> </ul> </li> <li>Now on the \"Preview and create\" screen, click \"Create Alarm\"</li> <li>Check your email to confirm subscription to SNS Topic.</li> </ul>"},{"location":"system-administrator/installation/","title":"Installation steps overview","text":"<p>Installation instructions are available in the README file on the GitHub repository. Here we summarize those instructions.</p> <ul> <li>Prerequisites - docker</li> <li>Create a local copy of the code</li> <li>Checks out a particular version of the code</li> <li>Customizes the installation</li> <li>Start both containers and push the configuration to them with the automated script</li> </ul>"},{"location":"system-administrator/installation/#prerequisites","title":"Prerequisites","text":"<p>Install docker - follow the recommended instruction at https://docs.docker.com/engine/install/ubuntu/ </p> <pre><code>sudo apt update\n\nsudo apt install apt-transport-https ca-certificates curl software-properties-common -y\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n\nsudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu noble stable\"\n\napt-cache policy docker-ce\n\nsudo apt install docker-ce -y\n\nsudo systemctl status docker\n</code></pre> <p>Create or modify the file /etc/docker/daemon.json <pre><code>vi /etc/docker/daemon.json\n</code></pre></p> <p>Paste the following content to limit the log size to 100Mb <pre><code>{ \"log-driver\": \"json-file\", \"log-opts\": \n    { \"max-size\": \"100m\", \n    \"max-file\": \"3\", \n    \"labels\": \n    \"production_status\", \n    \"env\": \"os,customer\" } \n}\n</code></pre> Restart the docker daemon by running: <pre><code>sudo service docker restart\n</code></pre></p>"},{"location":"system-administrator/installation/#installation","title":"Installation","text":"<p>Get the software. <pre><code>git clone https://github.com/tangerine-community/tangerine.git\ncd tangerine\n</code></pre> See releases tab on github for versions. Checkout the correct versions that you need. </p> <p><pre><code>   git checkout v3.31.1-rc-17 \n</code></pre> Create config.sh and change all required settings.  <pre><code>cp config.defaults.sh config.sh \n</code></pre></p> <p>Configure the platform - look at the next section for configuration options. Once configured execute the start command. <pre><code>vi config.sh \n</code></pre> Start the platform.  <pre><code>   sudo ./start.sh v3.31.1-rc-17\n</code></pre></p>"},{"location":"system-administrator/installation/#configsh-options","title":"Config.sh options","text":""},{"location":"system-administrator/installation/#hostname","title":"Hostname","text":"<p>T_HOST_NAME='DOMAIN'</p> <p>This makes the site available under this URL. In the AWS Route 53 configuration of Amazons (or in your DNS provider), we  point an A record DNS entry to the server's current IP. Tangerine requires a fully qualified domain name to function properly. This is due to a forced HTTS connection for updates and app sync. </p>"},{"location":"system-administrator/installation/#protocol","title":"Protocol","text":"<p>We always use a secure connection to ensure that data is encrypted during transmission. For local development we can stick with the http protocol on localhost, but for production environments this must be updated to </p> <p>T_PROTOCOL=\"https\"</p> <p>This configuration allows us to ensure secure connections, but it also allows us to use and force an SSL certificate. </p>"},{"location":"system-administrator/installation/#usernames-and-passwords","title":"Usernames and passwords","text":"<p>There are two mandatory usernames and passwords that we must establish. Those are the T_USER1 and T_USER1_PASSWORD which is the primary admin user whose password cannot be updated from the interface. The other user is the database user T_COUCHDB_USER_ADMIN_NAME and their password T_COUCHDB_USER_ADMIN_PASS. Use strong passwords for both users. </p> <p>If we want to change the T_USER1_PASSWORD we can update it directly in the config.sh file and then rebuild the container using the start.sh script. The database administrator password cannot be changed directly. To update the CouchDB password after your site has been setup and start.sh run, you must follow these steps: - CouchDB Password Update</p> <p>T_USER1=\"user1\" - do not change and leave as user1 T_USER1_PASSWORD=\"STRONG_PASS\" T_COUCHDB_USER_ADMIN_NAME=\"admin\" \u2013 do not change and leave as admin T_COUCHDB_USER_ADMIN_PASS=\"STRONG_PASS\"</p> <p>If you are using the MySQL module, you must also set the username and password for this user. MySQL Setup T_MYSQL_USER=\"admin\" - make no changes  T_MYSQL_PASSWORD=\"STRONG_PASS\"</p>"},{"location":"system-administrator/installation/#upload-token","title":"Upload Token","text":"<p>The upload token used in the default sync method is the authentication token that your app uses to send data during sync.  T_UPLOAD_TOKEN=\"RANDOM_STRONG_TOKEN\"</p> <p>If you update this token after a site has been started, you must also update it in each app-config.json file for each pool that already exists on the server. The app-config configuration is 'uploadToken'</p>"},{"location":"system-administrator/installation/#default-modules","title":"Default Modules","text":"<p>Enable desired modules. By default, we only have csv, Insert 'class' for Teach or 'mysql-js' for a MySQL module. Case modules must include both case and sync-protocol-2</p> <p>T_MODULES=\"['csv' ]\"</p>"},{"location":"system-administrator/installation/#container-names","title":"Container names","text":"<p>Tangerine allows you to name your containers with custom names. We use the default names      T_CONTAINER_NAME=\"tangerine\" T_COUCHDB_CONTAINER_NAME=\"couchdb\"</p> <p>For MySQL we also have T_MYSQL_CONTAINER_NAME=\"mysql\" T_MYSQL_USER=\"admin\" T_MYSQL_PASSWORD=\"STRONG_PASS\" T_MYSQL_PHPMYADMIN=\"FALSE\" \u2013 can be TRUE if we want to enable the admin tool</p>"},{"location":"system-administrator/installation/#port-configuration","title":"Port Configuration","text":"<p>There are two configurations for the listening ports. One is for the couch database on port 5984 and the other is for web requests on port 80. If no connections to the couch database are expected, we can leave the port configuration empty. The NGINX configuration forces the Tangerine container to listen on port 8080, otherwise leave as 80 and handled https on the ELB. Port 8080 is not exposed to the outside world.  </p> <p>T_COUCHDB_PORT_MAPPING=\" -p 5984:5984\" T_PORT_MAPPING=\"-p 8080:80\" - if using NGINX  T_PORT_MAPPING=\"-p 80:80\" - not using NGINX</p>"},{"location":"system-administrator/installation/#csv-generation-settings","title":"CSV Generation Settings","text":"<p>We use the default settings for CSV generation, where the delay in csv database creation a maximum of 300000 milliseconds (5 min). The other option available to us is batch size for csv processing. This setting allows us to modify the number of records that will be fragmented during csv generation. If the data volumes number in the thousands, you may want to increase them from 50 to 500. T_REPORTING_DELAY=\"300000\" T_CSV_BATCH_SIZE=50</p> <p>Below are other settings related to CSV generation. We can hide hidden values from forms and show them as a default value in the csv. The default setting for this is 999. We have changed it to ORIGINAL_VALUE which means that hidden entries in the form will be included in the csv files T_REPORTING_MARK_DISABLED_OR_HIDDEN_WITH=\"ORIGINAL_VALUE\"</p> <p>All skipped entries can be mapped to a certain value. The default settings here are maintained.  T_REPORTING_MARK_SKIPPED_WITH=\"SKIPPED\" In some cases when a form has been changed while it was in production, we will have certain variables that do not exist in all rows of the form. The default setting here is UNDEFINED. To keep the csv file simpler, we changed it to an empty string.  T_REPORTING_MARK_UNDEFINED_WITH=\"\"</p> <p>If you are modifying any of the above settings on a live site, your changes will be reflected only if you run start.sh after modifying the configuration file and clearing the report cache by running  <pre><code>docker exec tangerine reporting-cache-clear\n</code></pre></p>"},{"location":"system-administrator/installation/#hide-the-skip-if","title":"Hide the Skip-if","text":"<p>The default setting is true, and we've changed it to false. This option displays the Skip If setting for each entry in the Editor's backend interface. If set to true, we hide the skip if entry and only show the show-if. T_HIDE_SKIP_IF=\"false\"</p>"},{"location":"system-administrator/installation/#historical-apk-and-browser-versions","title":"Historical APK and browser versions.","text":"<p>Tangerine allows you to keep a historical list and links of APK files with build notes and tags. This can be very useful in an environment where forms are updated frequently. The default setting for both options is true. APK files can fill up disk space very quickly, therefore, we have set both below to false. If set to false, the historical list and links from the Version tab of the backend editor interface are also removed.      T_ARCHIVE_APKS_TO_DISK=\"false\" T_ARCHIVE_PWAS_TO_DISK=\"false\"</p>"},{"location":"system-administrator/installation/#automatic-historical-form-versions","title":"Automatic historical form versions","text":"<p>Every time you update a form; Tangerine uses git to store this change in the file system. The first setting tells Tangerine to commit form changes automatically, and the second option indicates how often a commit is made (in milliseconds). When you create a release, we also create a git tag in the form repository. Note that we don't show this on the interface but you can use the command line to find older versions of the forms.</p> <p>T_AUTO_COMMIT=\"true\" T_AUTO_COMMIT_FREQUENCY=\"6000000\"</p> <p>All other settings remain unchanged on a generic site setup</p> <p>All settings are documented within the file and placed here for consistency. </p> <p>Control whether the report output limit is per group or sideways. The other option is \"group,\" which will make sure that the assignment is applied at the group level. T_PAID_MODE=\"site\"</p> <p>The number of uploaded form responses that will be marked as paid, therefore ending up in the report outputs. T_PAID_ALLOWANCE=\"unlimited\" T_USER1_MANAGED_SERVER_USERS=\"false\"</p> <p>In the client, prevent users from editing their own profile. T_HIDE_PROFILE=\"false\"</p> <p>Sync Protocol 1 Only: On device registration, after the user creates the account, it will force the user to enter a 6-character code that references the online account. We set this on per group bases so that other groups not requiring this setting can be created. T_REGISTRATION_REQUIRES_SERVER_USER=\"false\"</p> <p>Synchronization Protocol 1 Only: In client synchronization, it will result in any changes made to a user profile on the server being downloaded and reflected on the client. This setting only works with new groups that are being created. T_CENTRALLY_MANAGED_USER_PROFILE=\"false\"</p> <p>Add replication entries in this array to boot the server into format of '{\"from\":\"localDbName\", \"to\":\"remoteDbUrl\", \"continuous\": true}' T_REPLICATE=\"[]\"</p> <p>To fill in categories in Teach: T_CATEGORIES=\"['one','two','three','four']\" Whether or not to use legacy parts of the system marked for obsolescence. At the moment, this is important for older customers loading on an older route. T_LEGACY=\"false\"</p> <p>Override the Tangerine docker image version to use. Note that you should also check that version in git. T_TAG=\"\"</p> <p>Apply Android tablet orientation. The options for T_ORIENTATION are in https://developer.mozilla.org/en-US/docs/Web/Manifest/orientation T_ORIENTATION=\"anybody\" T_CUSTOM_LOGIN_MARKUP='' \u2013 we can include some mark up to show branding or some message to the user when they go to login to the site.</p> <p>The value that will be used for the issuer parameter when signing JWT. T_JWT_ISSUER=\"Tangerine\"</p> <p>The validity period of a signed JWT token: Determines how long before a token is considered invalid. Expressed in seconds or in a string that describes a time interval as defined in https://github.com/zeit/ms T_JWT_EXPIRES_IN=\"1h\"</p> <p>Password Policy T_PASSWORD_POLICY=\"^(?=.[a-z])(?=.[A-Z])(?=.[0-9])(?=.[!@#\\$%^&amp;*])(?=.{ 8,})\" T_PASSWORD_RECIPE=\"The password must contain at least 1 lowercase alphabetic character, at least 1 uppercase alphabetic character, at least 1 numeric character, at least one special character, and must be eight characters or more\"</p> <p>Array of sources that can make requests to this server. Useful if you have an external browser-based application on a different origin that needs to make calls to this server. See the Express CORs options source settings for possible values. https://expressjs.com/en/resources/middleware/cors.html#configuration-options Example of use. Note that forward slashes are required before double quotes, otherwise bash filters them out and it won't be a valid JSON. T_CORS_ALLOWED_ORIGINS='[\\\"http://localhost:8080\\\"]' T_CORS_ALLOWED_ORIGINS=''</p>"},{"location":"system-administrator/installation/#cron-setup","title":"Cron setup","text":"<p>To make sure that Tangerine and the server it is installed on operate correctly add the below lines to cron (crontab -e) to restart the the containers once a day but also to keep the server up to date. <pre><code># Clear CSV download folder. Only remove files older then 30 days. \n0 5 * * * find /home/ubuntu/tangerine/data/csv/* -type f -name '*' -mtime +30 -exec rm {} \\;\n0 1 * * SAT sudo apt-get update &amp;&amp; sudo apt-get upgrade -y &amp;&amp; sudo apt-get autoremove -y &amp;&amp; sudo reboot \n0 4 * * * docker restart couchdb &amp;&amp; docker restart tangerine\n@reboot docker start couchdb &amp;&amp; sleep 10 &amp;&amp; docker start tangerine\n</code></pre></p> <p>If you are using nginx you have to use the below version of the cron setup <pre><code># Clear CSV download folder. Only remove files older then 30 days. \n0 5 * * * find /home/ubuntu/tangerine/data/csv/* -type f -name '*' -mtime +30 -exec rm {} \\;\n0 1 * * SAT sudo apt-get update &amp;&amp; sudo apt-get upgrade -y &amp;&amp; sudo apt-get autoremove -y &amp;&amp; sudo reboot\n0 4 * * * docker restart couchdb &amp;&amp; docker restart tangerine &amp;&amp; docker restart nginx\n@reboot docker start couchdb &amp;&amp; sleep 10 &amp;&amp; docker start tangerine &amp;&amp; docker start nginx\n# update nginx cert\n0 3 * * * docker exec nginx certbot renew --post-hook \"service nginx reload\"\n</code></pre></p>"},{"location":"system-administrator/installation/#installation-folder","title":"Installation folder","text":"<p>The installation folder is the one where you checkout the code and executed ./start.sh script. Generally, this is /home/ubuntu/tangerine</p> <p>In this folder you have: - The config.sh file - All the Tangerine source code - The data folder \u2013 where all data used by Tangerine is saved    - Archives     - Client     - Couchdb - where the database is      - Groups - where all groups are - The default content sets in content-sets</p>"},{"location":"system-administrator/installation/#nginx-setup","title":"NGINX setup","text":"<p>NGINX is a proxy that can be used to intercept all traffic and also to serve the security certificates for Tangerine and other applications.  What we have to do: - Ask to listen on ports 80 and 443 - to redirect traffic for our site from port 80 to port 8080 on the tangerine container. - to redirect all insecure traffic to 443 - Serve our lets encrypt certificate - Other configurations</p> <p>For detailed NGINX setup to to Configuring Nginx as SSL proxy server for Tangerine </p>"},{"location":"system-administrator/installation/#tangeirne-upgrades","title":"Tangeirne upgrades","text":"<p>For specific upgrade instructions follow each release documentation. Generic instructions are available here: Server Upgrade Instructions </p>"},{"location":"system-administrator/installation/#maintenance-and-helper-scripts","title":"Maintenance and helper scripts","text":"<p>Take a moment to explore the info command inside your tangerine container. Some useful scripts are:</p> <p>create-group \u2013 creates a test group with some content set</p> <p>reporting-cache-clear \u2013 used to reset and restart the reporting service. This service builds the csv and logstash databases</p> <p>release-apk and release-pwa \u2013 releases a group\u2019s apk or pwa version</p> <p>import-archives \u2013 imports all archives from the archive folder. Files exported from a tablet can be placed in this folder to be imported into a particular group. </p> <p>Other scripts used for maintenance testing and update are available from the info command.</p>"},{"location":"system-administrator/installation/#backup-strategies","title":"Backup Strategies","text":"<p>What needs to be backed up? - The database folder - the groups folder - The digitized/rendered tools. - Config.sh file -  No need to backup the containers (Why?) - Physical copies - Setup an automated backup job to copy all file changes in the above data folders. - Setup database replication Setup couchdb replication from the couchdb interface Open http://localhost:5984/_utils/index.html on the server and find the replication link. Setup the replication as described here - Server image copies \u2013 create server image copies that can be restored on demand.</p> <p>Use a combination of folder sync and replication to back up your site or create hot swap copies</p>"},{"location":"system-administrator/installation/#recovery","title":"Recovery","text":"<p>There are two things you need to recover - The groups folder - the rendered tools - The database</p> <p>If you kept a copy of the data folder, just restore this folder on your new server</p> <p>Steps to follow in data recovery - Checkout the desired version of the Tangerine code - Configure the config.sh file or copy if from backup - Copy and paste the data folder if you are restoring from a physical backup - Execute the start.sh script  - Generate any apk or pwa for groups that are currently in data collection.</p>"},{"location":"system-administrator/integrate-group-with-github/","title":"Integrate a group's content with a repository on Github","text":""},{"location":"system-administrator/integrate-group-with-github/#step-1","title":"Step 1","text":"<p>Create a group in the Editor. Note the ID in the URL starting with <code>group-</code>.</p>"},{"location":"system-administrator/integrate-group-with-github/#step-2","title":"Step 2","text":"<p>Create a repository on Github for your group's content.</p>"},{"location":"system-administrator/integrate-group-with-github/#step-3","title":"Step 3","text":"<p>SSH into the server and create a \"deploy key\" the server will use to authenticate to Github with. When running <code>ssh-keygen</code>, do not password protect the key file. When it prompts you for a password, just hit enter.</p> <pre><code>ssh &lt;your server&gt;\nsudo su\nssh-keygen -t rsa -b 4096 -C \"root@domain_of_server\"\ncat /root/.ssh/id_rsa.pub\n</code></pre> <p>Change the key permissions if necessary.</p> <p>Copy the key contents that we just \"cat'ed\" to the screen. Then go to your Repository on Github and click on <code>Settings -&gt; Deploy keys -&gt; Add deploy key</code> and paste that key in the key contents, enable \"Allow write access\" and save.</p>"},{"location":"system-administrator/integrate-group-with-github/#step-4","title":"Step 4","text":"<p>Now we push our group's initial content to our github repository with the following commands...</p> <pre><code>cd tangerine/data/client/content/groups/&lt;group id&gt;\ngit init\ngit add .\ngit commit -m \"first commit\"\ngit remote add origin &lt;githut repository SSH URL&gt;\ngit push origin master\n</code></pre> <p>You should now see on your Github Repository code page a list of files pushed from the server.</p>"},{"location":"system-administrator/integrate-group-with-github/#step-5","title":"Step 5","text":"<p>We'll now configure your server to periodically pull content changes from Github.</p> <p><pre><code>ssh &lt;your server&gt;\nsudo su\ncrontab -e\n</code></pre> Enter the following onto a new line. Replace <code>&lt;group id&gt;</code> with appropriate Group ID. <pre><code>* * * * * cd /home/ubuntu/tangerine/data/client/content/groups/&lt;group id&gt; &amp;&amp; GIT_SSH_COMMAND='ssh -i /root/.ssh/id_rsa' git pull origin master &amp;&amp; git add . &amp;&amp; git commit -m 'auto-commit' &amp;&amp; GIT_SSH_COMMAND='ssh -i /root/.ssh/id_rsa' git push origin master\n</code></pre></p>"},{"location":"system-administrator/managing-data-conflicts/","title":"Managing Data Conflicts","text":"<p>When using Sync Protocol 2 we can sync data down to Devices. Because of this it is possible for two Devices to edit the same data between syncs. This causes a \"Data Conflict\". When a Device is syncing and a conflict is detected. </p> <p>To manage Data Conflicts you will need to know the IP Address of your server and have the CouchDB Admin credentials found in <code>config.sh</code>.</p>"},{"location":"system-administrator/managing-data-conflicts/#step-1-find-documents-with-conflicts","title":"Step 1: Find Documents with Conflicts","text":"<p>Go to <code>&lt;serverIpAddress&gt;:5984/_utils/#database/&lt;groupId&gt;/_design/shared_conflicts/_view/shared_conflicts</code>.  This is a list of Documents with conflicts. Click the first one in the list which will open the Document with conflicts. Note this doc has link in the second bar from the top on the right with label of \"Conflicts\".</p>"},{"location":"system-administrator/managing-data-conflicts/#step-2-merge-conflict-revisions-contents-into-doc","title":"Step 2: Merge Conflict Revisions contents into Doc","text":"<p>With the Document open, in Fauxton, copy the URL and open another window with the same URL side by side. On the window on the left, click the \"Conflicts\" link in the top right of that window. Note the \"Conflicting Revisions\" drop down in the Conflicts Browser. These Conflicting Revisions are the contents of Documents that were the \"losing revision\" when in a conflict. Selecting a \"Conflict Rev\" in the Conlict Revisions dropdown will result in the difference between the Conflicting Revision's contents and the current revision's contents. JSON highlighted in green belongs to the Conflict Rev. </p> <p>Cycle through each of the Conflict Revs migrating JSON highlighted in green over to the current Document edit view in your browser on the right. When all contents in the Conflict Revs have been migrated (AKA \"merged\") into the current Document, save the current doc with the changes and proceed to the next step.</p>"},{"location":"system-administrator/managing-data-conflicts/#step-3-archive-conflict-revisions","title":"Step 3: Archive Conflict Revisions","text":"<p>Use the <code>pouchdb-couchdb-archive-conflicts</code> CLI tool to archive the conflicts in the Document. This will result in removing the Document for the conlist list in step 1 and save a copy of each conflict revision into <code>`&lt;serverIpAddress&gt;:5984/_utils/#database/&lt;groupId&gt;-conflict-revs/</code>.</p> <p>Install the tool. Requires Node.js (https://nodejs.org/). <pre><code>npm install -g pouchdb-couchdb-archive-conflicts\n</code></pre></p> <pre><code>archive-conflicts http://&lt;username&gt;:&lt;password&gt;@&lt;serverIp&gt;:5984/&lt;groupId&gt; &lt;docId&gt; \n</code></pre> <p>Now return to Step 1 and pick the next Document in the list.</p>"},{"location":"system-administrator/managing-data-conflicts/#reviewing-archived-conflict-revisions","title":"Reviewing Archived Conflict Revisions","text":"<p>To review a Documents archived conflict revisions, add a <code>byConflictDocId</code> view to the database.</p> <pre><code>function (doc) {\n  emit(doc.conflictDocId, doc.conflictRevId);\n}\n</code></pre> <p>When viewing this view you can then click \"Options\" and enter the follwing under \"By Keys\" <code>[\"&lt;docId&gt;\"]</code>.</p>"},{"location":"system-administrator/managing-legacy-conflict-issues/","title":"Managing Legacy Conflict Issues","text":"<p>The following describes a process for managing data conflicts using a deprecated feature known as \"Auto-merge\" and \"Conflict Issues\".</p> <p>When using Sync Protocol 2 we can sync data down to Devices. Because of this it is possible for two Devices to edit the same data between syncs. This causes a \"Data Conflict\". When a Device is syncing and a conflict is detected, the Tangerine software will try to resolve that conflict by merging the two versions. When Tangerine does this, it creates a \"Conflict Issue\" which stores the two versions and the merged version for safe keeping (in Issue this is refered to as A, B, and Merged). These are important to review in the Issue queue to ensure that the merge is satisfactory. Sometimes a merge will not be possible and the data will be left in a Conflict state according to CouchDB's definition of Conflict. </p> <p>To manage Data Conflicts you will need to know the IP Address of your server and CouchDB Admin credentials found in <code>config.sh</code>.</p>"},{"location":"system-administrator/managing-legacy-conflict-issues/#monitor-how-many-conflict-issues-there-are-by-document-id","title":"Monitor how many Conflict Issues there are by Document ID","text":"<ol> <li>Go to <code>&lt;serverIpAddress&gt;:5984/_utils/#/database/&lt;groupId&gt;/_design/issuesOfTypeConflictByConflictingDocTypeAndConflictingDocId/_view/issuesOfTypeConflictByConflictingDocTypeAndConflictingDocId</code></li> <li>Click wrench for view on left hand column, make sure \"Reduce: Count\" is enabled on the view.</li> <li>Click \"Options\", check \"Reduce\" and then set \"Group Level\" of 2. </li> </ol>"},{"location":"system-administrator/managing-legacy-conflict-issues/#get-a-list-of-all-conflict-issues-in-a-group","title":"Get a list of all conflict issues in a group","text":"<p><code>&lt;serverIpAddress&gt;/&lt;groupId&gt;/_design/issuesOfTypeConflictByConflictingDocTypeAndConflictingDocId/_view/issuesOfTypeConflictByConflictingDocTypeAndConflictingDocId?reduce=false</code></p>"},{"location":"system-administrator/managing-legacy-conflict-issues/#check-a-single-document-for-conflicts","title":"Check a single document for conflicts","text":""},{"location":"system-administrator/managing-legacy-conflict-issues/#get-a-list-of-all-conflict-issues-for-a-document","title":"Get a list of all conflict issues for a document","text":"<p>If you know the document id for a case, you can get a list of its conflict issues.</p> <p>In the following example, the first parameter in the key is set to 'case' to signify that it is a case document (<code>type:'case'); however, in the future conflicts may also be</code>type:'response'.</p> <p>Replace <code>&lt;docId&gt;</code> and enter the following into your browser:</p> <p><code>&lt;serverIpAddress&gt;/&lt;groupId&gt;/_design/issuesOfTypeConflictByConflictingDocTypeAndConflictingDocId/_view/issuesOfTypeConflictByConflictingDocTypeAndConflictingDocId?reduce=false&amp;key=[\"case\",\"&lt;docId&gt;\"]</code></p>"},{"location":"system-administrator/managing-legacy-conflict-issues/#get-the-number-of-conflicts-in-a-document","title":"Get the number of conflicts in a document","text":"<p>If you know the document id for a case, replace <code>&lt;docId&gt;</code> and enter the following into your browser:</p> <p><code>&lt;serverIpAddress&gt;/&lt;groupId&gt;/_design/issuesOfTypeConflictByConflictingDocTypeAndConflictingDocId/_view/issuesOfTypeConflictByConflictingDocTypeAndConflictingDocId?reduce=true&amp;group_level=2&amp;key=[\"case\",\"&lt;docId&gt;\"]</code></p>"},{"location":"system-administrator/managing-legacy-conflict-issues/#monitor-active-database-conflicts-in-couchdb","title":"Monitor active Database Conflicts in CouchDB","text":"<p>Go to <code>&lt;serverIpAddress&gt;:5984/_utils/#database/&lt;groupId&gt;/_design/shared_conflicts/_view/shared_conflicts</code>. </p> <p>To view the number of conflicts per document, click the table tab. </p> <p>To resolve a conflict, click on the row to open the Doc in conflict. Then click the \"Conflicts\" tab to resolve the Conflict.</p>"},{"location":"system-administrator/managing-legacy-conflict-issues/#viewing-the-history-of-documents-in-the-database","title":"Viewing the history of Documents in the database","text":"<p>Sometimes it helps to look back at the history of a Case. When a Case is open in Tangerine Editor, you can run the following in the Chrome Devtools Console.</p> <pre><code>await T.case.getCaseHistory()\n</code></pre> <p>To look at the full picture that CouchDB server is aware of, use the following URL structure...</p> <p><pre><code>&lt;serverIpAddress&gt;:5984/&lt;groupId&gt;/&lt;docId&gt;?revs_info=true\n</code></pre> You will find the response contains a <code>_revs_info</code> property with an array of revisions. If a revisions has <code>\"status\"</code> of <code>\"unavailable\"</code>, then that revision is on the Device it came from. You can find out which Device likely has that revision by finding the next available revision, getting the doc at that revision, and inspecting the <code>modifiedByDeviceId</code> property. This is the version of the doc that was uploaded to the server. </p> <pre><code>&lt;serverIpAddress&gt;:5984/&lt;groupId&gt;/&lt;docId&gt;?rev=&lt;revId&gt;\n</code></pre>"},{"location":"system-administrator/mysql-js/","title":"MySQL-JS Module","text":""},{"location":"system-administrator/mysql-js/#enabling-mysql-js-module","title":"Enabling MySQL-JS module","text":"<p>Important! If reenabling the mysql module, remove the mysql folder: <code>rm -r data/mysql</code></p>"},{"location":"system-administrator/mysql-js/#step-1","title":"Step 1","text":"<p>Ensure the variables from the <code>MySQL</code> section are in your customized <code>config.sh</code> file. </p>"},{"location":"system-administrator/mysql-js/#mysql","title":"Mysql","text":"<ul> <li>T_MYSQL_CONTAINER_NAME=\"mysql\" # Either the name of the mysql Docker container or the hostname of a mysql server or AWS RDS MySQL instance.</li> <li>T_MYSQL_USER=\"admin\" # Username for mysql credentials</li> <li>T_MYSQL_PASSWORD=\"password\" # Password for mysql credentials</li> <li>T_USE_MYSQL_CONTAINER=\"true\" # If using a Docker container, set to true. This will automatically start a mysql container   when using a Tangerine launch script.</li> </ul>"},{"location":"system-administrator/mysql-js/#step-2","title":"Step 2","text":"<p>Ensure the <code>T_MYSQL_PASSWORD</code> variable is set to a sufficiently secure string. Failure to properly secure this password will without a doubt result in ransomware bots hacking your database.</p>"},{"location":"system-administrator/mysql-js/#step-3","title":"Step 3","text":"<p>Add the mysql module to <code>T_MODULES_ENABLED</code> in <code>config.sh</code>. </p> <p>For example: <pre><code>T_MODULES=\"['csv','mysql-js']\"\n</code></pre></p>"},{"location":"system-administrator/mysql-js/#step-4","title":"Step 4","text":"<p>Run the start script to load in new configuration. Do this even if your server is already running. Note that restarting the container will not work, we have to run <code>./start.sh</code> to recreate the container with the new configuration.</p> <pre><code>./start.sh &lt;version&gt;\n</code></pre> <p>Note</p> <p>Upgrading an older version of Tangerine may require running <code>docker exec tangerine push-all-groups-views</code> after to enable indexes used for mysql</p>"},{"location":"system-administrator/mysql-js/#step-5","title":"Step 5","text":"<p>Clear reporting cache to start generating a MySQL database for each group.</p> <pre><code>docker exec tangerine reporting-cache-clear\n</code></pre> <p>You can check in on the progress of generating the mysql database using the <code>mysql-report</code> command. (Warning The <code>mysql-report</code> command creates a heavy workload to an instance so do not use it when mysql is trying to process a lot of data from couchdb. See the \"Troubleshooting\" section below.) It will return for each kind of case data and form, how many records are in the source database vs. how many have made it over to mysql. Note that if your system is under heavy load during the processing of this, this command may stress it out even more so it may be best to wait until you see a load of less than one using a tool like <code>top</code> or <code>htop</code>. </p> <pre><code>docker exec -it tangerine bash \nmysql-report &lt;groupId&gt; | json_pp\n</code></pre>"},{"location":"system-administrator/mysql-js/#step-6","title":"Step 6","text":"<p>In the reboot instruction in crontab that to starts Tangerine on reboot, add mysql container to the containers that start before tangerine and increase the sleep command to 60 seconds. Failure to implement this will result in tangerine failing to start on reboot.</p> <pre><code>@reboot docker start couchdb mysql &amp;&amp; sleep 60 &amp;&amp; docker start tangerine\n</code></pre> <p>Also add a cron job to run mysql-report at 1 a.m every day - this will keep the mysql indexes current.</p> <pre><code># Run mysql-report at 1 a.m every day:\n# 0 1 * * * docker exec tangerine mysql-report group-479f455e-b1bd-481b-8bd7-0d985a07431c\n</code></pre>"},{"location":"system-administrator/mysql-js/#step-7","title":"Step 7","text":"<p>The most basic way to access MySQL would be to use the MySQL CLI. </p> <pre><code>docker exec -it tangerine bash\nmysql -u\"$T_MYSQL_USER\" -p\"$T_MYSQL_PASSWORD\" -hmysql\n</code></pre> <p>On the mysql command line, list the available databases using <code>show databases;</code>. Note how the database names are similar to the Group ID's these correspond with except with dashes removed. For example, if the group ID was <code>group-abc-123</code>, the corresponding MySQL database would be <code>groupabc123</code>. To select a database, type <code>use &lt;database ID&gt;;</code> then <code>show tables;</code> to list out the available tables.</p>"},{"location":"system-administrator/mysql-js/#step-8","title":"Step 8","text":"<p>To set up remote encrypted connections to mysql, three options:</p> <ol> <li>TLS: In the <code>tangerine/data/mysql/databases</code> folder you will find files <code>ca.pem</code>, <code>client-cert.pem</code>, and <code>client-key.pem</code>. Distribute those files to your MySQL users so they may connnect to your server's IP addres port 3306 using these certificates. For example, <code>mysql  -u admin -p\"you-mysql-password\" --ssl-ca=ca.pem --ssl-cert=client-cert.pem --ssl-key=client-key.pem</code>.</li> <li>SSH: For each person using MySQL, they will need SSH access to the server. When granted, they may use tunneling of mysql port 3306 over SSH to access mysql at <code>127.0.0.1:3306</code>.  For example, to set up an SSH port forwarding on Mac or Linux, run <code>ssh -L 3306:your-server:3306 your-server</code>.</li> <li>VPN: If you connect to MySQL via the IP address of the server, using a VPN will ensure that communication with MySQL is encrypted. Note however that the traffic will be visible to those also on your VPN so make sure it's a trusted VPN only used by those who have permission to access the data.</li> </ol>"},{"location":"system-administrator/mysql-js/#resetting-mysql-databases","title":"Resetting MySQL databases","text":"<p>If you need to reset the mysql database, do the following: - stop the mysql docker instance: <code>docker stop mysql</code> - delete ./data/mysql - remove 'mysql-js' from T_MODULES - Run ./start.sh or ./develop.sh. This will remove the mysql-js module from enabledModules in the app couch database's modules doc. See \"Disabling modules: mysql-js\" in the console to confirm. - add 'mysql-js' to T_MODULES - this will init the mysql databases. - Run ./start.sh or ./develop.sh. This will add the mysql-js module from enabledModules in the app couch database's modules doc and create the databases. See \"Enabling modules: mysql-js\" in the console to confirm.</p>"},{"location":"system-administrator/mysql-js/#configuration","title":"Configuration","text":"<ul> <li>You may add configuration options to ./server/src/mysql-js/conf.d/config-file.js. </li> <li>If you are using the mysql container and are having errors with very large forms, the new settings in ./server/src/mysql-js/conf.d/config-file.js   should help. You will need to completely rebuild the mysql database. Stop the Tangerine and mysql containers. Delete (or -rename) the ./data/mysql directory.   Then restart Tangerine using the ./start.sh or develop.sh script.</li> <li>Important: If you already have a mysql instance running and don't want to rebuild the mysql database, delete the <code>innodb-page-size=64K</code>   line from ./server/src/mysql-js/conf.d/config-file.js; otherwise, your mysql instance will not start.</li> <li>If making changes to the <code>innodb-page-size</code> option, you must delete the ./data/mysql directory.</li> </ul>"},{"location":"system-administrator/mysql-js/#troubleshooting","title":"Troubleshooting","text":""},{"location":"system-administrator/mysql-js/#issue-data-on-the-mysql-db-is-far-behind-the-couchdb","title":"Issue: Data on the Mysql db is far behind the Couchdb.","text":"<p>This scenario can happen when replicating data from a Production database on another server instance. Step to triage and resolve this issue:</p> <ol> <li>run <code>docker ps -a</code> to see if the tangerine and couchdb instances are up</li> <li>Bring back up those instance by using the <code>start.sh</code> script.</li> <li>Confirm using <code>docker logs -f tangerine</code> that the docker containers are back up and processing data correctly.</li> <li>If the server must catch up more than a day's worth of documents, use the wedge pre-warm-views at the end of the day to hit all views in the couchdb to pre-warm them (i.e. index those views). </li> <li>After the indexes have been built, use the <code>mysql-report groupID</code> command to see if the mysql and couchdb databases are caught up.</li> </ol>"},{"location":"system-administrator/mysql-module/","title":"MySQL Module (Legacy)","text":"<p>On newer versions of Tangerine Please use MySQL-JS module instead </p>"},{"location":"system-administrator/mysql-module/#enabling-mysql-module","title":"Enabling MySQL module","text":"<p>This module is the legacy module starting with the release of Tangerine v3.26.0. If you are running a version prior to v3.26.0, you should consider switching to the new MySQL-JS Module for improved performance. </p> <p>Important! If reenabling the mysql module, remove the mysql folder: <code>rm -r data/mysql</code></p>"},{"location":"system-administrator/mysql-module/#step-1","title":"Step 1","text":"<p>Ensure the variables from the <code>MySQL</code> section in config.defaults.sh are in your customized <code>config.sh</code> file. </p>"},{"location":"system-administrator/mysql-module/#step-2","title":"Step 2","text":"<p>Ensure the <code>T_MYSQL_PASSWORD</code> variable is set to a sufficiently secure string. Failure to properly secure this password will without a doubt result in ransomware bots hacking your database.</p>"},{"location":"system-administrator/mysql-module/#step-3","title":"Step 3","text":"<p>Add the mysql module to <code>T_MODULES_ENABLED</code> in <code>config.sh</code>. </p> <p>For example: <pre><code>T_MODULES=\"['csv','mysql']\"\n</code></pre></p>"},{"location":"system-administrator/mysql-module/#step-4","title":"Step 4","text":"<p>Run the start script to load in new configuration. Do this even if your server is already running. Note that restarting the container will not work, we have to run <code>./start.sh</code> to recreate the container with the new configuration.</p> <pre><code>./start.sh &lt;version&gt;\n</code></pre> <p>Note: Upgrading an older version of Tangerine may require running <code>docker exec tangerine push-all-groups-views</code> after to enable indexes used for mysql</p>"},{"location":"system-administrator/mysql-module/#step-5","title":"Step 5","text":"<p>Clear reporting cache to start generating a MySQL database for each group.</p> <pre><code>docker exec tangerine reporting-cache-clear\n</code></pre> <p>You can check in on the progress of generating the mysql database using the <code>mysql-report</code> command. (Warning The <code>mysql-report</code> command creates a heavy workload to an instance so do not use it when mysql is trying to process a lot of data from couchdb. See the \"Troubleshooting\" section below.) It will return for each kind of case data and form, how many records are in the source database vs. how many have made it over to mysql. Note that if your system is under heavy load during the processing of this, this command may stress it out even more so it may be best to wait until you see a load of less than one using a tool like <code>top</code> or <code>htop</code>. </p> <pre><code>docker exec -it tangerine bash \nmysql-report &lt;groupId&gt; | json_pp\n</code></pre>"},{"location":"system-administrator/mysql-module/#step-6","title":"Step 6","text":"<p>In the reboot instruction in crontab that to starts Tangerine on reboot, add mysql container to the containers that start before tangerine and increase the sleep command to 60 seconds. Failure to implement this will result in tangerine failing to start on reboot.</p> <pre><code>@reboot docker start couchdb mysql &amp;&amp; sleep 60 &amp;&amp; docker start tangerine\n</code></pre> <p>Also add a cron job to run mysql-report at 1 a.m every day - this will keep the mysql indexes current.</p> <pre><code># Run mysql-report at 1 a.m every day:\n# 0 1 * * * docker exec tangerine mysql-report group-479f455e-b1bd-481b-8bd7-0d985a07431c\n</code></pre>"},{"location":"system-administrator/mysql-module/#step-7","title":"Step 7","text":"<p>The most basic way to access MySQL would be to use the MySQL CLI. </p> <pre><code>docker exec -it tangerine bash\nmysql -u\"$T_MYSQL_USER\" -p\"$T_MYSQL_PASSWORD\" -hmysql\n</code></pre> <p>On the mysql command line, list the available databases using <code>show databases;</code>. Note how the database names are similar to the Group ID's these correspond with except with dashes removed. For example, if the group ID was <code>group-abc-123</code>, the corresponding MySQL database would be <code>groupabc123</code>. To select a database, type <code>use &lt;database ID&gt;;</code> then <code>show tables;</code> to list out the available tables.</p>"},{"location":"system-administrator/mysql-module/#step-8","title":"Step 8","text":"<p>To set up remote encrypted connections to mysql, three options:</p> <ol> <li>TLS: In the <code>tangerine/data/mysql/databases</code> folder you will find files <code>ca.pem</code>, <code>client-cert.pem</code>, and <code>client-key.pem</code>. Distribute those files to your MySQL users so they may connnect to your server's IP addres port 3306 using these certificates. For example, <code>mysql  -u admin -p\"you-mysql-password\" --ssl-ca=ca.pem --ssl-cert=client-cert.pem --ssl-key=client-key.pem</code>.</li> <li>SSH: For each person using MySQL, they will need SSH access to the server. When granted, they may use tunneling of mysql port 3306 over SSH to access mysql at <code>127.0.0.1:3306</code>.  For example, to set up an SSH port forwarding on Mac or Linux, run <code>ssh -L 3306:your-server:3306 your-server</code>.</li> <li>VPN: If you connect to MySQL via the IP address of the server, using a VPN will ensure that communication with MySQL is encrypted. Note however that the traffic will be visible to those also on your VPN so make sure it's a trusted VPN only used by those who have permission to access the data.</li> </ol>"},{"location":"system-administrator/mysql-module/#troubleshooting","title":"Troubleshooting","text":""},{"location":"system-administrator/mysql-module/#issue-data-on-the-mysql-db-is-far-behind-the-couchdb","title":"Issue: Data on the Mysql db is far behind the Couchdb.","text":"<p>This scenario can happen when replicating data from a Production database on another server instance. Step to triage and resolve this issue:</p> <ol> <li>run <code>docker ps -a</code> to see if the tangerine and couchdb instances are up</li> <li>Bring back up those instance by using the <code>start.sh</code> script.</li> <li>Confirm using <code>docker logs -f tangerine</code> that the docker containers are back up and processing data correctly.</li> <li>If the server must catch up more than a day's worth of documents, use the wedge pre-warm-views at the end of the day to hit all views in the couchdb to pre-warm them (i.e. index those views). </li> <li>After the indexes have been built, use the <code>mysql-report groupID</code> command to see if the mysql and couchdb databases are caught up.</li> </ol>"},{"location":"system-administrator/rescuing-a-full-Tangerine-tablet/","title":"Rescuing a Full Tangerine Tablet","text":"<p>If you have a tablet that is no longer able to sync because the disk is full, you can pull files off it and install on a clean tablet. </p> <p>This is relevant only to tablets that are runing sqlite/sqlCypher.</p>"},{"location":"system-administrator/rescuing-a-full-Tangerine-tablet/#listing-files-in-private-database-dir","title":"Listing files in private database dir","text":"<p>Android databases are stored in a defined location. You may list them using the <code>adb shell</code> command. </p> <pre><code>adb shell \"run-as org.rti.tangerine ls -lsa -R /data/data/org.rti.tangerine/databases/\"\n</code></pre> <p>If the package name of your Tangerine differs, substitute 'org.rti.tangerine' with your package name.</p> <p>This command should return something like the following: <pre><code>4 -rw-------  1 u0_a647 u0_a647       0 2021-11-04 08:15 shared-user-database\n4 -rw-------  1 u0_a647 u0_a647       0 2021-11-04 08:15 shared-user-database-index\n500 -rw-------  1 u0_a647 u0_a647  507904 2021-11-04 08:08 shared-user-database-mrview-058020864d38b2f7c7203401485e2f6d\n3180 -rw-------  1 u0_a647 u0_a647 3248128 2021-11-04 08:10 shared-user-database-mrview-0b8e5d92430db6d71d1379d7c9862b79\n500 -rw-------  1 u0_a647 u0_a647  507904 2021-11-04 08:06 shared-user-database-mrview-0c1a03125cc747770c5ae321753f4ec2\n3156 -rw-------  1 u0_a647 u0_a647 3223552 2021-11-04 08:10 shared-user-database-mrview-34a25e481c98744e67427811b36567c4\n2900 -rw-------  1 u0_a647 u0_a647 2961408 2021-11-04 08:13 shared-user-database-mrview-3d495638a28b32b444ca7a9452a9ec5e\n2924 -rw-------  1 u0_a647 u0_a647 2985984 2021-11-04 08:12 shared-user-database-mrview-918a54f957639ea4a8d24e16c6d93f50\n500 -rw-------  1 u0_a647 u0_a647  507904 2021-11-04 08:12 shared-user-database-mrview-a3b8826be74302784a7af55681039cac\n744 -rw-------  1 u0_a647 u0_a647  757760 2021-11-04 08:08 shared-user-database-mrview-d121af6c2693286feb260c1843a65996\n1344 -rw-------  1 u0_a647 u0_a647 1372160 2021-11-04 08:09 shared-user-database-mrview-e0db7a0ed91857c44dd6ad77ee5b37f4\n2588 -rw-------  1 u0_a647 u0_a647 2641920 2021-11-04 08:07 shared-user-database-mrview-e4d1230d206245fc83e75ee420b1f31e\n500 -rw-------  1 u0_a647 u0_a647  507904 2021-11-04 08:11 shared-user-database-mrview-fc95555b88f96506de12d279698695f2\n72 -rw-------  1 u0_a647 u0_a647   69632 2021-11-04 08:04 tangerine-variables\n</code></pre></p> <p>In this example, the tablet was running with the \"encryptionPlugin\":\"CryptoPouch\" configuration in app-config.json. That switch configures the app to use CryptoPouch, which encrypts documents in the app's indexedb for storage and stores indexes using sqlCypher. This is why the shared-user-database is 0 but the indexes - such as shared-user-database-mrview-fc95555b88f96506de12d279698695f2 - are large. </p>"},{"location":"system-administrator/rescuing-a-full-Tangerine-tablet/#pulling-the-files","title":"Pulling the files","text":"<p>Once you list the files, you much change permissions on them and then pull them. Change the permissions (chmod 666) for each file you wish to transfer:</p> <pre><code>adb shell \"run-as org.rti.tangerine chmod 666 /data/data/org.rti.tangerine/databases/shared-user-database-mrview-e4d1230d206245fc83e75ee420b1f31e\"\n</code></pre> <p>Once the permissions is changed, you may transfer the files:</p> <pre><code>adb exec-out run-as org.rti.tangerine cat databases/shared-user-database-mrview-e4d1230d206245fc83e75ee420b1f31e &gt; shared-user-database-mrview-e4d1230d206245fc83e75ee420b1f31e\n</code></pre> <p>After the files are transferred, you may reset the permissions:</p> <pre><code>adb shell \"run-as org.rti.tangerine chmod 600 /data/data/org.rti.tangerine/databases/shared-user-database-mrview-e4d1230d206245fc83e75ee420b1f31e\"\n</code></pre>"},{"location":"system-administrator/rescuing-a-full-Tangerine-tablet/#restoring-a-database","title":"Restoring a database","text":"<p>In the docs/system-administrator/restore-from-backup.md, there are instructions in the section \"Restoring backups onto a fresh Tangerine app installation\" on how to restore a database. Those instructions show how to use Android File Transfer to move the database files to the clean Android device and restore the app using a fresh Tangerine installation.</p>"},{"location":"system-administrator/rescuing-a-full-Tangerine-tablet/#database-file-analysis","title":"Database file analysis","text":"<p>In the docs/system-administrator/restore-from-backup.md, there are instructions in the section \"Viewing data from an encrypted backup\" that show how to compile and use sqlcipher to view and fix a corrupt SqlCypher database.</p>"},{"location":"system-administrator/restore-from-backup/","title":"Restoring from a Backup","text":""},{"location":"system-administrator/restore-from-backup/#backing-up","title":"Backing up","text":"<p>The Export Backup feature is available from the right-hand menu by selecting \"Export Data.\" </p> <p>Backups come in two types: - tabs with in-app scryption: a single file per database - tabs with device encryption: one directory per database, each of which contain many files.</p> <p>The Export Backup screen displays the backup location, and if the device uses device encryption, an input where the user may modify the \"Docs per backup file\" parameter. </p> <p>Press \"Export Data for all Users\" to initiate export.</p> <p>It will display a status message after each database backup is saved. The backup files will be saved in the <code>Documents/Tangerine/backups</code> directory. Use Android File transfer tool to transfer the files. Save all of the database backup files or directories. There should be four databases backed up:</p> <ul> <li>shared-user-database</li> <li>users</li> <li>tangerine-lock-boxes</li> <li>tangerine-variables</li> </ul> <p></p> <p>The listing is similar when backing up an encrypted database; however, it backs up 4 files instead of 4 directories:</p> <p></p>"},{"location":"system-administrator/restore-from-backup/#restoring-backups-onto-a-fresh-tangerine-app-installation","title":"Restoring backups onto a fresh Tangerine app installation.","text":"<p>This only works for sync-protocol-2. </p> <p>Connect the tablet to the pc with a USB cable. Use Android File transfer or Samsung Smart Switch to browse to the <code>Documents/Tangerine/restore</code> directory. Copy all database files or directories generated by the Export Data command from the pc to the <code>restore</code> directory. </p> <p></p> <p>Install the Tangerine app on the tablet.  DO NOT do the initial device setup (language selection/enter admin password/etc); instead, press the \"Restore Backup\" button to start the restore process. </p> <p></p> <p>Read the instructions. When ready, press the \"Restore Backup\" button. It will display a confirmation prompt:</p> <p></p> <p>If the device does not have a \"Documents\" directory in Internal Storage, it displays an error. The Troubleshooting section provides details about the error and its resolution:</p> <p></p> <p>The restore feature logs the process for each database. After the databases have been restored, it initiates indexing of the databases:</p> <p></p> <p>When restoring an encrypted database, indexing is not run due to the state of the application at this point of the installation. In this case, prepare to wait a few minutes or longer after restarting the app and logging in to allow it to index the home page. Once the home page is displayed, do a Sync to upload/download any updated files; this will also kick off indexing.</p> <p></p> <p>After the restore process is complete, click the context button (|||) to close Tangerine and launch it again to load with the restored databases.</p>"},{"location":"system-administrator/restore-from-backup/#restoring-form-history","title":"Restoring form history","text":"<p>On a tablet, the history of every form response change is saved. An agglomeration of these changes is what is sync'd to the server. It is possible to view all of these changes using the tablet backup.</p> <p>After restoring the database, open the app in DevTools and in the javascript console enter the following commands:</p> <pre><code>const db = await T.user.getUserDatabase()\n// docId is the document _id of the document you are trying to get the history from.\nlet docId = 'uuid'\nconst diffs = await T.tangyForms.getDocRevHistory(docId)\n// get diffs into copy buffer\ncopy(diffs)\n</code></pre> <p>If there were any conflicts in the doc, they should be in _conflicts.</p> <p>You may wish to list all issues: <pre><code>const issues = (await db.query('byType', {key: 'issue', include_docs: true}))\n.rows\n.map(row =&gt; row.doc)\n.filter(issue =&gt; issue.resolveOnAppContexts &amp;&amp; issue.resolveOnAppContexts.includes('CLIENT'))\n</code></pre></p>"},{"location":"system-administrator/restore-from-backup/#viewing-data-from-an-encrypted-backup","title":"Viewing data from an encrypted backup","text":"<p>This is a deep dive - you probably don't need to do this. </p> <p>Ask user to go to Export Data and press \"Export Data for all Users\". The backup files will be saved in the <code>Android/data/org.rti.tangerine/files</code> directory. Transfer the shared-user-database file. Then ask the user to go to the About menu and read off the Device ID. </p> <p>In Fauxton, look up the device record in the group-uuid-devices database. Copy the value for the <code>key</code> property.</p> <p>Building SqlCipher on MacOSX:</p> <p>```shell script git clone https://github.com/sqlcipher/sqlcipher.git cd sqlcipher/sqlcipher ./configure --enable-tempstore=yes CFLAGS=\"-DSQLITE_HAS_CODEC -I/usr/local/opt/openssl/include/\" LDFLAGS=\"/usr/local/opt/openssl/lib/libcrypto.a\" <pre><code>To use the compiled sqlcipher:\n\n```shell script\nsqlcipher/sqlcipher ~/Downloads/shared-user-database\n</code></pre> In the sqlcipher console, enter the key:</p> <pre><code>PRAGMA key = 'secret-key-uuid-very-secret';\n</code></pre> <p>To list tables:</p> <p><pre><code>.tables\n</code></pre> Output:  ```shell script attach-seq-store  by-sequence       local-store attach-store      document-store    metadata-store <pre><code>## Recovering a corrupted database\n\nOpen the database:\n\n```shell script\nsqlcipher/sqlcipher ~/Downloads/shared-user-database\n</code></pre> Enter the key:</p> <pre><code>PRAGMA key = 'secret-key-uuid-very-secret';\n</code></pre> <p>Run a check on the database. It will probably return something like \"database disk image is malformed\", which is not terribly useful:</p> <pre><code>sqlite&gt;PRAGMA integrity_check;\n</code></pre> <p>Run the following commands to dump the sql and build a new database (kudos: https://blog.niklasottosson.com/databases/sqlite-check-integrity-and-fix-common-problems/):</p> <p><pre><code>sqlite&gt;.output backup.db\nsqlite&gt;.dump\nsqlite&gt;.quit\n&gt;sqlite3 database_fixed.db\nsqlite&gt;.read backup.db\nsqlite&gt;.quit\n</code></pre> If there were no errors, you should be able to query database_fixed.db. If not, open backup.db in a text editor and rummage through the sql statements.</p>"},{"location":"system-administrator/sync-protocol-1/","title":"Sync Protocol 1","text":"<p>Sync protocol 1 is deprecated as of 12-15-2022. We strongly recommend using Sync protocol 2, which is more secure. </p>"},{"location":"system-administrator/sync-protocol-1/#background","title":"Background","text":"<p>Sync protocol 1 was the original sync protocol for Tangerine that features a one-way push sync to a server. </p>"},{"location":"system-administrator/sync-protocol-1/#configuration","title":"Configuration","text":""},{"location":"system-administrator/sync-protocol-1/#configsh","title":"config.sh","text":"<ul> <li>T_MODULES: Make sure that 'sync-protocol-2' is not listed in T_MODULES.</li> <li>T_UPLOAD_TOKEN: The value for T_UPLOAD_TOKEN must match the value for 'uploadToken' in the group's app-config.json.</li> <li>T_UPLOAD_WITHOUT_UPDATING_REV : A config.sh setting for use in high-load instances using sync-protocol-1.   *** Using this setting COULD CAUSE DATA LOSS. ***   This setting uses a different function to process uploads that does not do a GET before the PUT in order to upload a document.   Please note that if there is a conflict it will copy the _id to originalId and POST the doc, which will create a new id.   If that fails, it will log the error and not upload the document to the server, but still send an 'OK' status to client.   The failure would result in data loss.</li> </ul>"},{"location":"system-administrator/sync-protocol-1/#app-configjson","title":"app-config.json","text":"<ul> <li>uploadTokenThe value for 'uploadToken' must match the value for T_UPLOAD_TOKEN in config.sh.</li> <li>uploadUnlockedFormReponses - when set to true this populates a list of doc_ids from responsesUnLockedAndNotUploaded view  to be uploaded - even if doc.complete === false. This value is used mostly in projects Tangerine Class/Teach, where students are tested over time.</li> </ul>"},{"location":"system-administrator/sync-protocol-1/#syncing","title":"Syncing","text":"<p>Sync in sync-protocol-1 is very simple: if queries a view to check what docs satisfy this criteria: <code>!doc.uploadDatetime || doc.lastModified &gt; doc.uploadDatetime)</code> If <code>uploadUnlockedFormReponses</code> is set, it includes docs where complete === false.</p>"},{"location":"system-administrator/sync-protocol-2/","title":"Sync Protocol 2 (two-way sync)","text":""},{"location":"system-administrator/sync-protocol-2/#background","title":"Background","text":"<p>When Tangerine was originally created, devices would only use a one-way sync from the tablet to the server sync-protocol-1 doc. Sync Protocol 2 was developed to enable two-way sync; typically, all data from the tablet is pushed to the server, and - in order to conserve bandwidth - only data from some forms is pulled to the tablet. </p> <p>The form responses that are synced depend on which forms are configured for sync and limited to a grouping by the \"location\" field in that users' profile.</p> <p>For example: An installation has two Forms, Form A and Form B. Only Form A is configured to sync. User A who has \"facility 1\" assigned to them in their user profile creates a form response for Form A and Form B then initiates a sync to find that two form responses have been pushed up. User B has \"facility 1\" assigned to them in their user profile and initiates a sync to find they pulled down one form response for Form A that originated on User A's device. If User B modifies this form response, it will be pushed on the next sync and then later User A would pull down the change. Let's say there is a User C who is assigned to \"facility 2\" in their user profile. When they initiate a sync, they will not receive any form responses from the server because the server only has form responses from User A who is assigned to \"facility 1\".</p>"},{"location":"system-administrator/sync-protocol-2/#enabling-sync-protocol-2-for-new-groups","title":"Enabling Sync Protocol 2 for new Groups","text":"<p>Note</p> <p>Sync Protocol 2 is usually automatically enabled for new groups; however, these instructions show how to manually configure it.</p> <ol> <li>Enable Sync Protocol 2 before creating a new group by editing <code>config.sh</code> by adding <code>\"sync-protocol-2\"</code> to <code>T_MODULES</code>. </li> <li>Create a new group.</li> <li>Define location list levels and content in <code>Config -&gt; Location List</code>. </li> <li>Create a new form in <code>Author -&gt; Forms</code>.</li> <li>Go to <code>Deploy -&gt; Device Users</code> and create new Device Users.</li> <li>Go to <code>Deploy -&gt; Devices</code> and create new Devices. </li> <li>Go to <code>Deploy -&gt; Releases</code> and release the app.</li> </ol> <p><code>\"syncProtocol\":\"2\"</code> Enables a \"Device Setup\" process on first boot of the client application. This requires you set up a \"Device\" record on the server. When setting up a Device record on the server, it will give you a QR code to use to scan from the tablet in order to receive its device ID and token.</p>"},{"location":"system-administrator/sync-protocol-2/#upgrade-an-existing-group-to-sync-protocol-2","title":"Upgrade an existing group to Sync Protocol 2","text":"<p>If planning to use <code>`\"syncProtocol\":\"2\"</code> and a project already uses <code>\"centrallyManagedUserProfile\" : true</code>, remove <code>\"centrallyManagedUserProfile\": true</code> and configure the user profile's custom sync settings to push. </p>"},{"location":"system-administrator/sync-protocol-2/#managing-data-conflicts","title":"Managing Data Conflicts","text":"<p>Because we can sync data down to Devices, it's possible for two Devices to edit the same data between syncs. This causes a \"Data Conflict\". It's important for someone to monitor conflicts to ensure data integrity. Please refer to Managing Data Conflicts documentation.</p>"},{"location":"system-administrator/sync-protocol-2/#modes-and-stages-of-sync-protocol-2","title":"Modes and stages of Sync Protocol 2.","text":"<p>There are two different modes of sync: </p> <ul> <li>Initial device setup: After a device has been registered (on tablet), the initial sync is executed. The initial sync has 3 stages: </li> <li>Pull: It pulls documents from the server in batches, set by initialBatchSize from app-config.json (default: 1000). No documents are pushed, since no data collection has happened so far. </li> <li>Status uploaded: Status of this sync process is uploaded.</li> <li> <p>Database optimization: After this initial sync, database indexes are created an optimized, which takes a little while. These indexes are critical to the app's performance.</p> </li> <li> <p>Routine sync: After a short period of data collection, the user executes an Online sync. This sync has 4 stages:</p> </li> <li>Pull: Pull any new or updated documents from the server. </li> <li>Push: Pushes any documents created on the tablet</li> <li>Status uploaded: Status of this sync process is uploaded.</li> <li>Database optimization: Indexes are updated. </li> </ul>"},{"location":"system-administrator/sync-protocol-2/#sync-settings-in-app-configjson","title":"Sync settings in app-config.json","text":"<p>Here are the settings that may be modified in app-config.json for sync: - initialBatchSize = (default: 1000) Number of documents downloaded in the first sync when setting up a device. - batchSize (default: 200) - Number of documents downloaded upon each subsequent sync. - writeBatchSize = (default: 50) - Number of documents written to the tablet during each sync batch. - changes_batch_size = (default: 50) - Enables support for reducing the number of documents processed in the changed feed when syncing. This setting will help sites that experience crashes when syncing or indexing documents. Using this setting will slow sync times.</p> <p>If the tablet user logs in as \"admin\", she may access the \"Admin Configuration\" menu. The \"Pull all docs from the server\" feature enables \"catching up\" any documents that were missed in previous syncs. This resets a placeholder variable (\"since\") to 0, causing the replication API to replicate any documents or updated documents that are not on the tablet. This feature uses the \"initialBatchSize\" setting to download larger batches of documents. </p> <p>If users report errors during sync, consider reducing these settings. The \"writeBatchSize\" is the most critical setting because it manages how many documents are written to the database at a time. If the batch is too large, the sync may fail.</p>"},{"location":"system-administrator/sync-protocol-2/#security","title":"Security","text":"<p>A big part of using Sync Protocol 2 is embracing device configuration into the workflow. Sync Protocol 2 is more than just sync: it also provides the structure for encrypting a database. A mobile device must be registered in Tangerine before it may sync. The \"Deploy / Devices\" page enables registration of a device. Device registration creates a key (for encrypting the db), token(for sync authentication with the server), and other identifiers associated with that device. The admin then scans a QR code for the device's registration that installs the device record (which includes the key) in the device's tangerine-lock-boxes IndexedDB database (see LockBoxService), and is used to encrypt the Tangerine databases. A user's username and password are used to decrypt the lockbox.   - See db.factory to see how a key is passed in to encrypt a db.  - See sync.service to see how deviceToken is used for authentication in the syncSessionUrl.</p>"},{"location":"system-administrator/sync-strategies/","title":"Sync Strategies","text":""},{"location":"system-administrator/sync-strategies/#overview","title":"Overview","text":"<p>The choice of sync strategy impacts how Tangerine syncs with the server. If you configure a form to use two-way sync, it uses CouchDB replication; otherwise, it uses custom sync. How are these two types of sync different? - CouchDB replication:  -- If there is conflicting data on the server, the document update fails and it creates a log of the conflict on the uploaded document -- It currently does not notify the tablet user that there was a conflict. The data on the server displays the previous data, not the new, conflict data. See below how to view the new, conflict data. -- Uses more bandwidth - Custom sync -- If there is conflicting data on the server, it overwrites the document and does not make a log of the conflict. It uses the pouchdb-upsert plugin to do the write. -- Uses less bandwidth</p>"},{"location":"system-administrator/sync-strategies/#how-to-tell-if-there-are-conflicts-when-using-couchdb-replication","title":"How to tell if there are conflicts when using CouchDB replication?","text":"<p>Add \"conflicts=true\" to the url if checking view curl, or in your application, add {conflicts: true} option when you get() it. It will list the conflicts:</p> <pre><code>_conflicts:[\n\"29-0003a0b8af090d907efecde3aa121416\",\n\"25-f712a217de615f44c66ddb16b1a53a19\",\n\"14-bad1258430d22ad41dc9ce4123283c4f\",\n\"5-3fcde4c45f910b7a0c541e837e4ffd3c\"\n]\n</code></pre> <p>Query the form using \"rev\" in the querystring to view the conflicted version.</p> <pre><code>http://localhost:5984/group-58093841-eaeb-4e51-8675-29757d71fd35/3cec5368-7b89-43cd-9c59-bcd1584dd4ea?rev=5-3fcde4c45f910b7a0c541e837e4ffd3c\n</code></pre> <p>See https://pouchdb.com/guides/conflicts.html for more information.</p>"},{"location":"system-administrator/tangerine-nginx-ssl/","title":"Configuring Nginx as SSL proxy server for Tangerine","text":""},{"location":"system-administrator/tangerine-nginx-ssl/#update","title":"Update","text":"<p>Issue #3147 describes the start-ssl.sh script that automates installation of the SSL certificates  as well as the letsencrypt-nginx-proxy-companion and nginx-proxy containers. The first time it runs it may error out - do a <code>docker logs -f letsencrypt-nginx-proxy-companion</code> to see error. If it does, restart the container (<code>docker restart letsencrypt-nginx-proxy-companion</code>). </p> <p>You may disregard the following notes - the new script supersedes them; however, they may have some useful information. </p>"},{"location":"system-administrator/tangerine-nginx-ssl/#initial-configuration","title":"Initial configuration","text":"<p>First open config.sh and change the port mapping of Tangerine  <pre><code>T_PORT_MAPPING=\"-p 8080:80\"\n</code></pre></p> <p>Rebuild the tangerine  container by running ./start.sh</p>"},{"location":"system-administrator/tangerine-nginx-ssl/#pull-nginx-docker-image-and-install-certbot-inside-the-nginx-container","title":"Pull nginx docker image and install certbot inside the nginx container","text":"<p>If your container is not called tangerine adjust below. --link is to allow the ngin container to forward to the tangerine one</p> <pre><code>docker pull nginx\ndocker run -p 80:80 -p 443:443 --link tangerine:tangerine --restart always --name nginx -d nginx\n</code></pre> <p>Go into the nginx container and execute the below commands</p> <pre><code>docker exec -it nginx bash\n\napt-get update &amp;&amp; apt-get install certbot vim python3-certbot-nginx -y\n</code></pre> <p>Open the config file</p> <p><pre><code>vi /etc/nginx/conf.d/default.conf\n</code></pre> Adjust the server_name to your domain and the size of the client body</p> <pre><code>server_name My.Domain.com;\nclient_max_body_size 0; \n</code></pre> <p>Replace the location directive with the one below: <pre><code>location / {\n            # First attempt to serve request as file, then\n            # as directory, then fall back to displaying a 404.\n            proxy_pass_header  Server;\n            proxy_set_header   Host $http_host;\n            proxy_redirect     off;\n            proxy_set_header   X-Real-IP $remote_addr;\n            proxy_set_header   X-Scheme $scheme;\n            proxy_set_header X-Forwarded-Host $host:$server_port;\n            proxy_set_header X-Forwarded-Proto https;\n            proxy_pass         http://tangerine;\n        }\n</code></pre> Save the file and exit vi</p> <p>Now execute and follow the promtps for cerbot. It will fail but that's ok <pre><code>certbot --nginx\n</code></pre> The above will generate the certificate according to My.Domain.com name given. Select options 1. My.Domain.com</p> <p>Reload the config by running <pre><code>nginx -s reload\n</code></pre></p> <p>Exit the nginx container and add some configuration for autmatic updates of certificates Execute crontab \u2013e and add the line below</p> <pre><code> 0 3 * * * docker exec -it nginx certbot renew --post-hook \"service nginx reload\"\n</code></pre> <p>Optionally save your image to your docker images <pre><code>docker commit nginx nginx/nginx:configuredNginx\n</code></pre></p> <p>Note that your nginx container is now linked to your tangerine container. Every time you execute start.sh for tangerine you have to start a new nginx continer to udpate the link. To recreate using the saved image run   <pre><code>docker run -p 80:80 -p 443:443 --link tangerine:tangerine --restart always --name nginx -d nginx/nginx:configuredNginx\n</code></pre></p> <p>Point your DNS to the actual server </p>"},{"location":"system-administrator/troubleshooting-android-devices/","title":"Troubleshooting Android Devices","text":""},{"location":"system-administrator/troubleshooting-android-devices/#modify-the-app-configjson-on-a-tangerine-apk-install","title":"Modify the app-config.json on a Tangerine APK Install","text":"<p>If an Android device is having trouble, you may want to tweak the app-config.json settings on that specific device. Use the following commands to pull the app-config.json file off the device, modify it on your computer, and then push it back to the device.</p> <pre><code>adb shell\nrun-as org.rti.tangerine\n# Discover what the path to the release is (will be a datetime), then use for subsequent paths.\nls files/cordova-hot-code-push-plugin/\ncd files/cordova-hot-code-push-plugin/2021.09.14-18.12.15/www/shell/assets\ncp app-config.json /sdcard/Download/\nexit\nadb pull /sdcard/Download/app-config.json\n# Time to modify app-config.json.\nvim app-config.json\nadb push app-config.json /sdcard/Download/\nadb shell\nrun-as org.rti.tangerine\n# Make sure to use that datetime path discovered earlier.\nmv /sdcard/Download/app-config.json /data/user/0/org.rti.tangerine/files/cordova-hot-code-push-plugin/2021.09.14-18.12.15/www/shell/assets/\n</code></pre>"},{"location":"system-administrator/upgrade-checklist/","title":"Upgrade checklist","text":""},{"location":"system-administrator/upgrade-checklist/#test-on-qa-server","title":"Test on QA server","text":"<ul> <li> Clone production server to QA server.</li> <li> Remove all cronjobs that may be pushing to remote git repositories.</li> <li> Remove all CouchDB replications that may be pushing data to remote CouchDBs.</li> <li> Update <code>T_HOSTNAME</code> in <code>tangerine/config.sh</code>.</li> <li> Run <code>./start.sh &lt;currently used version of tangerine&gt;</code>. This puts the updated config in <code>config.sh</code> into the container.</li> <li> Update <code>serverUrl</code> in all <code>app-config.json</code> files for each group in <code>tangerine/data/group/&lt;your-group-id&gt;/client/app-config.json</code>.  Find and replace from the tangerine folder by modifying the following command: <code>find ./data/groups/ -type f -name \"app-config.json\" -print0 | xargs -0 sed -i '' -e 's/production-server-hostname/qa-server-hostname/g'</code></li> <li> Release all APKs and PWAs. This puts all updated app config into the APKs and PWAs.</li> <li> Install and set up PWA/APKs for groups to test.</li> <li> Upgrade the QA server following the server instructions for the release you are upgrading to in <code>CHANGELOG.md</code> (https://github.com/Tangerine-Community/Tangerine/blob/master/CHANGELOG.md). Note that you must upgrade incrementally between the versions. If you skip one you may miss important updates or they may not apply correctly and you risk corrupting your install without knowing it.</li> <li> Test functionality on the server.</li> <li> Release updated APKs and PWAs.</li> <li> Upgrade test tablet and test functionality.</li> </ul>"},{"location":"system-administrator/upgrade-checklist/#deploy-to-production","title":"Deploy to production","text":"<ul> <li> Make backup of production server.</li> <li> Release PWAs/APKs on the test channels for all groups.</li> <li> Install and set up PWA/APKs for groups to test using APK/PWA on the test channel.</li> <li> Upgrade the QA server following the server instructions for the release you are upgrading to in <code>CHANGELOG.md</code> (https://github.com/Tangerine-Community/Tangerine/blob/master/CHANGELOG.md). Note that you must upgrade incrementally between the versions. If you skip one you may miss important updates or they may not apply correctly and you risk corrupting your install without knowing it.</li> <li> Test functionality on the server.</li> <li> Release updated APKs and PWAs on the test channel.</li> <li> Upgrade test tablet and test functionality.</li> <li> Release updated APKs and PWAs on the live channel.</li> <li> Note the Build ID of the APK or PWA on the live channel, then in the content repository tag a release with a corresponding Build ID in git. If using Github, use the Releases feature and note the version of Tangerine upgraded to along with any other notes.</li> <li> Terminate the QA server.</li> </ul>"},{"location":"system-administrator/upgrade-instructions/","title":"Upgrade instructions","text":""},{"location":"system-administrator/upgrade-instructions/#server-upgrade-instructions","title":"Server upgrade instructions","text":"<p>Reminder: Consider using the Tangerine Upgrade Checklist for making sure you test the upgrade safely.</p> <p>Preparation</p> <p>Tangerine v3 images are relatively large, around 12GB. The server should have at least 20GB of free space plus the size of the data folder. Check the disk space before upgrading the the new version using the following steps:</p> <pre><code>cd tangerine\n# Check the size of the data folder.\ndu -sh data\n# Check disk for free space.\ndf -h\n</code></pre> <p>If there is less than 20 GB plus the size of the data folder, create more space before proceeding. Good candidates to remove are: older versions of the Tangerine image and data backups. <pre><code># List all docker images.\ndocker image ls\n# Remove the image of the version that is not being used.\ndocker rmi tangerine/tangerine:&lt;unused_version&gt;\n# List all data backups.\nls -l data-backup-*\n# Remove the data backups that are old and unneeded.\nrm -rf ../data-backup-&lt;date&gt;\n</code></pre></p> <p>Upgrade</p> <p>After ensuring there is enough disk space, follow the steps below to upgrade the server.</p> <ol> <li> <p>Backup the data folder <pre><code># Create a backup of the data folder.\ncp -r data ../data-backup-$(date \"+%F-%T\")\n</code></pre></p> </li> <li> <p>Confirm there is no active synching from client devices</p> </li> </ol> <p>Check logs for the past hour on the server to ensure it's not being actively used. Look for log messages like \"Created sync session\" for Devices that are syncing and \"login success\" for users logging in on the server.</p> <pre><code>docker logs --since=60m tangerine\n</code></pre> <ol> <li>Install the new version of Tangerine <pre><code># Fetch the updates.\ngit fetch origin\n# Checkout a new branch with the new version tag.\ngit checkout -b &lt;new_version&gt; &lt;new_version&gt;\n# Run the start script with the new version.\n./start.sh &lt;new_version&gt;\n</code></pre></li> </ol> <p>Clean Up</p> <p>After the upgrade, remove the previous version of the Tangerine image to free up disk space.</p> <pre><code>docker rmi tangerine/tangerine:&lt;previous_version&gt;\n</code></pre>"},{"location":"system-administrator/upgrades/","title":"Upgrades","text":""},{"location":"system-administrator/upgrades/#implementing-upgrades","title":"Implementing Upgrades","text":"<p>There are two ways to implement upgrades to Tangerine configuration or databases that cannot be automatically upgraded: - via a shell script, runnable via <code>docker exec -it tangerine /tangerine/server/src/upgrade/v3.9.0.js</code> - adding to the updates.ts array. This will run automatically when the client app starts if a new version was deployed.</p>"},{"location":"system-administrator/upgrades/#upgrading-a-server","title":"Upgrading a server","text":"<p>You must run each version's server image before running its upgrade. for example, if you are upgrading from v3.6.4 to v3.13.0, follow these steps:</p> <pre><code>git clone https://github.com/Tangerine-Community/Tangerine.git\ncd Tangerine\ngit fetch origin\ngit checkout v3.6.4\ncp config.defaults.sh config.sh\n# configure T_HOST_NAME, T_PROTOCOL (https), and T_MODULES (csv)\n./start.sh v3.6.4\ndocker exec -it tangerine reporting-cache-clear\ngit checkout v3.7.1\n./start.sh v3.7.1\ndocker exec tangerine translations-update\ngit checkout v3.8.0\n./start.sh v3.8.0\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.8.0.js\ngit checkout v3.8.1\nmv config.sh config.sh_backup\ncp config.defaults.sh config.sh\n# To edit both files in vim you would run...\nvim -O config.sh config.sh_backup\n# No upgrade script for this relese.\ngit checkout v3.9.0\n./start.sh v3.9.0\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.9.0.js\ngit checkout v3.10.0\n./start.sh v3.10.0\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.10.0.js\ngit checkout v3.11.0\n./start.sh v3.11.0\ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.11.0.js\n# There was a bug in 3.11.0 that causes a blank screen in earlier APK's\n# It is resolved in v3.12.\ngit checkout v3.12.0\n./start.sh v3.12.0\n# Run upgrade\ndocker exec -it tangerine reporting-cache-clear \ngit checkout v3.13.0\n./start.sh v3.13.0\ndocker exec -it tangerine reporting-cache-clear \ndocker exec -it tangerine /tangerine/server/src/upgrade/v3.13.0.js\n# Remove previous Tangerine version's Docker images.\ndocker rmi tangerine/tangerine:v3.6.4\ndocker rmi tangerine/tangerine:v3.8.0\ndocker rmi tangerine/tangerine:v3.8.1\ndocker rmi tangerine/tangerine:v3.9.0\ndocker rmi tangerine/tangerine:v3.10.0\ndocker rmi tangerine/tangerine:v3.11.0\ndocker rmi tangerine/tangerine:v3.13.0\n</code></pre>"},{"location":"system-administrator/upgrades/#limits-to-upgrades","title":"Limits to Upgrades","text":"<p>Read the instructions in the CHANGELOG.md. </p> <p>If testing a pre-v3.8 APK, it will fail to run on v3.8 or higher due to lack of newer Cordova plugins. </p>"},{"location":"system-administrator/upgrades/#update-tips","title":"Update tips","text":"<p>Be aware that sync-protocol 2 uses a shared database; therefore, you don't want to do the same update whenever a different user logs in. </p> <p>The <code>requiresViewsRefresh</code> property will update All Default User Docs, which may place too much load on the tablet when it re-indexes those views. </p> <p>The following code checks for that scenario and show how to update a single view:</p> <pre><code>  {\n    requiresViewsUpdate: false,\n    script: async (userDb, appConfig, userService: UserService) =&gt; {\n      // syncProtocol uses a single shared db for all users. Update only once.\n      if (appConfig.syncProtocol === '2' &amp;&amp; localStorage.getItem('ran-update-v3.9.0')) return\n      console.log('Updating to v3.9.0...')\n      await userDb.put(TangyFormsDocs[0])\n      await userDb.query('responsesUnLockedAndNotUploaded')\n      localStorage.setItem('ran-update-v3.9.0', 'true')\n    }\n</code></pre>"}]}