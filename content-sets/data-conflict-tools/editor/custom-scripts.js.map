{"version":3,"sources":["webpack://tangerine/./components/active-conflicts.js","webpack://tangerine/./components/archived-conflicts.js","webpack://tangerine/./components/custom-app.js","webpack://tangerine/./components/merge-log.js","webpack://tangerine/./components/search-active-conflicts.js","webpack://tangerine/./components/shared-styles.js","webpack://tangerine/./index.js","webpack://tangerine/webpack/bootstrap","webpack://tangerine/webpack/runtime/compat get default export","webpack://tangerine/webpack/runtime/define property getters","webpack://tangerine/webpack/runtime/hasOwnProperty shorthand","webpack://tangerine/webpack/runtime/make namespace object","webpack://tangerine/webpack/startup"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAiD;AACxB;AACqB;AACjB;AAC7B,oBAAoB,iDAAoB,GAAG;;AAE3C;AACA;AACA,yBAAyB,4CAAO;AAChC,+BAA+B,4CAAO,IAAI,OAAO;AACjD,2CAA2C,gBAAgB;AAC3D;AACA,wDAAwD,iBAAiB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAE8C;AACe;AAC7D,8BAA8B,mDAAU;;AAExC;AACA;AACA,MAAM,2DAAY;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB,eAAe;AACjC,cAAc,gBAAgB;AAC9B,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,sCAAS,QAAQ,QAAQ;AAClD;AACA,c;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,WAAW,6CAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,6CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB,6CAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sBAAsB,6CAAI;AAChD,oCAAoC,OAAO,0BAA0B;AACrE,8BAA8B,SAAS;AACvC,8BAA8B,uBAAuB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB,6CAAI;AACxC;AACA,qBAAqB,gCAAgC,gBAAgB,6CAA6C,OAAO,kBAAkB;AAC3I;AACA;AACA,kBAAkB,yCAAyC,6CAAI;AAC/D,wBAAwB,aAAa;AACrC,oBAAoB,2EAAU,CAAC,iEAAoC;AACnE;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB,6CAAI;AACzC;AACA,iEAAiE,oBAAoB;AACrF;AACA,wCAAwC,sBAAsB;AAC9D,gCAAgC,sCAAsC;AACtE;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,yBAAyB,cAAc,qBAAqB,MAAM,QAAQ;AAChG;AACA,4FAA4F,MAAM;AAClG;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,6BAA6B,sCAAS,QAAQ,QAAQ,GAAG,cAAc;AACvE,+BAA+B,sCAAS,QAAQ,QAAQ,GAAG,cAAc;AACzE;AACA,cAAc,sCAAS,QAAQ,QAAQ;AACvC,OAAO,YAAY;AACnB,YAAY,uCAAU,QAAQ,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,sCAAS,QAAQ,QAAQ,GAAG,MAAM;AAChE;AACA;AACA;AACA;AACA;AACA,2CAA2C,sCAAS,QAAQ,QAAQ,GAAG,MAAM,OAAO,mBAAmB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AChPiD;AACxB;AACqB;AAC9C,oBAAoB,iDAAoB,GAAG;;;AAGG;AACe;AAC7D,gCAAgC,mDAAU;;AAE1C;AACA;AACA,MAAM,2DAAY;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB,eAAe;AACjC,cAAc,gBAAgB;AAC9B,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA,yBAAyB,sCAAS,QAAQ,QAAQ;AAClD;AACA,c;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,WAAW,6CAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,6CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB,6CAAI;AAC3C;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB,6CAAI;AAC9C,kCAAkC,OAAO,0BAA0B;AACnE,4BAA4B,SAAS;AACrC,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,qBAAqB,6CAAI;AACzC,oCAAoC,gCAAgC,gBAAgB,6CAA6C,OAAO,kBAAkB;AAC1J;AACA,gBAAgB,yCAAyC,6CAAI;AAC7D,sBAAsB,aAAa;AACnC,kBAAkB,2EAAU,CAAC,iEAAoC;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,sCAAS,QAAQ,QAAQ,GAAG,MAAM;AAChE,yBAAyB,sCAAS,QAAQ,QAAQ,mFAAmF,MAAM;AAC3I;AACA;AACA;AACA;AACA,2CAA2C,sCAAS,QAAQ,QAAQ,iBAAiB,sBAAsB;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AC/IgC;AACF;AACP;AACc;AACS;AACe;;AAE7D,wBAAwB,mDAAU;;AAElC;AACA,Y;AACA,cAAc,eAAe;AAC7B,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,6CAAI;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,cAAc,6CAAI;AAC1B,QAAQ,aAAa,6CAAI;AACzB,UAAU,oBAAoB,6CAAI;AAClC;AACA;AACA,0BAA0B,oCAAoC;AAC9D,0BAA0B,sCAAsC;AAChE,0BAA0B,6BAA6B;AACvD,0BAA0B,2CAA2C;AACrE;AACA;AACA,UAAU,oBAAoB,6CAAI;AAClC,kCAAkC,iBAAiB;AACnD;AACA,UAAU,sCAAsC,6CAAI;AACpD;AACA;AACA,UAAU,oCAAoC,6CAAI;AAClD;AACA;AACA,UAAU,6BAA6B,6CAAI;AAC3C;AACA;AACA,UAAU,2CAA2C,6CAAI;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AC/GiD;AACxB;AACqB;AAC9C,oBAAoB,iDAAoB,GAAG;;;AAGG;AACe;AAC7D,uBAAuB,mDAAU;;AAEjC;AACA;AACA,MAAM,2DAAY;AAClB;AACA;;AAEA;AACA;AACA,kBAAkB,eAAe;AACjC,cAAc,gBAAgB;AAC9B,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA,yBAAyB,sCAAS,QAAQ,QAAQ;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,6CAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,6CAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB,6CAAI;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,sBAAsB,6CAAI;AAC9C,kCAAkC,OAAO,uBAAuB;AAChE,4BAA4B,eAAe;AAC3C,4BAA4B,SAAS;AACrC,4BAA4B,WAAW;AACvC,4BAA4B,oBAAoB;AAChD,4BAA4B,sBAAsB;AAClD,4BAA4B,mCAAmC;AAC/D,iCAAiC,aAAa;AAC9C,4BAA4B,UAAU;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB,6CAAI;AAC1C,qCAAqC,mBAAmB;AACxD,kBAAkB,2EAAU,CAAC,iEAAoC;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;AC5HiD;AACxB;AACqB;AAC9C,oBAAoB,iDAAoB,GAAG;;;AAGG;AACe;AAC7D,oCAAoC,mDAAU;;AAE9C;AACA;AACA,MAAM,2DAAY;AAClB;AACA;;AAEA;AACA;AACA,qBAAqB,eAAe;AACpC,kBAAkB,eAAe;AACjC,kBAAkB,eAAe;AACjC,cAAc,gBAAgB;AAC9B,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA,yBAAyB,sCAAS,QAAQ,QAAQ;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,6CAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,cAAc,6CAAI;AAC5B,sCAAsC;AACtC,WAAW,6CAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4BAA4B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,aAAa,6CAAI;AACjC;AACA,oBAAoB,oBAAoB,GAAG,gDAAgD;AAC3F;AACA;AACA,gBAAgB,0BAA0B,6CAAI;AAC9C;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B,6CAAI;AAClD,kCAAkC,OAAO,0BAA0B;AACnE,4BAA4B,SAAS;AACrC,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,oBAAoB,6CAAI;AACxC,oCAAoC,gCAAgC,gBAAgB,6CAA6C,OAAO,kBAAkB;AAC1J;AACA,gBAAgB,yCAAyC,6CAAI;AAC7D,sBAAsB,aAAa;AACnC,kBAAkB,2EAAU,CAAC,iEAAoC;AACjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA,8BAA8B,sCAAS,QAAQ,QAAQ,GAAG,MAAM;AAChE,uCAAuC,sCAAS,QAAQ,QAAQ,GAAG,MAAM;AACzE;AACA;AACA;AACA;AACA,2CAA2C,sCAAS,QAAQ,QAAQ,GAAG,MAAM,OAAO,mBAAmB;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;AC5LiC;;AAE1B,qBAAqB,4CAAG;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,weAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;;;;;;;;;;;;;;;;ACpbmC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAnC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA;WACA,gCAAgC,YAAY;WAC5C;WACA,E;;;;;WCPA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"custom-scripts.js","sourcesContent":["import { sharedStyles } from './shared-styles.js'\nimport axios from 'axios'\nimport * as Jsondiffpatch from 'jsondiffpatch'\nimport PouchDB from 'pouchdb'\nvar jsondiffpatch = Jsondiffpatch.create({});\n\nasync function archiveConflicts(dbPath, docId) {\n  try {\n    const dbSource = new PouchDB(dbPath)\n    const dbConflictRevs = new PouchDB(`${dbPath}-conflict-revs`)\n    const doc = await dbSource.get(docId, {conflicts: true})\n    for (let conflictRev of doc._conflicts) {\n      const conflictRevDoc = await dbSource.get(docId, {rev: conflictRev})\n      conflictRevDoc.conflictDocId = docId \n      conflictRevDoc.conflictRev = conflictRev\n      delete conflictRevDoc._id\n      delete conflictRevDoc._rev\n      await dbConflictRevs.post(conflictRevDoc)\n      await dbSource.remove(docId, conflictRev)\n    }\n    return doc._conflicts\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nimport { LitElement, html } from 'lit-element'\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\nclass ActiveConflicts extends LitElement {\n\n  static get styles() {\n    return [\n      sharedStyles\n    ]\n  }\n\n  static get properties(){\n    return {\n      selection: { type: Object },\n      ready: { type: Boolean },\n      list: { type: Array }\n    };\n  }\n\n  constructor() {\n    super()\n    this.loadCount = 0\n    this.searchString = '' \n    this.ready = false\n    this.conflictInfos = []\n    this.matches = []\n    this.selection = { conflicts:[] }\n  }\n\n  async connectedCallback() {\n    super.connectedCallback()\n    this.loadList()\n  }\n\n  async loadList() {\n    this.ready = false\n    const groupId = window.location.pathname.split('/')[2]\n    const result = await axios.get(`/db/${groupId}/_design/conflicts/_view/conflicts`)\n    this.list = result.data.rows.map(row => {\n      return { \n        _id: row.key, \n        numberOfConflicts: row.value\n      }\n    })\n    this.ready = true\n  }\n\n  render() {\n    return html`\n      <style>\n        #container {\n          margin: 15px;\n          padding: 15px;\n        }\n        .selection {\n          padding: 0px 15px;\n        }\n        .title {\n          margin: 15px 0px 5px;\n        }\n        .no-matches {\n          width: 300px\n        }\n        tr.header td {\n         font-weight: bold;\n        }\n        table.matches td {\n          text-align: right;\n          padding: 5px;\n          border: solid 1px #CCC;\n        }\n        paper-button {\n          background-color: var(--mdc-theme-secondary); \n          color: white;\n        }\n        juicy-ace-editor {\n          width: 750px;\n          height: 750px;\n          margin-bottom: 15px;\n        }\n        .diffs-container, .ids-container {\n          overflow: scroll;\n          height: 750px;\n        }\n      </style>\n      <div id=\"container\">\n        ${!this.ready ? html`\n          Loading active conflicts... \n        `: ``}\n        <table>\n          <tr>\n            <td valign=\"top\">\n              <h2>Docs with Active Conflicts</h2>\n              ${this.list.length > 0 ? html`\n                <div class=\"ids-container\"> \n                  <table class=\"matches\">\n                    <tr class=\"header\">\n                      <td> Doc ID </td>\n                      <td> Number of active conflicts </td>\n                    </tr>\n                    ${this.list.map(item => html`\n                      <tr @click=\"${() => { this.loadDoc(item._id) }}\">\n                        <td>${item._id}</td> \n                        <td>${item.numberOfConflicts}</td>\n                      </tr>\n                    `)}\n                  </table>\n                </div>\n              `: ``}\n            </td>\n            <td class=\"selection\" valign=\"top\">\n              ${this.selection.id ? html`\n                <h2>Conflict Diffs</h2>\n                <p>${this.selection.conflicts.length} Conflict Diff${this.selection.conflicts.length > 1 ? `s`:``} for ${this.selection.id}</p>\n              `: ``}\n              <div class=\"diffs-container\">\n                ${this.selection.conflicts.map(conflict => html`\n                  <h3>${conflict.rev}</h3>\n                  ${unsafeHTML(Jsondiffpatch.formatters.html.format(conflict.diff, this.selection.doc))}\n                `)}\n              </div>\n            </td>\n            <td valign=\"top\">\n              ${this.selection.doc ? html`\n                <h2>Merge</h2>\n                <juicy-ace-editor mode=\"ace/mode/json\" .value=\"${this.selection.JSON}\"></juicy-ace-editor>\n                <paper-textarea id=\"merge-comment\" label=\"Merge comment\"></paper-textarea>\n                <paper-button @click=\"${() => this.saveDoc() }\">MERGE CHANGES</paper-button>\n\t\t\t\t\t\t\t\t<paper-button @click=\"${() => this.archiveConflictRevisions()}\">ARCHIVE CONFLICT REVISIONS</paper-button>\n              `: ``}\n\n              \n\n            </td>\n          </table>\n        </div>\n    `\n  }\n\n  async archiveConflictRevisions() {\n    const groupId = window.location.pathname.split('/')[2]\n    const dbPath = `${window.location.protocol}` + '//' + `${window.location.host}/db/${groupId}`\n    const docId = this.selection.id\n    const confirmation = confirm(`Are you sure you want to archive conflict revisions for ${docId}?`)\n    if (!confirmation) return\n    this.selection = { conflicts: []}\n    this.list = []\n    this.ready = false\n    await archiveConflicts(dbPath, docId)\n    alert('Conflicts archived.')\n    this.loadList()\n  }\n\n  async saveDoc() {\n    const groupId = window.location.pathname.split('/')[2]\n    let docToSave\n    try {\n      docToSave = JSON.parse(this.shadowRoot.querySelector('juicy-ace-editor').value)\n    } catch(e) {\n      alert('Invalid JSON. Doc not saved.')\n      return\n    }\n    try {\n      const response = await axios.put(`/db/${groupId}/${docToSave._id}`, docToSave)\n      const mergedDoc = (await axios.get(`/db/${groupId}/${docToSave._id}`)).data\n      try {\n        await axios.put(`/db/${groupId}-merge-log`)\n      } catch (e) { }\n      await axios.post(`/db/${groupId}-merge-log/`, {\n        docId: docToSave._id,\n        mergedDoc,\n        originalDoc: this.selection.doc,\n        activeConflictRevs: this.selection.conflicts.map(conflict => conflict.rev), \n        timestamp: new Date().toISOString(),\n        comment: this.shadowRoot.querySelector('#merge-comment').value,\n        user: await T.user.getCurrentUser()\n      })\n    } catch (e) {\n      alert('Error saving')\n      console.error(e)\n      return\n    }\n    await this.loadDoc(docToSave._id)\n    alert('Saved successfully.')\n  }\n\n  async loadDoc(docId) {\n    const groupId = window.location.pathname.split('/')[2]\n    const currentDoc = (await axios.get(`/db/${groupId}/${docId}?conflicts=true`)).data\n    const conflictRevisionIds = [...currentDoc._conflicts] \n    delete currentDoc._conflicts\n    let conflicts = []\n    if (conflictRevisionIds) {\n      for (const conflictRevisionId of conflictRevisionIds) {\n        const conflictRevisionDoc = (await axios.get(`/db/${groupId}/${docId}?rev=${conflictRevisionId}`)).data\n        const comparison = jsondiffpatch.diff(currentDoc, conflictRevisionDoc)\n        const conflict = {\n          doc: conflictRevisionDoc,\n          rev: conflictRevisionDoc._rev,\n          diff: comparison\n        }\n        conflicts.push(conflict)\n      }\n    }\n    this.selection = {\n      id: currentDoc._id,\n      rev: currentDoc._rev,\n      doc: currentDoc,\n      JSON: JSON.stringify(currentDoc, null, 2),\n      conflicts \n    }\n  }\n\n}\n\ncustomElements.define('active-conflicts', ActiveConflicts);\n","import { sharedStyles } from './shared-styles.js'\nimport axios from 'axios'\nimport * as Jsondiffpatch from 'jsondiffpatch'\nvar jsondiffpatch = Jsondiffpatch.create({});\n\n\nimport { LitElement, html } from 'lit-element'\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\nclass ArchivedConflicts extends LitElement {\n\n  static get styles() {\n    return [\n      sharedStyles\n    ]\n  }\n\n  static get properties(){\n    return {\n      selection: { type: Object },\n      ready: { type: Boolean },\n      list: { type: Array }\n    };\n  }\n\n  constructor() {\n    super()\n    this.loadCount = 0\n    this.searchString = '' \n    this.ready = false\n    this.conflictInfos = []\n    this.matches = []\n    this.selection = { conflicts:[] }\n  }\n\n  async connectedCallback() {\n    super.connectedCallback()\n    const groupId = window.location.pathname.split('/')[2]\n    const result = await axios.get(`/db/${groupId}-conflict-revs/_design/byConflictDocId/_view/byConflictDocId?reduce=true&group_level=1`)\n    this.list = result.data.rows.map(row => {\n      return { \n        _id: row.key, \n        numberOfConflicts: row.value\n      }\n    })\n    this.ready = true\n  }\n\n  render() {\n    return html`\n      <style>\n        #container {\n          margin: 15px;\n          padding: 15px;\n        }\n        .selection {\n          padding: 0px 15px;\n        }\n        .title {\n          margin: 15px 0px 5px;\n        }\n        .no-matches {\n          width: 300px\n        }\n        tr.header td {\n         font-weight: bold;\n        }\n        table.matches td {\n          text-align: right;\n          padding: 5px;\n          border: solid 1px #CCC;\n        }\n      </style>\n      <div id=\"container\">\n        <h2>Docs with Archived Conflicts</h2>\n        ${!this.ready ? html`\n          Loading archived conflicts... \n        `: ``}\n        <table>\n          <tr>\n            <td valign=\"top\">\n              ${this.list.length > 0 ? html`\n                <table class=\"matches\">\n                  <tr class=\"header\">\n                    <td> Doc ID </td>\n                    <td> Number of archived conflicts </td>\n                  </tr>\n                  ${this.list.map(item => html`\n                    <tr @click=\"${() => { this.loadDoc(item._id) }}\">\n                      <td>${item._id}</td> \n                      <td>${item.numberOfConflicts}</td>\n                    </tr>\n                  `)}\n                </table>\n              `: ``}\n            </td>\n            <td class=\"selection\">\n              ${this.selection._id ? html`\n                <h2 class=\"title\">${this.selection.conflicts.length} Conflict Diff${this.selection.conflicts.length > 1 ? `s`:``} for ${this.selection.id}</h2>\n              `: ``}\n              ${this.selection.conflicts.map(conflict => html`\n                <h3>${conflict.rev}</h3>\n                ${unsafeHTML(Jsondiffpatch.formatters.html.format(conflict.diff, this.selection.doc))}\n              `)}\n            </td>\n          </table>\n        </div>\n    `\n  }\n\n  async loadDoc(docId) {\n    const groupId = window.location.pathname.split('/')[2]\n    const currentDoc = (await axios.get(`/db/${groupId}/${docId}`)).data\n    const result = await axios.get(`/db/${groupId}-conflict-revs/_design/byConflictDocId/_view/byConflictDocId?reduce=false&keys=[\"${docId}\"]`)\n    const conflictRevisionDocIds = result.data.rows.map(row => row.id) \n    let conflicts = []\n    if (conflictRevisionDocIds) {\n      for (const conflictRevisionDocId of conflictRevisionDocIds) {\n        const conflictRevisionDoc = (await axios.get(`/db/${groupId}-conflict-revs/${conflictRevisionDocId}`)).data\n        // Transform a conflictRevisionDoc to the actual doc at the time of the revision.\n        delete conflictRevisionDoc._id\n        delete conflictRevisionDoc.conflictDocId\n        conflictRevisionDoc._id = docId\n        conflictRevisionDoc._rev = conflictRevisionDoc.conflictRev\n        delete conflictRevisionDoc.conflictRev\n        const comparison = jsondiffpatch.diff(currentDoc, conflictRevisionDoc)\n        const conflict = {\n          doc: conflictRevisionDoc,\n          rev: conflictRevisionDoc._rev,\n          diff: comparison\n        }\n        conflicts.push(conflict)\n      }\n    }\n    this.selection = {\n      id: currentDoc._id,\n      rev: currentDoc._rev,\n      doc: currentDoc,\n      conflicts \n    }\n  }\n\n}\n\ncustomElements.define('archived-conflicts', ArchivedConflicts);\n","import './archived-conflicts.js'\nimport './active-conflicts.js'\nimport './merge-log.js'\nimport './search-active-conflicts.js'\nimport { LitElement, html } from 'lit-element'\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\n\nclass CustomApp extends LitElement {\n\n  static get properties() {\n    return { \n      route: { type: String },\n      ready: { type: String }\n    };\n  }\n\n  constructor() {\n    super()\n    window.App = this\n    this.ready = false\n    this.route = window.route || localStorage.getItem('route') || ''\n  }\n\n  async connectedCallback() {\n    super.connectedCallback()\n    this.ready = true\n  }\n\n  setRoute(route) {\n    window.route = route\n    localStorage.setItem('route', route)\n  }\n\n  go(route) {\n    this.setRoute(route)\n    this.route = route\n  }\n\n  set(name = '', value = '') {\n    localStorage.setItem(name, value)\n  }\n\n  get(name) {\n    return localStorage.getItem(name)\n  }\n\n  render() {\n    return html`\n\n      <style type=\"text/css\">\n      \t/**\n      \t * These styles just for the style guide\n      \t * The styles for the actual contents are in style.css\n      \t */\n      \tbody {\n      \t\tbackground-color: #3f3f43;\n      \t\tpadding-top: 15px;\n      \t}\n      \t.wrapper {\n      \t\twidth: 1120px;\n      \t\tpadding: 20px;\n      \t\tmargin: 0 auto;\n      \t\tbackground-color: #fff;\n      \t}\n      \t.tablet {\n      \t\twidth: 768px;\n      \t\tmargin: 0 auto;\n        }\n        home-button {\n          position: absolute;\n          top: 0px;\n          left: 0px;\n          z-index: 98765456789876545678;\n        }\n      </style>\n      ${!this.ready ? html`Loading...`:``}\n      ${this.ready ? html`\n        ${this.route === '' ? html`\n          <h1>Data Conflicts</h1>\n          <ul>\n            <li @click=\"${() => this.open('active-conflicts')}\">Active Conflicts</li>\n            <li @click=\"${() => this.open('archived-conflicts')}\">Archived Conflicts</li>\n            <li @click=\"${() => this.open('merge-log')}\">Merge Log</li>\n            <li @click=\"${() => this.open('search-active-conflicts')}\">Search Active Conflicts</li>\n          </ul>\n        `: ``}\n        ${this.route !== '' ? html`\n          <paper-button @click=\"${() => App.go('')}\">< BACK</paper-button> \n        `: ``}\n        ${this.route === 'archived-conflicts' ? html`\n          <archived-conflicts></archived-conflicts>\n        `: ``}\n        ${this.route === 'active-conflicts' ? html`\n          <active-conflicts></active-conflicts>\n        `: ``}\n        ${this.route === 'merge-log' ? html`\n          <merge-log></merge-log>\n        `: ``}\n        ${this.route === 'search-active-conflicts' ? html`\n          <search-active-conflicts></search-active-conflicts>\n        `: ``}\n      `: ``}\n    `\n  }\n\n  open(route) {\n    this.route = route\n  }\n\n}\n\ncustomElements.define('custom-app', CustomApp)\n","import { sharedStyles } from './shared-styles.js'\nimport axios from 'axios'\nimport * as Jsondiffpatch from 'jsondiffpatch'\nvar jsondiffpatch = Jsondiffpatch.create({});\n\n\nimport { LitElement, html } from 'lit-element'\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\nclass MergeLog extends LitElement {\n\n  static get styles() {\n    return [\n      sharedStyles\n    ]\n  }\n\n  static get properties(){\n    return {\n      selection: { type: Object },\n      ready: { type: Boolean },\n      list: { type: Array }\n    };\n  }\n\n  constructor() {\n    super()\n    this.loadCount = 0\n    this.searchString = '' \n    this.ready = false\n    this.conflictInfos = []\n    this.matches = []\n    this.selection = { diff: undefined }\n  }\n\n  async connectedCallback() {\n    super.connectedCallback()\n    const groupId = window.location.pathname.split('/')[2]\n    const result = await axios.get(`/db/${groupId}-merge-log/_all_docs?include_docs=true`)\n    this.list = result.data.rows\n      .map(row => row.doc)\n      .sort((a, b) => b.timestamp.localeCompare(a.timestamp))\n    this.ready = true\n  }\n\n  render() {\n    return html`\n      <style>\n        #container {\n          margin: 15px;\n          padding: 15px;\n        }\n        .selection {\n          padding: 0px 15px;\n        }\n        .title {\n          margin: 15px 0px 5px;\n        }\n        .no-matches {\n          width: 300px\n        }\n        tr.header td {\n         font-weight: bold;\n        }\n        table.matches td {\n          text-align: right;\n          padding: 5px;\n          border: solid 1px #CCC;\n        }\n      </style>\n      <div id=\"container\">\n        ${!this.ready ? html`\n          Loading merge log... \n        `: ``}\n        <table>\n          <tr>\n            <td valign=\"top\">\n              <h2>Merge Log</h2>\n              ${this.list.length > 0 ? html`\n                <table class=\"matches\">\n                  <tr class=\"header\">\n                    <td> Timestamp </td>\n                    <td> Merge ID </td>\n                    <td> Doc ID </td>\n                    <td> Merged Rev </td>\n                    <td> Original Rev </td>\n                    <td> Active Conflict Revs </td>\n                    <td> Comment </td>\n                    <td> User </td>\n                  </tr>\n                  ${this.list.map(item => html`\n                    <tr @click=\"${() => { this.loadItem(item) }}\">\n                      <td>${item.timestamp}</td> \n                      <td>${item._id}</td> \n                      <td>${item.docId}</td> \n                      <td>${item.mergedDoc._rev}</td>\n                      <td>${item.originalDoc._rev}</td>\n                      <td>${item.activeConflictRevs.join(', ')}</td>\n                      <td><pre>${item.comment}</pre></td>\n                      <td>${item.user}</td>\n                    </tr>\n                  `)}\n                </table>\n              `: ``}\n            </td>\n            <td class=\"diff\">\n              ${this.selection.diff ? html`\n                <h2>Diff for Merge ${this.selection._id}</h2>\n                ${unsafeHTML(Jsondiffpatch.formatters.html.format(this.selection.diff, this.selection.originalDoc))}\n              ` : ``}\n            </td>\n          </table>\n        </div>\n    `\n  }\n\n  async loadItem(item) {\n    this.selection = {\n      ...item,\n      diff: jsondiffpatch.diff(item.originalDoc, item.mergedDoc)\n    }\n  }\n\n}\n\ncustomElements.define('merge-log', MergeLog);\n","import { sharedStyles } from './shared-styles.js'\nimport axios from 'axios'\nimport * as Jsondiffpatch from 'jsondiffpatch'\nvar jsondiffpatch = Jsondiffpatch.create({});\n\n\nimport { LitElement, html } from 'lit-element'\nimport { unsafeHTML } from 'lit-html/directives/unsafe-html';\nclass SearchActiveConflicts extends LitElement {\n\n  static get styles() {\n    return [\n      sharedStyles\n    ]\n  }\n\n  static get properties(){\n    return {\n      searchString: { type: String },\n      loadCount: { type: Number },\n      selection: { type: Object },\n      ready: { type: Boolean },\n      matches: { type: Array }\n    };\n  }\n\n  constructor() {\n    super()\n    this.loadCount = 0\n    this.searchString = '' \n    this.ready = false\n    this.conflictInfos = []\n    this.matches = []\n    this.selection = { conflicts:[] }\n  }\n\n  async connectedCallback() {\n    super.connectedCallback()\n    const groupId = window.location.pathname.split('/')[2]\n    const result = await axios.get(`/db/${groupId}/_design/syncConflicts/_view/syncConflicts`)\n    const conflictInfos = []\n    for (let row of result.data.rows) {\n      const conflictInfo = await this.getDocConflictInfo(row.id)\n      conflictInfos.push(conflictInfo)\n      this.loadCount = this.loadCount + 1\n    }\n    this.conflictInfos = conflictInfos\n    this.matches = [...conflictInfos]\n    this.ready = true\n  }\n\n  render() {\n    return html`\n      <style>\n        #container {\n          margin: 15px;\n          padding: 15px;\n        }\n        .selection {\n          padding: 0px 15px;\n        }\n        .title {\n          margin: 15px 0px 5px;\n        }\n        .no-matches {\n          width: 300px\n        }\n        tr.header td {\n         font-weight: bold;\n        }\n        table.matches td {\n          text-align: right;\n          padding: 5px;\n          border: solid 1px #CCC;\n        }\n      </style>\n      <div id=\"container\">\n        <h2>Docs in Conflict</h2>\n        ${!this.ready ? html`\n          Loading docs in conflict: ${this.loadCount}\n        `: html`\n          <table>\n            <tr>\n              <td width=\"100%\">\n                <paper-input name=\"search\" type=\"text\" label=\"Search diffs\"></paper-input>\n              </td>\n              <td>\n                <select name=\"type\">\n                  <option value=\"diff\">Search on Diffs</option>\n                  <option value=\"doc\">Search on Docs</option>\n                </select>\n              </td>\n              <td>\n                <paper-button @click=\"${() => this.onSearchSubmit()}\">Submit</paper-button>\n              </td>\n            </tr>\n          </table>\n        `}\n        <table>\n          <tr>\n            <td valign=\"top\">\n              ${this.ready ? html`\n                <div class=\"no-matches\">\n                  ${this.matches.length} ${this.matches.length === 1 ? `match` : `matches`} found.\n                </div>\n              `:``}\n              ${this.matches.length > 0 ? html`\n                <table class=\"matches\">\n                  <tr class=\"header\">\n                    <td> ID </td>\n                    <td> Number of conflicts </td>\n                  </tr>\n                  ${this.matches.map(match => html`\n                    <tr @click=\"${() => { this.selection = match }}\">\n                      <td>${match.id}</td> \n                      <td>${match.conflicts.length}</td>\n                    </tr>\n                  `)}\n                </table>\n              `: ``}\n            </td>\n            <td class=\"selection\">\n              ${this.selection.id ? html`\n                <h2 class=\"title\">${this.selection.conflicts.length} Conflict Diff${this.selection.conflicts.length > 1 ? `s`:``} for ${this.selection.id}</h2>\n              `: ``}\n              ${this.selection.conflicts.map(conflict => html`\n                <h3>${conflict.rev}</h3>\n                ${unsafeHTML(Jsondiffpatch.formatters.html.format(conflict.diff, this.selection.doc))}\n              `)}\n            </td>\n          </table>\n        </div>\n    `\n  }\n\n  onSearchSubmit() {\n    const phrase = this.shadowRoot.querySelector(`[name='search']`).value\n    const type = this.shadowRoot.querySelector(`[name='type']`).value\n    if (!phrase) {\n      this.matches = this.conflictInfos\n    } else {\n      if (type === 'diff') {\n        this.diffSearch(phrase)\n      } else {\n        this.docSearch(phrase)\n      }\n    }\n  }\n\n  docSearch(phrase) {\n    this.matches = this.conflictInfos\n      .filter(conflictInfo => JSON.stringify(conflictInfo.doc).includes(phrase) || conflictInfo.conflicts.some(conflict => JSON.stringify(conflict.doc).includes(phrase)))\n  }\n\n  diffSearch(phrase) {\n    this.matches = this.conflictInfos\n      .filter(conflictInfo => conflictInfo.conflicts.some(conflict => JSON.stringify(conflict.diff).includes(phrase)))\n  }\n\n\n  async getDocConflictInfo(docId) {\n    const groupId = window.location.pathname.split('/')[2]\n    const currentDoc = (await axios.get(`/db/${groupId}/${docId}`)).data\n    const docWithConflictRevs = (await axios.get(`/db/${groupId}/${docId}?conflicts=true`)).data\n    const conflictRevisionIds = docWithConflictRevs._conflicts\n    let conflicts = []\n    if (conflictRevisionIds) {\n      for (const conflictRevisionId of conflictRevisionIds) {\n        const conflictRevisionDoc = (await axios.get(`/db/${groupId}/${docId}?rev=${conflictRevisionId}`)).data\n        const comparison = jsondiffpatch.diff(currentDoc, conflictRevisionDoc)\n        const conflict = {\n          doc: conflictRevisionDoc,\n          rev: conflictRevisionDoc._rev,\n          diff: comparison\n        }\n        conflicts.push(conflict)\n      }\n    }\n    return {\n      id: currentDoc._id,\n      rev: currentDoc._rev,\n      doc: currentDoc,\n      conflicts \n    }\n  }\n\n}\n\ncustomElements.define('search-active-conflicts', SearchActiveConflicts);\n","import { css } from 'lit-element'\n\nexport const sharedStyles = css`\n\n* {\n\tbox-sizing: border-box;\n}\n\n.container {\n\tpadding: 0px 15px;\n}\n\n/* Items are prefixed with lk- to scope these styles */\n.lk-html {\n\tfont-size: 14px;\n}\n\n.lk-body {\n\tfont-weight: 400;\n\tfont-size: 1rem;\n\tfont-family: \"Open Sans\", Helvetica, Arial, sans-serif;\n\tline-height: 1.6;\n\tcolor: #212121;\n}\n\n.lk-header {\n\tpadding: 15px;\n\twidth: 100%;\n\tbackground-color: #212a3f;\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tcolor: #fff;\n}\n\n.lk-h1 {\n\tfont-size: 1.4rem;\n\tmargin: 1rem;\n}\n.lk-h1 span {\n\tfont-size: 1rem;\n\tcolor: rgba(33,33,33,0.7);\n}\n\n.lk-instructions {\n\tmargin: 1rem;\n}\n\n.lk-btn {\n\tbox-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12);\n\tbackground-color: #3c5b8d;\n\tcolor: rgba(255,255,255,.87);\n\tcursor: pointer;\n\twhite-space: nowrap;\n\toutline: rgba(0,0,0,.870588) none 0;\n\tborder: none;\n\tpadding: 8px 30px;\n\ttext-transform: uppercase;\n\ttransition: box-shadow .2s cubic-bezier(.4,0,1,1),background-color .2s cubic-bezier(.4,0,.2,1),color .2s cubic-bezier(.4,0,.2,1);\n\ttext-decoration: none;\n\tdisplay: inline-block;\n\ttext-align: center;\n\tvertical-align: middle;\n\tline-height: 1.5;\n}\n.lk-btn-sm {\n\tpadding: 5px 20px 5px;\n}\n\n.lk-btn-container {\n\tmargin: 0 1rem 2rem;\n\ttext-align: right;\n}\n\n.lk-card {\n\tbox-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12);\n\tbackground-color: #fff;\n\tborder: 0;\n\tmargin: 0 1rem 2rem;\n\tdisplay: flex;\n\tposition: relative;\n\tflex-direction: column;\n\tword-wrap: break-word;\n\tbackground-clip: border-box;\n}\n\n.lk-input {\n\tline-height: 1.42857;\n\tfont-size: 1.1rem;\n\tpadding: 0 4px;\n\theight: 38px;\n\tdisplay: block;\n\twidth: 100%;\n}\n\n\n/**\n * Breadcrumb things\n */\n#lk-breadcrumbs {\n\tbackground-color: #546e7a;\n\tcolor: #cfd8dc;\n\tposition: relative;\n}\n#lk-breadcrumbs ul {\n\tpadding: 0 1rem;\n\tmargin: 0;\n\tlist-style: none;\n}\n#lk-breadcrumbs li {\n\tdisplay: inline-block;\n\tline-height: 2.6rem;\n}\n#lk-breadcrumbs li + li:before {\n\tfont: normal normal normal 24px/1 \"Material Design Icons\";\n\tdisplay: inline-block;\n\tfont-size: inherit;\n\tline-height: inherit;\n\tcontent: \"\";\n}\n\n#lk-breadcrumbs mwc-icon {\n\tvertical-align: bottom;\n\tposition: relative;\n\tbottom: 10px;\n}\n\n#lk-breadcrumbs a {\n\tcolor: rgba(255,255,255,0.8);\n}\n#lk-breadcrumbs a:hover {\n\tcolor: #fff;\n\ttext-decoration: none;\n}\n\n/**\n * Task list things\n */\n.lk-task-list {\n\tdisplay: flex;\n\tflex-direction: column;\n\tpadding-left: 0;\n\tmargin: 0;\n}\n.lk-task-list > li {\n\tposition: relative;\n\tbackground-color: #fff;\n\tcolor: #424242;\n\tpadding: 15px;\n\tmargin: 0;\n\ttransition: all ease .3s;\n\tborder-bottom: solid 1px #eee;\n\tdisplay: flex;\n\talign-items: center;\n\tcursor: pointer;\n}\n.lk-drop-container paper-button {\n\tpadding-bottom: 10px;\n}\n.lk-task-list > li:first-child {\n\tborder-top: 1px solid #eee;\n}\n.lk-task-list > li.lk-complete {\n\tbackground-color: #e0e0e0;\n\tcolor: rgba(66,66,66,0.5);\n\tcursor: default;\n}\n.lk-task-list > li mwc-icon {\n\tmargin-right: 1rem;\n\tfont-size: 1.4rem;\n}\n.lk-task-list > li:not(.lk-complete) mwc-icon {\n\tcolor: #ff8f00;\n}\n\n.lk-task-list > li > .lk-drop-container,\n.lk-task-list > li > .lk-btn {\n\tmargin-left: auto;\n}\n.lk-task-list > li > .lk-left {\n\tmargin: 0;\n}\n.lk-task-list > li > .lk-btn + .lk-btn {\n\tmargin-left: 5px;\n}\n\n.lk-task-list > li.lk-indent {\n\tpadding-left: 45px;\n}\n\n.lk-caps {\n\ttext-transform: uppercase;\n}\n\n.lk-status {\n\tmargin-left: 15px;\n\tcolor: rgba(33,33,33,0.7)\n}\n\n/**\n * Dropdown things\n */\n.lk-drop-container {\n}\n.lk-drop-container mwc-icon.icon {\n\tcolor: #FFF !important;\n\tmargin: 0px;\n\tposition: relative;\n\ttop: 5px;\n}\n\n.lk-drop-list {\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 30px;\n\tright: 0;\n\tmin-width: 150px;\n\tz-index: 1;\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tbox-shadow: 0 2px 5px 0 rgba(0,0,0,.26);\n\tlist-style: none;\n\tbackground-color: #fff;\t\n}\n.lk-drop-list > li {\n\tpadding: .5rem 2rem;\n\tline-height: 2rem;\n\tdisplay: block;\n\tcolor: #212529;\n\ttext-decoration: none;\n}\n.lk-drop-list > li:hover {\n\tbackground-color: #f5f5f5;\n\tcolor: #3c5b8d;\n}\n.lk-drop-list > li.lk-divider {\n\tborder-bottom: 1px solid #eee;\n}\n.lk-show {\n\tdisplay: block;\n}\n\n/**\n * Modal things\n */\n#lk-modal {\n\tdisplay: none;\n\tposition: fixed;\n\tz-index: 2;\n\tleft: 0;\n\ttop: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-color: rgba(0,0,0,0.4);\n}\n.lk-modal-content {\n\tmargin: 15% auto;\n\twidth: auto;\n\tmax-width: 300px;\n\tmin-height: 200px;\n\tbackground-color: #fff;\n\tborder: 1px solid rgba(0,0,0,.2);\n\toutline: 0;\n\tpadding: 0 2.4rem;\n}\n.lk-modal-content > div:first-child {\n\ttext-align: right;\n\tcolor: #616161;\n\tpadding: 2.4rem 0 1rem;\n}\n.lk-modal-content > div:first-child mwc-icon {\n\tcursor: pointer;\n}\n.lk-modal-content > div:last-child {\n\tpadding: 1rem 0  2.4rem;\n\ttext-align: right;\n}\n.lk-modal-content label {\n\tdisplay: block;\n\tmargin-bottom: 1rem;\n}\n#lk-modal .died, #lk-modal .moved {\n\tdisplay: none;\n}\n.jsondiffpatch-delta {\n  font-family: 'Bitstream Vera Sans Mono', 'DejaVu Sans Mono', Monaco, Courier, monospace;\n  font-size: 12px;\n  margin: 0;\n  padding: 0 0 0 12px;\n  display: inline-block;\n}\n.jsondiffpatch-delta pre {\n  font-family: 'Bitstream Vera Sans Mono', 'DejaVu Sans Mono', Monaco, Courier, monospace;\n  font-size: 12px;\n  margin: 0;\n  padding: 0;\n  display: inline-block;\n}\nul.jsondiffpatch-delta {\n  list-style-type: none;\n  padding: 0 0 0 20px;\n  margin: 0;\n}\n.jsondiffpatch-delta ul {\n  list-style-type: none;\n  padding: 0 0 0 20px;\n  margin: 0;\n}\n.jsondiffpatch-added .jsondiffpatch-property-name,\n.jsondiffpatch-added .jsondiffpatch-value pre,\n.jsondiffpatch-modified .jsondiffpatch-right-value pre,\n.jsondiffpatch-textdiff-added {\n  background: #bbffbb;\n}\n.jsondiffpatch-deleted .jsondiffpatch-property-name,\n.jsondiffpatch-deleted pre,\n.jsondiffpatch-modified .jsondiffpatch-left-value pre,\n.jsondiffpatch-textdiff-deleted {\n  background: #ffbbbb;\n  text-decoration: line-through;\n}\n.jsondiffpatch-unchanged,\n.jsondiffpatch-movedestination {\n  color: gray;\n}\n.jsondiffpatch-unchanged,\n.jsondiffpatch-movedestination > .jsondiffpatch-value {\n  transition: all 0.5s;\n  -webkit-transition: all 0.5s;\n  overflow-y: hidden;\n}\n.jsondiffpatch-unchanged-showing .jsondiffpatch-unchanged,\n.jsondiffpatch-unchanged-showing .jsondiffpatch-movedestination > .jsondiffpatch-value {\n  max-height: 100px;\n}\n.jsondiffpatch-unchanged-hidden .jsondiffpatch-unchanged,\n.jsondiffpatch-unchanged-hidden .jsondiffpatch-movedestination > .jsondiffpatch-value {\n  max-height: 0;\n}\n.jsondiffpatch-unchanged-hiding .jsondiffpatch-movedestination > .jsondiffpatch-value,\n.jsondiffpatch-unchanged-hidden .jsondiffpatch-movedestination > .jsondiffpatch-value {\n  display: block;\n}\n.jsondiffpatch-unchanged-visible .jsondiffpatch-unchanged,\n.jsondiffpatch-unchanged-visible .jsondiffpatch-movedestination > .jsondiffpatch-value {\n  max-height: 100px;\n}\n.jsondiffpatch-unchanged-hiding .jsondiffpatch-unchanged,\n.jsondiffpatch-unchanged-hiding .jsondiffpatch-movedestination > .jsondiffpatch-value {\n  max-height: 0;\n}\n.jsondiffpatch-unchanged-showing .jsondiffpatch-arrow,\n.jsondiffpatch-unchanged-hiding .jsondiffpatch-arrow {\n  display: none;\n}\n.jsondiffpatch-value {\n  display: inline-block;\n}\n.jsondiffpatch-property-name {\n  display: inline-block;\n  padding-right: 5px;\n  vertical-align: top;\n}\n.jsondiffpatch-property-name:after {\n  content: ': ';\n}\n.jsondiffpatch-child-node-type-array > .jsondiffpatch-property-name:after {\n  content: ': [';\n}\n.jsondiffpatch-child-node-type-array:after {\n  content: '],';\n}\ndiv.jsondiffpatch-child-node-type-array:before {\n  content: '[';\n}\ndiv.jsondiffpatch-child-node-type-array:after {\n  content: ']';\n}\n.jsondiffpatch-child-node-type-object > .jsondiffpatch-property-name:after {\n  content: ': {';\n}\n.jsondiffpatch-child-node-type-object:after {\n  content: '},';\n}\ndiv.jsondiffpatch-child-node-type-object:before {\n  content: '{';\n}\ndiv.jsondiffpatch-child-node-type-object:after {\n  content: '}';\n}\n.jsondiffpatch-value pre:after {\n  content: ',';\n}\nli:last-child > .jsondiffpatch-value pre:after,\n.jsondiffpatch-modified > .jsondiffpatch-left-value pre:after {\n  content: '';\n}\n.jsondiffpatch-modified .jsondiffpatch-value {\n  display: inline-block;\n}\n.jsondiffpatch-modified .jsondiffpatch-right-value {\n  margin-left: 5px;\n}\n.jsondiffpatch-moved .jsondiffpatch-value {\n  display: none;\n}\n.jsondiffpatch-moved .jsondiffpatch-moved-destination {\n  display: inline-block;\n  background: #ffffbb;\n  color: #888;\n}\n.jsondiffpatch-moved .jsondiffpatch-moved-destination:before {\n  content: ' => ';\n}\nul.jsondiffpatch-textdiff {\n  padding: 0;\n}\n.jsondiffpatch-textdiff-location {\n  color: #bbb;\n  display: inline-block;\n  min-width: 60px;\n}\n.jsondiffpatch-textdiff-line {\n  display: inline-block;\n}\n.jsondiffpatch-textdiff-line-number:after {\n  content: ',';\n}\n.jsondiffpatch-error {\n  background: red;\n  color: white;\n  font-weight: bold;\n}\n\n\n`\n","import './components/custom-app.js'\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}